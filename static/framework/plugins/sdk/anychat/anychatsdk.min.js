function BRAC_InitSDK(a) {
    var b = window.applicationCache, c = getBrowser();
    if (b && "IE" != c && "Safari" != c && "unknown browser" != c && "undefined" != typeof AnyChatSDK) return anychat = null, 
    anychat = AnyChatSDK(), anychat.InitSDK(0), "function" == typeof OnAnyChatNotifyMessage && anychat.on("OnNotifyMessage", OnAnyChatNotifyMessage), 
    "function" == typeof OnAnyChatVideoCallEvent && anychat.on("OnVideoCallEvent", OnAnyChatVideoCallEvent), 
    "function" == typeof OnAnyChatTransBuffer && anychat.on("OnTransBuffer", OnAnyChatTransBuffer), 
    "function" == typeof OnAnyChatTextMessage && anychat.on("OnTextMessage", OnAnyChatTextMessage), 
    "function" == typeof OnAnyChatObjectEvent && anychat.on("OnObjectEvent", OnAnyChatObjectEvent), 
    bSupportStreamRecordCtrlEx = !0, bSupportScriptObject = !0, bSupportObjectBusiness = !0, 
    bSupportCluster = !0, GV_ERR_SUCCESS;
    var d = "AnyChatSDKPluginDiv";
    try {
        var e = document.createElement("object");
        window.ActiveXObject || "ActiveXObject" in window ? e.classid = "clsid:91CC58C4-BA8A-400D-A176-856EDF42CB57" : e.type = "application/anychat-plugin", 
        e.id = "AnyChatSDKPlugin";
        var f = document.createElement("object");
        window.ActiveXObject || "ActiveXObject" in window ? f.classid = "clsid:B685A393-905F-45B5-B26E-FF199EEE2FD7" : f.type = "application/anychat-video", 
        f.id = "AnyChatVideoPlugin";
        var g = document.createElement("div");
        g.id = d, g.appendChild(e), g.appendChild(f), document.body.appendChild(g), e.width = "1 px", 
        e.height = "1 px", CUR_ANYCHAT_PLUGIN_VAR = e.GetVersion(0);
        var h = f.GetVersion(0), i = CUR_ANYCHAT_PLUGIN_VAR >= MIN_ANYCHAT_PLUGIN_VER && h >= MIN_VIDEO_PLUGIN_VER;
        return bSupportStreamRecordCtrlEx = CUR_ANYCHAT_PLUGIN_VAR >= "1.0.1.0", bSupportObjectBusiness = CUR_ANYCHAT_PLUGIN_VAR >= "1.0.2.3", 
        bSupportMultiStream = CUR_ANYCHAT_PLUGIN_VAR >= "1.0.3.1", bSupportCluster = CUR_ANYCHAT_PLUGIN_VAR >= "1.0.4.0", 
        a > e.GetVersion(2) && (i = !1), i ? (g.removeChild(f), anychat = e, "function" == typeof OnAnyChatNotifyMessage && BRAC_RegisterCallBack(anychat, "OnNotifyMessage", OnAnyChatNotifyMessage), 
        "function" == typeof OnAnyChatTextMessage && BRAC_RegisterCallBack(anychat, "OnTextMessage", OnAnyChatTextMessage), 
        "function" == typeof OnAnyChatTransBuffer && BRAC_RegisterCallBack(anychat, "OnTransBuffer", OnAnyChatTransBuffer), 
        "function" == typeof OnAnyChatTransBufferEx && BRAC_RegisterCallBack(anychat, "OnTransBufferEx", OnAnyChatTransBufferEx), 
        "function" == typeof OnAnyChatTransFile && BRAC_RegisterCallBack(anychat, "OnTransFile", OnAnyChatTransFile), 
        "function" == typeof OnAnyChatVolumeChange && BRAC_RegisterCallBack(anychat, "OnVolumeChange", OnAnyChatVolumeChange), 
        "function" == typeof OnAnyChatSDKFilterData && BRAC_RegisterCallBack(anychat, "OnSDKFilterData", OnAnyChatSDKFilterData), 
        "function" == typeof OnAnyChatVideoCallEvent && BRAC_RegisterCallBack(anychat, "OnVideoCallEvent", OnAnyChatVideoCallEvent), 
        "function" == typeof OnAnyChatRecordSnapShot && BRAC_RegisterCallBack(anychat, "OnRecordSnapShot", OnAnyChatRecordSnapShot), 
        "function" == typeof OnAnyChatRecordSnapShotEx && bSupportStreamRecordCtrlEx && BRAC_RegisterCallBack(anychat, "OnRecordSnapShotEx", OnAnyChatRecordSnapShotEx), 
        "function" == typeof OnAnyChatObjectEvent && bSupportObjectBusiness && BRAC_RegisterCallBack(anychat, "OnObjectEvent", OnAnyChatObjectEvent)) : document.body.removeChild(g), 
        i ? GV_ERR_SUCCESS : GV_ERR_PLUGINOLDVERSION;
    } catch (j) {
        var g = BRAC_GetDmoObject(d);
        return g && document.body.removeChild(g), GV_ERR_PLUGINNOINSTALL;
    }
}

function BRAC_RegisterCallBack(a, b, c) {
    "function" == typeof c && (window.ActiveXObject || "ActiveXObject" in window ? window.ActiveXObject && a.attachEvent ? a.attachEvent(b, c) : BRAC_AttachIE11Event(a, b, c) : a[b] = c);
}

function BRAC_GetDmoObject(a) {
    return document.getElementById ? document.getElementById(a) : window[a] ? window[a] : null;
}

function BRAC_AttachIE11Event(a, b, c) {
    var d, e = /^function\s?([^\s(]*)/, f = /\(\)|\(.+\)/, g = c.toString().match(f)[0], h = c.name || c.toString().match(e)[1];
    try {
        d = document.createElement("script"), d.setAttribute("for", a.id);
    } catch (i) {
        d = document.createElement('<script for="' + a.id + '">');
    }
    d.event = b + g, d.appendChild(document.createTextNode(h + g + ";")), document.body.appendChild(d);
}

function BRAC_NativeCreateVideoPlugin(a, b, c, d) {
    var e = BRAC_GetDmoObject(c);
    null != e ? (e.SetIPCGuid(BRAC_GetIPCGuid()), e.SetUserId(a), bSupportMultiStream && e.SetStreamIndex(d)) : (e = document.createElement("object"), 
    window.ActiveXObject || "ActiveXObject" in window ? e.classid = "clsid:B685A393-905F-45B5-B26E-FF199EEE2FD7" : e.type = "application/anychat-video", 
    e.id = c, b.appendChild(e), e.width = "100%", e.height = "100%", e.SetIPCGuid(BRAC_GetIPCGuid()), 
    e.SetUserId(a), bSupportMultiStream && e.SetStreamIndex(d));
}

function BRAC_SetVideoPos(a, b, c) {
    return bSupportScriptObject ? anychat.SetVideoPos(a, b, c) : BRAC_NativeCreateVideoPlugin(a, b, c, 0);
}

function BRAC_SetVideoPosEx(a, b, c, d) {
    return BRAC_NativeCreateVideoPlugin(a, b, c, d);
}

function BRAC_GetVersion(a) {
    return anychat.GetVersion(a);
}

function BRAC_SetServerAuthPass(a) {
    return anychat.SetServerAuthPass(a);
}

function BRAC_Connect(a, b) {
    return anychat.Connect(a, b);
}

function BRAC_Login(a, b, c) {
    return anychat.Login(a, b, c);
}

function BRAC_LoginEx(a, b, c, d, e, f, g) {
    return bSupportCluster ? anychat.LoginEx(a, parseInt(b), c, d, parseInt(e), f, g) : GV_ERR_PLUGINOLDVERSION;
}

function BRAC_EnterRoom(a, b, c) {
    return anychat.EnterRoom(parseInt(a), b, c);
}

function BRAC_EnterRoomEx(a, b) {
    return anychat.EnterRoomEx(a, b);
}

function BRAC_LeaveRoom(a) {
    return anychat.LeaveRoom(parseInt(a));
}

function BRAC_Logout() {
    return anychat.Logout();
}

function BRAC_GetOnlineUser() {
    if (bSupportScriptObject) return anychat.GetRoomOnlineUsers(-1);
    var a = new Array(), b = anychat.PrepareFetchRoomUsers();
    if (b) for (var c = 0; ;) {
        var d = anychat.FetchNextRoomUsers();
        if (d == -1) break;
        a[c++] = d;
    }
    return a;
}

function BRAC_GetRoomOnlineUsers(a) {
    if (bSupportScriptObject) return anychat.GetRoomOnlineUsers(a);
    var b = new Array(), c = anychat.PrepareFetchRoomUsers();
    if (c) for (var d = 0; ;) {
        var e = anychat.FetchNextRoomUsers();
        if (e == -1) break;
        b[d++] = e;
    }
    return b;
}

function BRAC_GetCameraState(a) {
    return anychat.QueryUserStateInt(a, BRAC_USERSTATE_CAMERA);
}

function BRAC_GetSpeakState(a) {
    return anychat.QueryUserStateInt(a, BRAC_USERSTATE_HOLDMIC);
}

function BRAC_GetUserLevel(a) {
    return anychat.QueryUserStateInt(a, BRAC_USERSTATE_LEVEL);
}

function BRAC_GetUserName(a) {
    return anychat.QueryUserStateString(a, BRAC_USERSTATE_NICKNAME);
}

function BRAC_QueryUserStateInt(a, b) {
    return anychat.QueryUserStateInt(a, b);
}

function BRAC_QueryUserStateString(a, b) {
    return anychat.QueryUserStateString(a, b);
}

function BRAC_ShowLVProperty(a) {
    return anychat.ShowLVProperty(a);
}

function BRAC_EnumDevices(a) {
    for (var b = new Array(), c = anychat.PrepareFetchDevices(a), d = 0; d < c; d++) b[d] = anychat.FetchNextDevice(a);
    return b;
}

function BRAC_SelectVideoCapture(a, b) {
    return anychat.SelectDevice(a, b);
}

function BRAC_GetCurrentDevice(a) {
    return anychat.GetCurrentDevice(a);
}

function BRAC_UserCameraControl(a, b) {
    return anychat.UserCameraControl(a, b);
}

function BRAC_UserCameraControlEx(a, b, c, d, e) {
    return bSupportMultiStream ? anychat.UserCameraControlEx(a, b, c, d, e) : 0 == c ? anychat.UserCameraControl(a, b) : -1;
}

function BRAC_UserSpeakControl(a, b) {
    return anychat.UserSpeakControl(a, b);
}

function BRAC_UserSpeakControlEx(a, b, c, d, e) {
    return bSupportMultiStream ? anychat.UserSpeakControlEx(a, b, c, d, e) : 0 == c ? anychat.UserSpeakControl(a, b) : -1;
}

function BRAC_AudioGetVolume(a) {
    return anychat.AudioGetVolume(a);
}

function BRAC_AudioSetVolume(a, b) {
    return anychat.AudioSetVolume(a, b);
}

function BRAC_StreamRecordCtrl(a, b, c, d) {
    return anychat.StreamRecordCtrl(a, b, c, d);
}

function BRAC_StreamRecordCtrlEx(a, b, c, d, e) {
    return bSupportStreamRecordCtrlEx ? anychat.StreamRecordCtrlEx(a, b, c, d, e) : anychat.StreamRecordCtrl(a, b, c, d);
}

function BRAC_SnapShot(a, b, c) {
    return anychat.SnapShot(a, b, c);
}

function BRAC_TransBuffer(a, b) {
    return anychat.TransBuffer(a, b, 0);
}

function BRAC_TransBufferEx(a, b, c, d, e) {
    return anychat.TransBufferEx(a, b, c, d, e);
}

function BRAC_TransFile(a, b, c, d, e) {
    return anychat.TransFile(a, b, c, d, e);
}

function BRAC_QueryTransTaskInfo(a, b, c) {
    return anychat.QueryTransTaskInfo(a, b, c);
}

function BRAC_CancelTransTask(a, b) {
    return anychat.CancelTransTask(a, b);
}

function BRAC_SendTextMessage(a, b, c) {
    return anychat.SendTextMessage(a, b, c, 0);
}

function BRAC_SendSDKFilterData(a) {
    return anychat.SendSDKFilterData(a, 0);
}

function BRAC_ChangeChatMode(a) {
    return anychat.ChangeChatMode(a);
}

function BRAC_GetUserChatMode(a) {
    return anychat.GetUserChatMode(a);
}

function BRAC_PrivateChatRequest(a) {
    return anychat.PrivateChatRequest(a);
}

function BRAC_PrivateChatEcho(a, b, c) {
    return anychat.PrivateChatEcho(a, b, c);
}

function BRAC_PrivateChatEchoEx(a, b, c) {
    return anychat.PrivateChatEchoEx(a, b, c);
}

function BRAC_PrivateChatExit(a) {
    return anychat.PrivateChatExit(a);
}

function BRAC_SetSDKOption(a, b) {
    return "string" == typeof b ? anychat.SetSDKOptionString(a, b) : anychat.SetSDKOptionInt(a, b);
}

function BRAC_GetSDKOptionInt(a) {
    return anychat.GetSDKOptionInt(a);
}

function BRAC_GetSDKOptionString(a) {
    return anychat.GetSDKOptionString(a);
}

function BRAC_GetSDKOptionStringEx(a, b, c) {
    return anychat.GetSDKOptionStringEx(a, b, c);
}

function BRAC_GetIPCGuid() {
    var a = 11e3;
    return anychat.GetSDKOptionString(a);
}

function BRAC_MultiCastControl(a, b, c, d, e) {
    return anychat.MultiCastControl(a, b, c, d, e);
}

function BRAC_VideoCallControl(a, b, c, d, e, f) {
    return anychat.VideoCallControl(a, b, c, d, e, f);
}

function BRAC_GetUserFriends() {
    if (bSupportScriptObject) return anychat.GetUserFriends();
    var a = new Array(), b = anychat.PrepareFetchUserFriends();
    if (b) for (var c = 0; ;) {
        var d = anychat.FetchNextUserFriend();
        if (d == -1) break;
        a[c++] = d;
    }
    return a;
}

function BRAC_GetFriendStatus(a) {
    return anychat.GetFriendStatus(a);
}

function BRAC_GetUserGroups() {
    if (bSupportScriptObject) return anychat.GetUserGroups();
    var a = new Array(), b = anychat.PrepareFetchUserGroups();
    if (b) for (var c = 0; ;) {
        var d = anychat.FetchNextUserGroup();
        if (d == -1) break;
        a[c++] = d;
    }
    return a;
}

function BRAC_GetGroupFriends(a) {
    if (bSupportScriptObject) return anychat.GetGroupFriends(a);
    var b = new Array(), c = anychat.PrepareFetchGroupFriends(a);
    if (c) for (var d = 0; ;) {
        var e = anychat.FetchNextGroupFriend(a);
        if (e == -1) break;
        b[d++] = e;
    }
    return b;
}

function BRAC_GetUserInfo(a, b) {
    return anychat.GetUserInfo(a, b);
}

function BRAC_GetGroupName(a) {
    return anychat.GetGroupName(a);
}

function BRAC_UserInfoControl(a, b, c, d, e) {
    return anychat.UserInfoControl(a, b, c, d, e);
}

function BRAC_ObjectGetIdList(a) {
    if (bSupportScriptObject) return anychat.ObjectGetIdList(a);
    var b = new Array();
    if (!bSupportObjectBusiness) return b;
    var c = anychat.PrepareFetchObjectIds(a);
    if (c) for (var d = 0; ;) {
        var e = anychat.FetchNextObjectId(a);
        if (e == -1) break;
        b[d++] = e;
    }
    return b;
}

function BRAC_ObjectGetIntValue(a, b, c) {
    return bSupportObjectBusiness ? anychat.GetObjectIntValue(a, b, c) : -1;
}

function BRAC_ObjectGetStringValue(a, b, c) {
    return bSupportObjectBusiness ? anychat.GetObjectStringValue(a, b, c) : -1;
}

function BRAC_ObjectSetValue(a, b, c, d) {
    return bSupportObjectBusiness ? "string" == typeof d ? anychat.SetObjectStringValue(a, b, c, d) : anychat.SetObjectIntValue(a, b, c, d) : -1;
}

function BRAC_ObjectControl(a, b, c, d, e, f, g, h) {
    return bSupportObjectBusiness ? anychat.ObjectControl(a, b, c, d, e, f, g, h) : -1;
}

function BRAC_SetUserStreamInfo(a, b, c, d) {
    return bSupportMultiStream ? "string" == typeof d ? anychat.SetUserStreamInfoString(a, b, c, d) : anychat.SetUserStreamInfoInt(a, b, c, d) : -1;
}

function BRAC_GetUserStreamInfoInt(a, b, c) {
    return bSupportMultiStream ? anychat.GetUserStreamInfoInt(a, b, c) : 0;
}

function BRAC_GetUserStreamInfoString(a, b, c) {
    return bSupportMultiStream ? anychat.GetUserStreamInfoString(a, b, c) : "";
}

function QueryInfoFromServer(a, b) {
    return CUR_ANYCHAT_PLUGIN_VAR < "1.0.5.0" ? "" : anychat.QueryInfoFromServer(a, b);
}

function getBrowser() {
    var a = "unknown browser", b = navigator.userAgent.toLowerCase(), c = {
        ie: /msie/.test(b) && !/opera/.test(b),
        op: !/msie/.test(b) && /opera/.test(b),
        sa: /version.*safari/.test(b),
        ch: /chrome/.test(b) && window.navigator.webkitPersistentStorage,
        ff: /firefox/.test(b),
        qh360: /chrome/.test(b) && !window.navigator.webkitPersistentStorage,
        qq: /qqbrowser/.test(b),
        sg: /metasr/.test(b)
    };
    return c.ch ? a = "Chrome" : c.ie ? a = "IE" : c.ff ? a = "Firefox" : c.sa ? a = "Safari" : c.qh360 ? a = "360������" : c.op ? a = "Opera" : c.qq ? a = "QQ������" : c.sg && (a = "�ѹ�������"), 
    a;
}

var BRAC_AD_WAVEIN = 0, BRAC_AD_WAVEOUT = 1, BRAC_DEVICE_VIDEOCAPTURE = 1, BRAC_DEVICE_AUDIOCAPTURE = 2, BRAC_DEVICE_AUDIOPLAYBACK = 3, BRAC_SO_AUDIO_VADCTRL = 1, BRAC_SO_AUDIO_NSCTRL = 2, BRAC_SO_AUDIO_ECHOCTRL = 3, BRAC_SO_AUDIO_AGCCTRL = 4, BRAC_SO_AUDIO_CAPTUREMODE = 5, BRAC_SO_AUDIO_MICBOOST = 6, BRAC_SO_AUDIO_AUTOPARAM = 7, BRAC_SO_AUDIO_MONOBITRATE = 8, BRAC_SO_AUDIO_STEREOBITRATE = 9, BRAC_SO_AUDIO_PLAYDRVCTRL = 70, BRAC_SO_AUDIO_CNGCTRL = 71, BRAC_SO_AUDIO_CODECID = 72, BRAC_SO_AUDIO_SOFTVOLMODE = 73, BRAC_SO_AUDIO_RECORDDRVCTRL = 74, BRAC_SO_RECORD_VIDEOBR = 10, BRAC_SO_RECORD_AUDIOBR = 11, BRAC_SO_RECORD_TMPDIR = 12, BRAC_SO_SNAPSHOT_TMPDIR = 13, BRAC_SO_RECORD_FILETYPE = 140, BRAC_SO_RECORD_WIDTH = 141, BRAC_SO_RECORD_HEIGHT = 142, BRAC_SO_RECORD_FILENAMERULE = 143, BRAC_SO_RECORD_CLIPMODE = 144, BRAC_SO_RECORD_DISABLEDATEDIR = 145, BRAC_SO_CORESDK_TMPDIR = 14, BRAC_SO_CORESDK_MAGICADJUST = 15, BRAC_SO_CORESDK_LOADCODEC = 16, BRAC_SO_CORESDK_USEARMV6LIB = 17, BRAC_SO_CORESDK_USEHWCODEC = 18, BRAC_SO_CORESDK_REMOTEDEBUG = 19, BRAC_SO_CORESDK_PATH = 20, BRAC_SO_CORESDK_DUMPCOREINFO = 21, BRAC_SO_CORESDK_MAINVERSION = 22, BRAC_SO_CORESDK_SUBVERSION = 23, BRAC_SO_CORESDK_BUILDTIME = 24, BRAC_SO_CORESDK_ACTIVESTATE = 25, BRAC_SO_CORESDK_EXTVIDEOINPUT = 26, BRAC_SO_CORESDK_EXTAUDIOINPUT = 27, BRAC_SO_CORESDK_LOWDELAYCTRL = 28, BRAC_SO_LOCALVIDEO_BITRATECTRL = 30, BRAC_SO_LOCALVIDEO_QUALITYCTRL = 31, BRAC_SO_LOCALVIDEO_GOPCTRL = 32, BRAC_SO_LOCALVIDEO_FPSCTRL = 33, BRAC_SO_LOCALVIDEO_PRESETCTRL = 34, BRAC_SO_LOCALVIDEO_APPLYPARAM = 35, BRAC_SO_LOCALVIDEO_VIDEOSIZEPOLITIC = 36, BRAC_SO_LOCALVIDEO_DEINTERLACE = 37, BRAC_SO_LOCALVIDEO_WIDTHCTRL = 38, BRAC_SO_LOCALVIDEO_HEIGHTCTRL = 39, BRAC_SO_LOCALVIDEO_FOCUSCTRL = 90, BRAC_SO_LOCALVIDEO_PIXFMTCTRL = 91, BRAC_SO_LOCALVIDEO_OVERLAY = 92, BRAC_SO_LOCALVIDEO_CODECID = 93, BRAC_SO_LOCALVIDEO_ROTATECTRL = 94, BRAC_SO_LOCALVIDEO_CAPDRIVER = 95, BRAC_SO_LOCALVIDEO_FIXCOLORDEVIA = 96, BRAC_SO_LOCALVIDEO_TVFORMAT = 104, BRAC_SO_LOCALVIDEO_OVERLAYTIMESTAMP = 105, BRAC_SO_LOCALVIDEO_DEVICENAME = 106, BRAC_SO_NETWORK_P2PPOLITIC = 40, BRAC_SO_NETWORK_P2PCONNECT = 41, BRAC_SO_NETWORK_P2PBREAK = 42, BRAC_SO_NETWORK_TCPSERVICEPORT = 43, BRAC_SO_NETWORK_UDPSERVICEPORT = 44, BRAC_SO_NETWORK_MULTICASTPOLITIC = 45, BRAC_SO_NETWORK_TRANSBUFMAXBITRATE = 46, BRAC_SO_NETWORK_AUTORECONNECT = 47, BRAC_SO_PROXY_FUNCTIONCTRL = 50, BRAC_SO_PROXY_VIDEOCTRL = 51, BRAC_SO_PROXY_AUDIOCTRL = 52, BRAC_SO_STREAM_MAXBUFFERTIME = 60, BRAC_SO_STREAM_SMOOTHPLAYMODE = 61, BRAC_SO_VIDEOSHOW_MODECTRL = 80, BRAC_SO_VIDEOSHOW_SETPRIMARYUSER = 81, BRAC_SO_VIDEOSHOW_SETOVERLAYUSER = 82, BRAC_SO_VIDEOSHOW_DRIVERCTRL = 83, BRAC_SO_VIDEOSHOW_CLIPMODE = 86, BRAC_SO_CORESDK_TICKOUTUSER = 110, BRAC_SO_CORESDK_DEVICEMODE = 130, BRAC_SO_CORESDK_SCREENCAMERACTRL = 131, BRAC_SO_CORESDK_UPLOADLOGINFO = 134, BRAC_SO_CORESDK_WRITELOG = 135, BRAC_SO_CORESDK_NEWLOGFILE = 136, BRAC_SO_UDPTRACE_MODE = 160, BRAC_SO_UDPTRACE_PACKSIZE = 161, BRAC_SO_UDPTRACE_BITRATE = 162, BRAC_SO_UDPTRACE_START = 163, BRAC_SO_UDPTRACE_LOCALRECVNUM = 164, BRAC_SO_UDPTRACE_SERVERRECVNUM = 165, BRAC_SO_UDPTRACE_SOURCESENDNUM = 166, BRAC_SO_UDPTRACE_SENDUSERID = 167, BRAC_STREAMINFO_VIDEOWIDTH = 180, BRAC_STREAMINFO_VIDEOHEIGHT = 181, BRAC_STREAMINFO_VIDEOFPS = 182, BRAC_STREAMINFO_VIDEOBITRATE = 183, BRAC_STREAMINFO_VIDEOCODECID = 184, BRAC_STREAMINFO_VIDEOPACKLOSSRATE = 185, BRAC_STREAMINFO_ADUIOCHANNELS = 190, BRAC_STREAMINFO_AUDIOSAMPLERATE = 191, BRAC_STREAMINFO_AUDIOBITRATE = 192, BRAC_STREAMINFO_AUDIOCODECID = 193, BRAC_STREAMINFO_AUDIOPACKLOSSRATE = 194, BRAC_SO_OBJECT_INITFLAGS = 200, BRAC_SO_CLOUD_APPGUID = 300, BRAC_SO_ENABLEWEBSERVICE = 11002, BRAC_SO_LOCALPATH2URL = 11003, BRAC_SO_GETTASKPATHNAME = 11004, BRAC_SO_VIDEOBKIMAGE = 11006, BRAC_TRANSTASK_PROGRESS = 1, BRAC_TRANSTASK_BITRATE = 2, BRAC_TRANSTASK_STATUS = 3, BRAC_TRANSTASK_SAVEASPATH = 4, BRAC_RECORD_FLAGS_VIDEO = 1, BRAC_RECORD_FLAGS_AUDIO = 2, BRAC_RECORD_FLAGS_SERVER = 4, BRAC_RECORD_FLAGS_MIXAUDIO = 16, BRAC_RECORD_FLAGS_MIXVIDEO = 32, BRAC_RECORD_FLAGS_ABREAST = 256, BRAC_RECORD_FLAGS_STEREO = 512, BRAC_RECORD_FLAGS_SNAPSHOT = 1024, BRAC_RECORD_FLAGS_LOCALCB = 2048, BRAC_RECORD_FLAGS_STREAM = 4096, BRAC_RECORD_FLAGS_USERFILENAME = 8192, ANYCHAT_RECORD_FLAGS_VIDEO = BRAC_RECORD_FLAGS_VIDEO, ANYCHAT_RECORD_FLAGS_AUDIO = BRAC_RECORD_FLAGS_AUDIO, ANYCHAT_RECORD_FLAGS_SERVER = BRAC_RECORD_FLAGS_SERVER, ANYCHAT_RECORD_FLAGS_MIXAUDIO = BRAC_RECORD_FLAGS_MIXAUDIO, ANYCHAT_RECORD_FLAGS_MIXVIDEO = BRAC_RECORD_FLAGS_MIXVIDEO, ANYCHAT_RECORD_FLAGS_ABREAST = BRAC_RECORD_FLAGS_ABREAST, ANYCHAT_RECORD_FLAGS_STEREO = BRAC_RECORD_FLAGS_STEREO, ANYCHAT_RECORD_FLAGS_SNAPSHOT = BRAC_RECORD_FLAGS_SNAPSHOT, ANYCHAT_RECORD_FLAGS_LOCALCB = BRAC_RECORD_FLAGS_LOCALCB, ANYCHAT_RECORD_FLAGS_STREAM = BRAC_RECORD_FLAGS_STREAM, ANYCHAT_RECORD_FLAGS_USERFILENAME = BRAC_RECORD_FLAGS_USERFILENAME, ANYCHAT_VIDEOCLIPMODE_AUTO = 0, ANYCHAT_VIDEOCLIPMODE_OVERLAP = 1, ANYCHAT_VIDEOCLIPMODE_SHRINK = 2, ANYCHAT_VIDEOCLIPMODE_STRETCH = 3, ANYCHAT_VIDEOCLIPMODE_DYNAMIC = 4, BRAC_MCPOLITIC_DISABLE = 0, BRAC_MCPOLITIC_ONLYLOCALMC = 1, BRAC_MCPOLITIC_SERVERANDLOCALMC = 2, BRAC_MCPOLITIC_ONLYSERVERMC = 3, BRAC_MCPOLITIC_SERVERANDSERVERMC = 4, BRAC_MCFLAGS_JOINGROUP = 1, BRAC_MCFLAGS_LEAVEGROUP = 2, BRAC_MCFLAGS_SENDDATA = 16, BRAC_MCFLAGS_RECVDATA = 32, BRAC_USERSTATE_CAMERA = 1, BRAC_USERSTATE_HOLDMIC = 2, BRAC_USERSTATE_SPEAKVOLUME = 3, BRAC_USERSTATE_RECORDING = 4, BRAC_USERSTATE_LEVEL = 5, BRAC_USERSTATE_NICKNAME = 6, BRAC_USERSTATE_LOCALIP = 7, BRAC_USERSTATE_INTERNETIP = 8, BRAC_USERSTATE_VIDEOBITRATE = 9, BRAC_USERSTATE_AUDIOBITRATE = 10, BRAC_USERSTATE_P2PCONNECT = 11, BRAC_USERSTATE_NETWORKSTATUS = 12, BRAC_USERSTATE_VIDEOSIZE = 13, BRAC_USERSTATE_PACKLOSSRATE = 14, BRAC_USERSTATE_DEVICETYPE = 15, WM_GV = 1224, WM_GV_CONNECT = WM_GV + 1, WM_GV_LOGINSYSTEM = WM_GV + 2, WM_GV_ENTERROOM = WM_GV + 3, WM_GV_MICSTATECHANGE = WM_GV + 4, WM_GV_USERATROOM = WM_GV + 5, WM_GV_LINKCLOSE = WM_GV + 6, WM_GV_ONLINEUSER = WM_GV + 7, WM_GV_CAMERASTATE = WM_GV + 11, WM_GV_CHATMODECHG = WM_GV + 12, WM_GV_ACTIVESTATE = WM_GV + 13, WM_GV_P2PCONNECTSTATE = WM_GV + 14, WM_GV_PRIVATEREQUEST = WM_GV + 21, WM_GV_PRIVATEECHO = WM_GV + 22, WM_GV_PRIVATEEXIT = WM_GV + 23, WM_GV_VIDEOFULLSCREEN = WM_GV + 32, WM_GV_SDKWARNING = WM_GV + 41, WM_GV_USERINFOUPDATE = WM_GV + 16, WM_GV_FRIENDSTATUS = WM_GV + 17, WM_GV_VIDEOSIZECHG = WM_GV + 15, BRAC_VIDEOCALL_EVENT_REQUEST = 1, BRAC_VIDEOCALL_EVENT_REPLY = 2, BRAC_VIDEOCALL_EVENT_START = 3, BRAC_VIDEOCALL_EVENT_FINISH = 4, BRAC_VIDEOCALL_FLAGS_AUDIO = 1, BRAC_VIDEOCALL_FLAGS_VIDEO = 2, BRAC_VIDEOCALL_FLAGS_FBSRCAUDIO = 16, BRAC_VIDEOCALL_FLAGS_FBSRCVIDEO = 32, BRAC_VIDEOCALL_FLAGS_FBTARAUDIO = 64, BRAC_VIDEOCALL_FLAGS_FBTARVIDEO = 128, GV_ERR_SUCCESS = 0, GV_ERR_PLUGINNOINSTALL = 101e4, GV_ERR_PLUGINOLDVERSION = 1010001, GV_ERR_SESSION_QUIT = 100101, GV_ERR_SESSION_OFFLINE = 100102, GV_ERR_SESSION_BUSY = 100103, GV_ERR_SESSION_REFUSE = 100104, GV_ERR_SESSION_TIMEOUT = 100105, GV_ERR_SESSION_DISCONNECT = 100106, BRAC_ROTATION_FLAGS_MIRRORED = 4096, BRAC_ROTATION_FLAGS_ROTATION90 = 8192, BRAC_ROTATION_FLAGS_ROTATION180 = 16384, BRAC_ROTATION_FLAGS_ROTATION270 = 32768, BRAC_USERINFO_CTRLCODE_ROTATION = 8, BRAC_USERINFO_CTRLCODE_DEBUGLOG = 9, BRAC_USERINFO_CTRLCODE_LVORIENTFIX = 10, ANYCHAT_SERVERQUERY_USERIDBYNAME = 1, ANYCHAT_SERVERQUERY_USERIDBYSTRID = 2, ANYCHAT_SERVERQUERY_STRIDBYUSERID = 3, ANYCHATWEB_VIDEO_SO_OVERLAY = 8, ANYCHATWEB_VIDEO_SO_DISABLEFULLSCREEN = 9, ANYCHATWEB_VIDEO_SO_EXTENDEDSCREEN = 10, MIN_ANYCHAT_PLUGIN_VER = "1.0.0.6", MIN_VIDEO_PLUGIN_VER = "1.0.0.4", CUR_ANYCHAT_PLUGIN_VAR = "", anychat = null, bSupportStreamRecordCtrlEx = !1, bSupportObjectBusiness = !1, bSupportMultiStream = !1, bSupportScriptObject = !1, bSupportCluster = !1;
//# sourceMappingURL=anychatsdk.min.js.map
/*! 康美网络医院 最后修改于： 2016-10-20 */