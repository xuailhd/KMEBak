!function(a, b) {
    "object" == typeof exports && "object" == typeof module ? module.exports = b() : "function" == typeof define && define.amd ? define([], b) : "object" == typeof exports ? exports.TLSHelper = b() : a.TLSHelper = b();
}(this, function() {
    return function(a) {
        function b(d) {
            if (c[d]) return c[d].exports;
            var e = c[d] = {
                exports: {},
                id: d,
                loaded: !1
            };
            return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports;
        }
        var c = {};
        return b.m = a, b.c = c, b.p = "", b(0);
    }([ function(a, b, c) {
        function d(a, b) {
            if (!a) throw new Error('we need sdkappid and url, like {sdkappid: 123, url: "http://www.example.com/success.html"}');
            for (var c = [ "sdkappid", "url" ], d = 0; d < c.length; d++) if (!a[c[d]]) throw new Error("we need option " + c[d]);
            var g = f + "/portal";
            for (var h in a) a.hasOwnProperty(h) && (g = e.setQuery(g, h, a[h]));
            return b && (g = e.setQuery(g, "action", "reg")), g;
        }
        var e = c(1), f = "https://tls.qcloud.com", g = {};
        g.goLogin = function(a) {
            location.href = d(a);
        }, g.goReg = function(a) {
            location.href = d(a, !0);
        }, g.getQuery = e.getQuery, g.setQuery = e.setQuery, g.fetchUserSig = function(a) {
            if ("undefined" == typeof window.tlsGetUserSig) throw new Error("jsonp callback window.tlsGetUserSig is not defined!");
            a = a || {};
            var b = f + "/getusersig", c = {
                sdkappid: a.sdkappid || e.getQuery("sdkappid"),
                identifier: a.identifier || e.getQuery("identifier"),
                tmpsig: a.tmpsig || e.getQuery("tmpsig")
            };
            for (var d in c) c.hasOwnProperty(d) && (b = e.setQuery(b, d, c[d]));
            e.jsonp(b);
        }, g.anologin = function(a) {
            if ("undefined" == typeof window.tlsAnoLogin) throw new Error("jsonp callback window.tlsAnoLogin is not defined!");
            if ("undefined" == typeof window.Encrypt || !Encrypt.getRSAH1) throw new Error("required script https://tls.qcloud.com/libs/encrypt.min.js");
            a = a || {};
            var b = {
                sdkappid: a.sdkappid || e.getQuery("sdkappid"),
                url: a.url || e.getQuery("url"),
                passwd: Encrypt.getRSAH1()
            }, c = f + "/anologin?";
            for (var d in b) b.hasOwnProperty(d) && (c = e.setQuery(c, d, b[d]));
            e.jsonp(c);
        }, a.exports = g;
    }, function(module, exports) {
        var Blue = {
            http: {},
            dom: {},
            css: {},
            str: {},
            report: {},
            local: {}
        };
        Blue.each = function(a) {
            var b = "";
            for (var c in a) b += c + ": " + a[c] + "\n";
            return b;
        }, Blue.extend = function(a, b, c) {
            for (var d in b) a[d] = b[d];
            return a;
        };
        var dom = function() {
            function a(a) {
                return "string" == typeof a ? document.getElementById(a) : a;
            }
            function b(b, c, d) {
                if (b) {
                    if (b = a(b), document.addEventListener) return b.addEventListener(c, d, !1), f.push([ b, c, d ]), 
                    d;
                    if (document.attachEvent) {
                        var e = function() {
                            return d.apply(b, arguments);
                        };
                        return b.attachEvent("on" + c, e), f.push([ b, c, e ]), e;
                    }
                }
            }
            function c(a, b, c) {
                document.addEventListener ? a.removeEventListener(b, c, !1) : a.detachEvent("on" + b, c);
            }
            function d() {
                for (var a = 0; a < f.length; a++) {
                    var b = f[a];
                    c(b[0], b[1], b[2]);
                }
            }
            function e(a, c) {
                b(a, "input", c), b(a, "propertychange", function(a) {
                    "value" == a.propertyName && c && c.apply(a.srcElement, arguments);
                });
            }
            var f = [];
            return window.onunload = d, {
                el: a,
                on: b,
                off: c,
                oninput: e
            };
        }(), css = function() {
            function a(a, b, c) {
                if (a) {
                    a = dom.el(a);
                    for (var d = a.className.split(/\s+/), e = {}, f = 0; f < d.length; f++) d[f] && (e[d[f]] = !0);
                    b && (e[b] = !0), c && delete e[c];
                    var g = [];
                    for (var h in e) e.hasOwnProperty(h) && g.push(h);
                    a.className = g.join(" ");
                }
            }
            function b(b, c) {
                a(b, c, !1);
            }
            function c(b, c) {
                a(b, !1, c);
            }
            return {
                addClass: b,
                removeClass: c,
                hasClass: function(a, b) {
                    return !!a.className.match(new RegExp("(^|\\s)" + b + "(\\s|$)"));
                },
                show: function(a) {
                    a = dom.el(a), a && (a.style.display = "block");
                },
                hide: function(a) {
                    a = dom.el(a), a && (a.style.display = "none");
                }
            };
        }(), string = function() {
            return {
                trim: function(a) {
                    if (!a) return "";
                    a += "";
                    for (var a = a.replace(/^\s+/, ""), b = /\s/, c = a.length; b.test(a.charAt(--c)); ) ;
                    return a.slice(0, c + 1);
                }
            };
        }(), http = function() {
            function str2JSON(a) {
                a = string.trim(a);
                var b = /^[\],:{}\s]*$/, c = /(?:^|:|,)(?:\s*\[)+/g, d = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, e = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g;
                return b.test(a.replace(d, "@").replace(e, "]").replace(c, "")) ? new Function("return " + a)() : {};
            }
            function getXHR() {
                return window.ActiveXObject ? new ActiveXObject("Microsoft.XMLHTTP") : new XMLHttpRequest();
            }
            function ajax(url, para, cb, method, type) {
                var xhr = getXHR();
                return xhr.open(method, url), xhr.onreadystatechange = function() {
                    4 == xhr.readyState && ((xhr.status >= 200 && xhr.status < 300 || 304 === xhr.status || 1223 === xhr.status || 0 === xhr.status) && cb("undefined" == typeof type && xhr.responseText ? eval("(" + xhr.responseText + ")") : xhr.responseText), 
                    xhr = null);
                }, xhr.send(para), xhr;
            }
            return {
                post: function(a, b, c, d) {
                    var e = "";
                    for (var f in b) e += "&" + f + "=" + b[f];
                    return ajax(a, e, c, "POST", d);
                },
                get: function(a, b, c, d) {
                    var e = [];
                    for (var f in b) e.push(f + "=" + b[f]);
                    return -1 == a.indexOf("?") && (a += "?"), a += e.join("&"), ajax(a, null, c, "GET", d);
                },
                jsonp: function(a, b, c) {
                    var d = document.createElement("script");
                    return d.src = a, document.getElementsByTagName("head")[0].appendChild(d), b ? setTimeout(b, c || 3e3) : void 0;
                },
                loadScript: function(a, b, c) {
                    var d = document.createElement("script");
                    d.onload = d.onreadystatechange = function() {
                        this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || ("function" == typeof b && b(), 
                        d.onload = d.onreadystatechange = null, d.parentNode && d.parentNode.removeChild(d));
                    }, d.onerror = function() {
                        d.onerror = null, d.parentNode && d.parentNode.removeChild(d), c && c();
                    }, d.src = a, document.getElementsByTagName("head")[0].appendChild(d);
                },
                setQuery: function(a, b, c) {
                    var d = b + "=" + encodeURIComponent(c), e = new RegExp("(^|&)" + b + "=([^&]*)&?", "i"), f = /([^?]*)(\??)([^#]*)(#?)(.*)/i, g = a.match(f), h = g && g[3];
                    return g ? (h = null != c && "undefined" != typeof c ? h.match(e) ? h.replace(e, "$1" + d + "&") : d + "&" + h : h.replace(e, "$1"), 
                    h = h.replace(/&$/, ""), a = a.replace(f, "$1?" + h + "$4$5")) : "";
                },
                getQuery: function(a) {
                    var b = window.location.search.match(new RegExp("(\\?|&)" + a + "=([^&]*)(&|$)"));
                    return b ? decodeURIComponent(b[2]) : "";
                }
            };
        }(), local = function() {
            function a() {
                var a = document.createElement("link");
                return a.style.display = "none", a.id = e, document.getElementsByTagName("head")[0].appendChild(a), 
                a.addBehavior("#default#userdata"), a;
            }
            function b() {
                if ("undefined" == typeof d) if (window.localStorage) d = localStorage; else try {
                    d = a(), d.load(e);
                } catch (b) {
                    return d = !1, !1;
                }
                return !0;
            }
            function c(a) {
                return "string" == typeof a && f.test(a);
            }
            var d, e = "tls.qcloud.com", f = /^[0-9A-Za-z_-]*$/;
            return {
                set: function(a, f) {
                    var g = !1;
                    if (c(a) && b()) try {
                        f += "", window.localStorage ? (d.setItem(a, f), g = !0) : (d.setAttribute(a, f), 
                        d.save(e), g = d.getAttribute(a) === f);
                    } catch (h) {}
                    return g;
                },
                get: function(a) {
                    if (c(a) && b()) try {
                        return window.localStorage ? d.getItem(a) : d.getAttribute(a);
                    } catch (e) {}
                    return null;
                },
                remove: function(a) {
                    if (c(a) && b()) try {
                        return window.localStorage ? d.removeItem(a) : d.removeAttribute(a), !0;
                    } catch (e) {}
                    return !1;
                }
            };
        }(), report = function() {
            function a(a, b, c) {
                if (!("undefined" != typeof c && Math.random() >= c)) {
                    var d = "https://ssl.qq.com/ptlogin/cgi-bin/ptlogin_report?", e = encodeURIComponent(b + "|_|" + location.href + "|_|" + window.navigator.userAgent);
                    a && (d += "id=" + a + "&"), b && (d += "msg=" + e + "&"), d += "v=" + Math.random();
                    var f = document.createElement("img");
                    f.src = d;
                }
            }
            return {
                log: function(b, c, d) {
                    return a(b, c, d);
                },
                mid: function(b, c) {
                    return a(b, null, c);
                }
            };
        }();
        Blue.dom = dom, Blue.css = css, Blue.str = string, Blue.http = http, Blue.local = local, 
        Blue.report = report, Blue.extend(Blue, {
            on: dom.on,
            off: dom.off,
            el: dom.el
        }), Blue.extend(Blue, {
            addClass: css.addClass,
            removeClass: css.removeClass,
            hasClass: css.hasClass,
            show: css.show,
            hide: css.hide
        }), Blue.extend(Blue, {
            get: http.get,
            post: http.post,
            jsonp: http.jsonp,
            loadScript: http.loadScript,
            setQuery: http.setQuery,
            getQuery: http.getQuery
        }), Blue.extend(Blue, {
            trim: string.trim
        }), !window.console && (window.console = {
            log: function() {},
            warn: function() {},
            error: function() {}
        }), module.exports = Blue;
    } ]);
});
//# sourceMappingURL=tsl-api.min.js.map
/*! 康美网络医院 最后修改于： 2016-10-20 */