(function (l, g, c) {
    function u(b) { var a = {}, d = /^jQuery\d+$/; c.each(b.attributes, function (b, c) { c.specified && !d.test(c.name) && (a[c.name] = c.value) }); return a } function h(b, a) { m && p && c(this).removeClass("gray"); var d = c(this); if (this.value == d.attr("placeholder") && d.hasClass("placeholder")) if (d.data("placeholder-password")) { d = d.hide().next().show().attr("id", d.removeAttr("id").data("placeholder-id")); if (!0 === b) return d[0].value = a; d.focus() } else this.value = "", d.removeClass("placeholder"), this == q() && this.select() }
    function n() {
        m && p && "" == c(this).val() && c(this).addClass("gray"); var b, a = c(this), d = this.id; if ("" == this.value) {
            if ("password" == this.type) { if (!a.data("placeholder-textinput")) { try { b = a.clone().attr({ type: "text" }) } catch (e) { b = c("<input>").attr(c.extend(u(this), { type: "text" })) } b.removeAttr("name").data({ "placeholder-password": a, "placeholder-id": d }).bind("focus.placeholder", h); a.data({ "placeholder-textinput": b, "placeholder-id": d }).before(b) } a = a.removeAttr("id").hide().prev().attr("id", d).show() } a.addClass("placeholder");
            a[0].value = a.attr("placeholder")
        } else a.removeClass("placeholder")
    } function q() { try { return g.activeElement } catch (b) { } } var m = !!l.ActiveXObject, p = m && !!g.documentMode, f = "[object OperaMini]" == Object.prototype.toString.call(l.operamini), k = "placeholder" in g.createElement("input") && !f, f = "placeholder" in g.createElement("textarea") && !f, e = c.fn, r = c.valHooks, t = c.propHooks; k && f ? (e = e.placeholder = function () { return this }, e.input = e.textarea = !0) : (e = e.placeholder = function () {
        this.filter((k ? "textarea" : ":input") + "[placeholder]").not(".placeholder").bind({
            "focus.placeholder": h,
            "blur.placeholder": n
        }).data("placeholder-enabled", !0).trigger("blur.placeholder"); return this
    }, e.input = k, e.textarea = f, e = {
        get: function (b) { var a = c(b), d = a.data("placeholder-password"); return d ? d[0].value : a.data("placeholder-enabled") && a.hasClass("placeholder") ? "" : b.value }, set: function (b, a) {
            var d = c(b), e = d.data("placeholder-password"); if (e) return e[0].value = a; if (!d.data("placeholder-enabled")) return b.value = a; "" == a ? (b.value = a, b != q() && n.call(b)) : d.hasClass("placeholder") ? h.call(b, !0, a) || (b.value = a) : b.value =
            a; return d
        }
    }, k || (r.input = e, t.value = e), f || (r.textarea = e, t.value = e), c(function () { c(g).delegate("form", "submit.placeholder", function () { var b = c(".placeholder", this).each(h); setTimeout(function () { b.each(n) }, 10) }) }), c(l).bind("beforeunload.placeholder", function () { c(".placeholder").each(function () { this.value = "" }) }))
})(this, document, jQuery);