!function(a, b, c, d) {
    function e(b, c) {
        this.element = a(b), this.settings = a.extend({}, v, c), this._defaults = v, this._name = u, 
        this.init();
    }
    function f(a) {
        a.element.trigger("change");
    }
    function g(b) {
        b.element.find("option").each(function(c, d) {
            var e = a(d);
            "undefined" == typeof e.data("original-index") && e.data("original-index", b.elementCount++), 
            "undefined" == typeof e.data("_selected") && e.data("_selected", !1);
        });
    }
    function h(b, c, d) {
        b.element.find("option").each(function(b, e) {
            var f = a(e);
            f.data("original-index") === c && f.prop("selected", d);
        });
    }
    function i(a, b) {
        return a.replace(/\{(\d+)\}/g, function(a, c) {
            return "undefined" != typeof b[c] ? b[c] : a;
        });
    }
    function j(a) {
        if (a.settings.infoText) {
            var b = a.elements.select1.find("option").length, c = a.elements.select2.find("option").length, d = a.element.find("option").length - a.selectedElements, e = a.selectedElements, f = "";
            f = 0 === d ? a.settings.infoTextEmpty : b === d ? i(a.settings.infoText, [ b, d ]) : i(a.settings.infoTextFiltered, [ b, d ]), 
            a.elements.info1.html(f), a.elements.box1.toggleClass("filtered", !(b === d || 0 === d)), 
            f = 0 === e ? a.settings.infoTextEmpty : c === e ? i(a.settings.infoText, [ c, e ]) : i(a.settings.infoTextFiltered, [ c, e ]), 
            a.elements.info2.html(f), a.elements.box2.toggleClass("filtered", !(c === e || 0 === e));
        }
    }
    function k(b) {
        b.selectedElements = 0, b.elements.select1.empty(), b.elements.select2.empty(), 
        b.element.find("option").each(function(c, d) {
            var e = a(d);
            e.prop("selected") ? (b.selectedElements++, b.elements.select2.append(e.clone(!0).prop("selected", e.data("_selected")))) : b.elements.select1.append(e.clone(!0).prop("selected", e.data("_selected")));
        }), b.settings.showFilterInputs && (l(b, 1), l(b, 2)), j(b);
    }
    function l(b, c) {
        if (b.settings.showFilterInputs) {
            m(b, c), b.elements["select" + c].empty().scrollTop(0);
            var d = new RegExp(a.trim(b.elements["filterInput" + c].val()), "gi"), e = b.element;
            e = 1 === c ? e.find("option").not(":selected") : e.find("option:selected"), e.each(function(e, f) {
                var g = a(f), h = !0;
                (f.text.match(d) || b.settings.filterOnValues && g.attr("value").match(d)) && (h = !1, 
                b.elements["select" + c].append(g.clone(!0).prop("selected", g.data("_selected")))), 
                b.element.find("option").eq(g.data("original-index")).data("filtered" + c, h);
            }), j(b);
        }
    }
    function m(b, c) {
        b.elements["select" + c].find("option").each(function(c, d) {
            var e = a(d);
            b.element.find("option").eq(e.data("original-index")).data("_selected", e.prop("selected"));
        });
    }
    function n(b) {
        b.find("option").sort(function(b, c) {
            return a(b).data("original-index") > a(c).data("original-index") ? 1 : -1;
        }).appendTo(b);
    }
    function o(a) {
        a.elements.select1.find("option").each(function() {
            a.element.find("option").data("_selected", !1);
        });
    }
    function p(b) {
        "all" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect ? "moved" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect || m(b, 1) : (m(b, 1), 
        m(b, 2)), b.elements.select1.find("option:selected").each(function(c, d) {
            var e = a(d);
            e.data("filtered1") || h(b, e.data("original-index"), !0);
        }), k(b), f(b), n(b.elements.select2);
    }
    function q(b) {
        "all" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect ? "moved" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect || m(b, 2) : (m(b, 1), 
        m(b, 2)), b.elements.select2.find("option:selected").each(function(c, d) {
            var e = a(d);
            e.data("filtered2") || h(b, e.data("original-index"), !1);
        }), k(b), f(b), n(b.elements.select1);
    }
    function r(b) {
        "all" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect ? "moved" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect || m(b, 1) : (m(b, 1), 
        m(b, 2)), b.element.find("option").each(function(b, c) {
            var d = a(c);
            d.data("filtered1") || d.prop("selected", !0);
        }), k(b), f(b);
    }
    function s(b) {
        "all" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect ? "moved" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect || m(b, 2) : (m(b, 1), 
        m(b, 2)), b.element.find("option").each(function(b, c) {
            var d = a(c);
            d.data("filtered2") || d.prop("selected", !1);
        }), k(b), f(b);
    }
    function t(a) {
        a.elements.form.submit(function(b) {
            a.elements.filterInput1.is(":focus") ? (b.preventDefault(), a.elements.filterInput1.focusout()) : a.elements.filterInput2.is(":focus") && (b.preventDefault(), 
            a.elements.filterInput2.focusout());
        }), a.element.on("bootstrapDualListbox.refresh", function(b, c) {
            a.refresh(c);
        }), a.elements.filterClear1.on("click", function() {
            a.setNonSelectedFilter("", !0);
        }), a.elements.filterClear2.on("click", function() {
            a.setSelectedFilter("", !0);
        }), a.elements.moveButton.on("click", function() {
            p(a);
        }), a.elements.moveAllButton.on("click", function() {
            r(a);
        }), a.elements.removeButton.on("click", function() {
            q(a);
        }), a.elements.removeAllButton.on("click", function() {
            s(a);
        }), a.elements.filterInput1.on("change keyup", function() {
            l(a, 1);
        }), a.elements.filterInput2.on("change keyup", function() {
            l(a, 2);
        });
    }
    var u = "bootstrapDualListbox", v = {
        bootstrap2Compatible: !1,
        filterTextClear: "show all",
        filterPlaceHolder: "Filter",
        moveSelectedLabel: "Move selected",
        moveAllLabel: "Move all",
        removeSelectedLabel: "Remove selected",
        removeAllLabel: "Remove all",
        moveOnSelect: !0,
        preserveSelectionOnMove: !1,
        selectedListLabel: !1,
        nonSelectedListLabel: !1,
        helperSelectNamePostfix: "_helper",
        selectorMinimalHeight: 100,
        showFilterInputs: !0,
        nonSelectedFilter: "",
        selectedFilter: "",
        infoText: "Showing all {0}",
        infoTextFiltered: '<span class="label label-warning">Filtered</span> {0} from {1}',
        infoTextEmpty: "Empty list",
        filterOnValues: !1
    }, w = /android/i.test(navigator.userAgent.toLowerCase());
    e.prototype = {
        init: function() {
            this.container = a('<div class="bootstrap-duallistbox-container"> <div class="box1">   <label></label>   <span class="info-container">     <span class="info"></span>     <button type="button" class="btn clear1 pull-right"></button>   </span>   <input class="filter" type="text">   <div class="btn-group buttons">     <button type="button" class="btn moveall">       <i></i>       <i></i>     </button>     <button type="button" class="btn move">       <i></i>     </button>   </div>   <select multiple="multiple"></select> </div> <div class="box2">   <label></label>   <span class="info-container">     <span class="info"></span>     <button type="button" class="btn clear2 pull-right"></button>   </span>   <input class="filter" type="text">   <div class="btn-group buttons">     <button type="button" class="btn remove">       <i></i>     </button>     <button type="button" class="btn removeall">       <i></i>       <i></i>     </button>   </div>   <select multiple="multiple"></select> </div></div>').insertBefore(this.element), 
            this.elements = {
                originalSelect: this.element,
                box1: a(".box1", this.container),
                box2: a(".box2", this.container),
                filterInput1: a(".box1 .filter", this.container),
                filterInput2: a(".box2 .filter", this.container),
                filterClear1: a(".box1 .clear1", this.container),
                filterClear2: a(".box2 .clear2", this.container),
                label1: a(".box1 > label", this.container),
                label2: a(".box2 > label", this.container),
                info1: a(".box1 .info", this.container),
                info2: a(".box2 .info", this.container),
                select1: a(".box1 select", this.container),
                select2: a(".box2 select", this.container),
                moveButton: a(".box1 .move", this.container),
                removeButton: a(".box2 .remove", this.container),
                moveAllButton: a(".box1 .moveall", this.container),
                removeAllButton: a(".box2 .removeall", this.container),
                form: a(a(".box1 .filter", this.container)[0].form)
            }, this.originalSelectName = this.element.attr("name") || "";
            var b = "bootstrap-duallistbox-nonselected-list_" + this.originalSelectName, c = "bootstrap-duallistbox-selected-list_" + this.originalSelectName;
            return this.elements.select1.attr("id", b), this.elements.select2.attr("id", c), 
            this.elements.label1.attr("for", b), this.elements.label2.attr("for", c), this.selectedElements = 0, 
            this.elementCount = 0, this.setBootstrap2Compatible(this.settings.bootstrap2Compatible), 
            this.setFilterTextClear(this.settings.filterTextClear), this.setFilterPlaceHolder(this.settings.filterPlaceHolder), 
            this.setMoveSelectedLabel(this.settings.moveSelectedLabel), this.setMoveAllLabel(this.settings.moveAllLabel), 
            this.setRemoveSelectedLabel(this.settings.removeSelectedLabel), this.setRemoveAllLabel(this.settings.removeAllLabel), 
            this.setMoveOnSelect(this.settings.moveOnSelect), this.setPreserveSelectionOnMove(this.settings.preserveSelectionOnMove), 
            this.setSelectedListLabel(this.settings.selectedListLabel), this.setNonSelectedListLabel(this.settings.nonSelectedListLabel), 
            this.setHelperSelectNamePostfix(this.settings.helperSelectNamePostfix), this.setSelectOrMinimalHeight(this.settings.selectorMinimalHeight), 
            g(this), this.setShowFilterInputs(this.settings.showFilterInputs), this.setNonSelectedFilter(this.settings.nonSelectedFilter), 
            this.setSelectedFilter(this.settings.selectedFilter), this.setInfoText(this.settings.infoText), 
            this.setInfoTextFiltered(this.settings.infoTextFiltered), this.setInfoTextEmpty(this.settings.infoTextEmpty), 
            this.setFilterOnValues(this.settings.filterOnValues), this.element.hide(), t(this), 
            k(this), this.element;
        },
        setBootstrap2Compatible: function(a, b) {
            return this.settings.bootstrap2Compatible = a, a ? (this.container.removeClass("row").addClass("row-fluid bs2compatible"), 
            this.container.find(".box1, .box2").removeClass("col-md-6").addClass("span6"), this.container.find(".clear1, .clear2").removeClass("btn-default btn-xs").addClass("btn-mini"), 
            this.container.find("input, select").removeClass("form-control"), this.container.find(".btn").removeClass("btn-default"), 
            this.container.find(".moveall > i, .move > i").removeClass("glyphicon glyphicon-arrow-right").addClass("icon-arrow-right"), 
            this.container.find(".removeall > i, .remove > i").removeClass("glyphicon glyphicon-arrow-left").addClass("icon-arrow-left")) : (this.container.removeClass("row-fluid bs2compatible").addClass("row"), 
            this.container.find(".box1, .box2").removeClass("span6").addClass("col-md-6"), this.container.find(".clear1, .clear2").removeClass("btn-mini").addClass("btn-default btn-xs"), 
            this.container.find("input, select").addClass("form-control"), this.container.find(".btn").addClass("btn-default"), 
            this.container.find(".moveall > i, .move > i").removeClass("icon-arrow-right").addClass("glyphicon glyphicon-arrow-right"), 
            this.container.find(".removeall > i, .remove > i").removeClass("icon-arrow-left").addClass("glyphicon glyphicon-arrow-left")), 
            b && k(this), this.element;
        },
        setFilterTextClear: function(a, b) {
            return this.settings.filterTextClear = a, this.elements.filterClear1.html(a), this.elements.filterClear2.html(a), 
            b && k(this), this.element;
        },
        setFilterPlaceHolder: function(a, b) {
            return this.settings.filterPlaceHolder = a, this.elements.filterInput1.attr("placeholder", a), 
            this.elements.filterInput2.attr("placeholder", a), b && k(this), this.element;
        },
        setMoveSelectedLabel: function(a, b) {
            return this.settings.moveSelectedLabel = a, this.elements.moveButton.attr("title", a), 
            b && k(this), this.element;
        },
        setMoveAllLabel: function(a, b) {
            return this.settings.moveAllLabel = a, this.elements.moveAllButton.attr("title", a), 
            b && k(this), this.element;
        },
        setRemoveSelectedLabel: function(a, b) {
            return this.settings.removeSelectedLabel = a, this.elements.removeButton.attr("title", a), 
            b && k(this), this.element;
        },
        setRemoveAllLabel: function(a, b) {
            return this.settings.removeAllLabel = a, this.elements.removeAllButton.attr("title", a), 
            b && k(this), this.element;
        },
        setMoveOnSelect: function(a, b) {
            if (w && (a = !0), this.settings.moveOnSelect = a, this.settings.moveOnSelect) {
                this.container.addClass("moveonselect");
                var c = this;
                this.elements.select1.on("change", function() {
                    p(c);
                }), this.elements.select2.on("change", function() {
                    q(c);
                });
            } else this.container.removeClass("moveonselect"), this.elements.select1.off("change"), 
            this.elements.select2.off("change");
            return b && k(this), this.element;
        },
        setPreserveSelectionOnMove: function(a, b) {
            return w && (a = !1), this.settings.preserveSelectionOnMove = a, b && k(this), this.element;
        },
        setSelectedListLabel: function(a, b) {
            return this.settings.selectedListLabel = a, a ? this.elements.label2.show().html(a) : this.elements.label2.hide().html(a), 
            b && k(this), this.element;
        },
        setNonSelectedListLabel: function(a, b) {
            return this.settings.nonSelectedListLabel = a, a ? this.elements.label1.show().html(a) : this.elements.label1.hide().html(a), 
            b && k(this), this.element;
        },
        setHelperSelectNamePostfix: function(a, b) {
            return this.settings.helperSelectNamePostfix = a, a ? (this.elements.select1.attr("name", this.originalSelectName + a + "1"), 
            this.elements.select2.attr("name", this.originalSelectName + a + "2")) : (this.elements.select1.removeAttr("name"), 
            this.elements.select2.removeAttr("name")), b && k(this), this.element;
        },
        setSelectOrMinimalHeight: function(a, b) {
            this.settings.selectorMinimalHeight = a;
            var c = this.element.height();
            return this.element.height() < a && (c = a), this.elements.select1.height(c), this.elements.select2.height(c), 
            b && k(this), this.element;
        },
        setShowFilterInputs: function(a, b) {
            return a ? (this.elements.filterInput1.show(), this.elements.filterInput2.show()) : (this.setNonSelectedFilter(""), 
            this.setSelectedFilter(""), k(this), this.elements.filterInput1.hide(), this.elements.filterInput2.hide()), 
            this.settings.showFilterInputs = a, b && k(this), this.element;
        },
        setNonSelectedFilter: function(a, b) {
            if (this.settings.showFilterInputs) return this.settings.nonSelectedFilter = a, 
            this.elements.filterInput1.val(a), b && k(this), this.element;
        },
        setSelectedFilter: function(a, b) {
            if (this.settings.showFilterInputs) return this.settings.selectedFilter = a, this.elements.filterInput2.val(a), 
            b && k(this), this.element;
        },
        setInfoText: function(a, b) {
            return this.settings.infoText = a, b && k(this), this.element;
        },
        setInfoTextFiltered: function(a, b) {
            return this.settings.infoTextFiltered = a, b && k(this), this.element;
        },
        setInfoTextEmpty: function(a, b) {
            return this.settings.infoTextEmpty = a, b && k(this), this.element;
        },
        setFilterOnValues: function(a, b) {
            return this.settings.filterOnValues = a, b && k(this), this.element;
        },
        getContainer: function() {
            return this.container;
        },
        refresh: function(a) {
            g(this), a ? o(this) : (m(this, 1), m(this, 2)), k(this);
        },
        destroy: function() {
            return this.container.remove(), this.element.show(), a.data(this, "plugin_" + u, null), 
            this.element;
        }
    }, a.fn[u] = function(b) {
        var c = arguments;
        if (b === d || "object" == typeof b) return this.each(function() {
            a(this).is("select") ? a.data(this, "plugin_" + u) || a.data(this, "plugin_" + u, new e(this, b)) : a(this).find("select").each(function(c, d) {
                a(d).bootstrapDualListbox(b);
            });
        });
        if ("string" == typeof b && "_" !== b[0] && "init" !== b) {
            var f;
            return this.each(function() {
                var d = a.data(this, "plugin_" + u);
                d instanceof e && "function" == typeof d[b] && (f = d[b].apply(d, Array.prototype.slice.call(c, 1)));
            }), f !== d ? f : this;
        }
    };
}(jQuery, window, document), function(a) {
    var b = {}, c = {
        mode: "horizontal",
        slideSelector: "",
        infiniteLoop: !0,
        hideControlOnEnd: !1,
        speed: 500,
        easing: null,
        slideMargin: 0,
        startSlide: 0,
        randomStart: !1,
        captions: !1,
        ticker: !1,
        tickerHover: !1,
        adaptiveHeight: !1,
        adaptiveHeightSpeed: 500,
        video: !1,
        useCSS: !0,
        preloadImages: "visible",
        responsive: !0,
        slideZIndex: 50,
        wrapperClass: "bx-wrapper",
        touchEnabled: !0,
        swipeThreshold: 50,
        oneToOneTouch: !0,
        preventDefaultSwipeX: !0,
        preventDefaultSwipeY: !1,
        pager: !0,
        pagerType: "full",
        pagerShortSeparator: " / ",
        pagerSelector: null,
        buildPager: null,
        pagerCustom: null,
        controls: !0,
        nextText: "Next",
        prevText: "Prev",
        nextSelector: null,
        prevSelector: null,
        autoControls: !1,
        startText: "Start",
        stopText: "Stop",
        autoControlsCombine: !1,
        autoControlsSelector: null,
        auto: !1,
        pause: 4e3,
        autoStart: !0,
        autoDirection: "next",
        autoHover: !1,
        autoDelay: 0,
        autoSlideForOnePage: !1,
        minSlides: 1,
        maxSlides: 1,
        moveSlides: 0,
        slideWidth: 0,
        onSliderLoad: function() {},
        onSlideBefore: function() {},
        onSlideAfter: function() {},
        onSlideNext: function() {},
        onSlidePrev: function() {},
        onSliderResize: function() {}
    };
    a.fn.bxSlider = function(d) {
        if (0 == this.length) return this;
        if (this.length > 1) return this.each(function() {
            a(this).bxSlider(d);
        }), this;
        var e = {}, f = this;
        b.el = this;
        var g = a(window).width(), h = a(window).height(), j = function() {
            e.settings = a.extend({}, c, d), e.settings.slideWidth = parseInt(e.settings.slideWidth), 
            e.children = f.children(e.settings.slideSelector), e.children.length < e.settings.minSlides && (e.settings.minSlides = e.children.length), 
            e.children.length < e.settings.maxSlides && (e.settings.maxSlides = e.children.length), 
            e.settings.randomStart && (e.settings.startSlide = Math.floor(Math.random() * e.children.length)), 
            e.active = {
                index: e.settings.startSlide
            }, e.carousel = e.settings.minSlides > 1 || e.settings.maxSlides > 1, e.carousel && (e.settings.preloadImages = "all"), 
            e.minThreshold = e.settings.minSlides * e.settings.slideWidth + (e.settings.minSlides - 1) * e.settings.slideMargin, 
            e.maxThreshold = e.settings.maxSlides * e.settings.slideWidth + (e.settings.maxSlides - 1) * e.settings.slideMargin, 
            e.working = !1, e.controls = {}, e.interval = null, e.animProp = "vertical" == e.settings.mode ? "top" : "left", 
            e.usingCSS = e.settings.useCSS && "fade" != e.settings.mode && function() {
                var a = document.createElement("div"), b = [ "WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective" ];
                for (var c in b) if (void 0 !== a.style[b[c]]) return e.cssPrefix = b[c].replace("Perspective", "").toLowerCase(), 
                e.animProp = "-" + e.cssPrefix + "-transform", !0;
                return !1;
            }(), "vertical" == e.settings.mode && (e.settings.maxSlides = e.settings.minSlides), 
            f.data("origStyle", f.attr("style")), f.children(e.settings.slideSelector).each(function() {
                a(this).data("origStyle", a(this).attr("style"));
            }), k();
        }, k = function() {
            f.wrap('<div class="' + e.settings.wrapperClass + '"><div class="bx-viewport"></div></div>'), 
            e.viewport = f.parent(), e.loader = a('<div class="bx-loading" />'), e.viewport.prepend(e.loader), 
            f.css({
                width: "horizontal" == e.settings.mode ? 100 * e.children.length + 215 + "%" : "auto",
                position: "relative"
            }), e.usingCSS && e.settings.easing ? f.css("-" + e.cssPrefix + "-transition-timing-function", e.settings.easing) : e.settings.easing || (e.settings.easing = "swing");
            q();
            e.viewport.css({
                width: "100%",
                overflow: "hidden",
                position: "relative"
            }), e.viewport.parent().css({
                maxWidth: o()
            }), e.settings.pager || e.viewport.parent().css({
                margin: "0 auto 0px"
            }), e.children.css({
                float: "horizontal" == e.settings.mode ? "left" : "none",
                listStyle: "none",
                position: "relative"
            }), e.children.css("width", p()), "horizontal" == e.settings.mode && e.settings.slideMargin > 0 && e.children.css("marginRight", e.settings.slideMargin), 
            "vertical" == e.settings.mode && e.settings.slideMargin > 0 && e.children.css("marginBottom", e.settings.slideMargin), 
            "fade" == e.settings.mode && (e.children.css({
                position: "absolute",
                zIndex: 0,
                display: "none"
            }), e.children.eq(e.settings.startSlide).css({
                zIndex: e.settings.slideZIndex,
                display: "block"
            })), e.controls.el = a('<div class="bx-controls" />'), e.settings.captions && z(), 
            e.active.last = e.settings.startSlide == r() - 1, e.settings.video && f.fitVids();
            var b = e.children.eq(e.settings.startSlide);
            "all" == e.settings.preloadImages && (b = e.children), e.settings.ticker ? e.settings.pager = !1 : (e.settings.pager && w(), 
            e.settings.controls && x(), e.settings.auto && e.settings.autoControls && y(), (e.settings.controls || e.settings.autoControls || e.settings.pager) && e.viewport.after(e.controls.el)), 
            l(b, m);
        }, l = function(b, c) {
            var d = b.find("img, iframe").length;
            if (0 == d) return void c();
            var e = 0;
            b.find("img, iframe").each(function() {
                a(this).one("load", function() {
                    ++e == d && c();
                }).each(function() {
                    this.complete && a(this).load();
                });
            });
        }, m = function() {
            if (e.settings.infiniteLoop && "fade" != e.settings.mode && !e.settings.ticker) {
                var b = "vertical" == e.settings.mode ? e.settings.minSlides : e.settings.maxSlides, c = e.children.slice(0, b).clone().addClass("bx-clone"), d = e.children.slice(-b).clone().addClass("bx-clone");
                f.append(c).prepend(d);
            }
            e.loader.remove(), t(), "vertical" == e.settings.mode && (e.settings.adaptiveHeight = !0), 
            e.viewport.height(n()), f.redrawSlider(), e.settings.onSliderLoad(e.active.index), 
            e.initialized = !0, e.settings.responsive && a(window).bind("resize", Q), e.settings.auto && e.settings.autoStart && (r() > 1 || e.settings.autoSlideForOnePage) && J(), 
            e.settings.ticker && K(), e.settings.pager && F(e.settings.startSlide), e.settings.controls && I(), 
            e.settings.touchEnabled && !e.settings.ticker && M();
        }, n = function() {
            var b = 0, c = a();
            if ("vertical" == e.settings.mode || e.settings.adaptiveHeight) if (e.carousel) {
                var d = 1 == e.settings.moveSlides ? e.active.index : e.active.index * s();
                for (c = e.children.eq(d), i = 1; i <= e.settings.maxSlides - 1; i++) c = d + i >= e.children.length ? c.add(e.children.eq(i - 1)) : c.add(e.children.eq(d + i));
            } else c = e.children.eq(e.active.index); else c = e.children;
            return "vertical" == e.settings.mode ? (c.each(function(c) {
                b += a(this).outerHeight();
            }), e.settings.slideMargin > 0 && (b += e.settings.slideMargin * (e.settings.minSlides - 1))) : b = Math.max.apply(Math, c.map(function() {
                return a(this).outerHeight(!1);
            }).get()), "border-box" == e.viewport.css("box-sizing") ? b += parseFloat(e.viewport.css("padding-top")) + parseFloat(e.viewport.css("padding-bottom")) + parseFloat(e.viewport.css("border-top-width")) + parseFloat(e.viewport.css("border-bottom-width")) : "padding-box" == e.viewport.css("box-sizing") && (b += parseFloat(e.viewport.css("padding-top")) + parseFloat(e.viewport.css("padding-bottom"))), 
            b;
        }, o = function() {
            var a = "100%";
            return e.settings.slideWidth > 0 && (a = "horizontal" == e.settings.mode ? e.settings.maxSlides * e.settings.slideWidth + (e.settings.maxSlides - 1) * e.settings.slideMargin : e.settings.slideWidth), 
            a;
        }, p = function() {
            var a = e.settings.slideWidth, b = e.viewport.width();
            return 0 == e.settings.slideWidth || e.settings.slideWidth > b && !e.carousel || "vertical" == e.settings.mode ? a = b : e.settings.maxSlides > 1 && "horizontal" == e.settings.mode && (b > e.maxThreshold || b < e.minThreshold && (a = (b - e.settings.slideMargin * (e.settings.minSlides - 1)) / e.settings.minSlides)), 
            a;
        }, q = function() {
            var a = 1;
            if ("horizontal" == e.settings.mode && e.settings.slideWidth > 0) if (e.viewport.width() < e.minThreshold) a = e.settings.minSlides; else if (e.viewport.width() > e.maxThreshold) a = e.settings.maxSlides; else {
                var b = e.children.first().width() + e.settings.slideMargin;
                a = Math.floor((e.viewport.width() + e.settings.slideMargin) / b);
            } else "vertical" == e.settings.mode && (a = e.settings.minSlides);
            return a;
        }, r = function() {
            var a = 0;
            if (e.settings.moveSlides > 0) if (e.settings.infiniteLoop) a = Math.ceil(e.children.length / s()); else for (var b = 0, c = 0; b < e.children.length; ) ++a, 
            b = c + q(), c += e.settings.moveSlides <= q() ? e.settings.moveSlides : q(); else a = Math.ceil(e.children.length / q());
            return a;
        }, s = function() {
            return e.settings.moveSlides > 0 && e.settings.moveSlides <= q() ? e.settings.moveSlides : q();
        }, t = function() {
            if (e.children.length > e.settings.maxSlides && e.active.last && !e.settings.infiniteLoop) {
                if ("horizontal" == e.settings.mode) {
                    var a = e.children.last(), b = a.position();
                    u(-(b.left - (e.viewport.width() - a.outerWidth())), "reset", 0);
                } else if ("vertical" == e.settings.mode) {
                    var c = e.children.length - e.settings.minSlides, b = e.children.eq(c).position();
                    u(-b.top, "reset", 0);
                }
            } else {
                var b = e.children.eq(e.active.index * s()).position();
                e.active.index == r() - 1 && (e.active.last = !0), void 0 != b && ("horizontal" == e.settings.mode ? u(-b.left, "reset", 0) : "vertical" == e.settings.mode && u(-b.top, "reset", 0));
            }
        }, u = function(a, b, c, d) {
            if (e.usingCSS) {
                var g = "vertical" == e.settings.mode ? "translate3d(0, " + a + "px, 0)" : "translate3d(" + a + "px, 0, 0)";
                f.css("-" + e.cssPrefix + "-transition-duration", c / 1e3 + "s"), "slide" == b ? (f.css(e.animProp, g), 
                f.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                    f.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), G();
                })) : "reset" == b ? f.css(e.animProp, g) : "ticker" == b && (f.css("-" + e.cssPrefix + "-transition-timing-function", "linear"), 
                f.css(e.animProp, g), f.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                    f.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), u(d.resetValue, "reset", 0), 
                    L();
                }));
            } else {
                var h = {};
                h[e.animProp] = a, "slide" == b ? f.animate(h, c, e.settings.easing, function() {
                    G();
                }) : "reset" == b ? f.css(e.animProp, a) : "ticker" == b && f.animate(h, speed, "linear", function() {
                    u(d.resetValue, "reset", 0), L();
                });
            }
        }, v = function() {
            for (var b = "", c = r(), d = 0; d < c; d++) {
                var f = "";
                e.settings.buildPager && a.isFunction(e.settings.buildPager) ? (f = e.settings.buildPager(d), 
                e.pagerEl.addClass("bx-custom-pager")) : (f = d + 1, e.pagerEl.addClass("bx-default-pager")), 
                c > 1 && (b += '<a href="" data-slide-index="' + d + '" class="bx-pager-link"></a>');
            }
            e.pagerEl.html(b);
        }, w = function() {
            e.settings.pagerCustom ? e.pagerEl = a(e.settings.pagerCustom) : (e.pagerEl = a('<div class="bx-pager" />'), 
            e.settings.pagerSelector ? a(e.settings.pagerSelector).html(e.pagerEl) : e.controls.el.addClass("bx-has-pager").append(e.pagerEl), 
            v()), e.pagerEl.on("click", "a", E);
        }, x = function() {
            e.settings.nextSelector && a(e.settings.nextSelector).bind("click", A), e.settings.prevSelector && a(e.settings.prevSelector).bind("click", B), 
            e.settings.nextSelector || e.settings.prevSelector || (e.controls.directionEl = a('<div class="bx-controls-direction" />'), 
            e.controls.directionEl.append(e.controls.prev).append(e.controls.next), e.controls.el.addClass("bx-has-controls-direction").append(e.controls.directionEl));
        }, y = function() {
            e.controls.start = a('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + e.settings.startText + "</a></div>"), 
            e.controls.stop = a('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + e.settings.stopText + "</a></div>"), 
            e.controls.autoEl = a('<div class="bx-controls-auto" />'), e.controls.autoEl.on("click", ".bx-start", C), 
            e.controls.autoEl.on("click", ".bx-stop", D), e.settings.autoControlsCombine ? e.controls.autoEl.append(e.controls.start) : e.controls.autoEl.append(e.controls.start).append(e.controls.stop), 
            e.settings.autoControlsSelector ? a(e.settings.autoControlsSelector).html(e.controls.autoEl) : e.controls.el.addClass("bx-has-controls-auto").append(e.controls.autoEl), 
            H(e.settings.autoStart ? "stop" : "start");
        }, z = function() {
            e.children.each(function(b) {
                var c = a(this).find("img:first").attr("title");
                void 0 != c && ("" + c).length && a(this).append('<div class="bx-caption"><span>' + c + "</span></div>");
            });
        }, A = function(a) {
            e.settings.auto && f.stopAuto(), f.goToNextSlide(), a.preventDefault();
        }, B = function(a) {
            e.settings.auto && f.stopAuto(), f.goToPrevSlide(), a.preventDefault();
        }, C = function(a) {
            f.startAuto(), a.preventDefault();
        }, D = function(a) {
            f.stopAuto(), a.preventDefault();
        }, E = function(b) {
            e.settings.auto;
            var c = a(b.currentTarget);
            if (void 0 !== c.attr("data-slide-index")) {
                var d = parseInt(c.attr("data-slide-index"));
                d != e.active.index && f.goToSlide(d), b.preventDefault();
            }
        }, F = function(b) {
            var c = e.children.length;
            return "short" == e.settings.pagerType ? (e.settings.maxSlides > 1 && (c = Math.ceil(e.children.length / e.settings.maxSlides)), 
            void e.pagerEl.html(b + 1 + e.settings.pagerShortSeparator + c)) : (e.pagerEl.find("a").removeClass("active"), 
            void e.pagerEl.each(function(c, d) {
                a(d).find("a").eq(b).addClass("active");
            }));
        }, G = function() {
            if (e.settings.infiniteLoop) {
                var a = "";
                0 == e.active.index ? a = e.children.eq(0).position() : e.active.index == r() - 1 && e.carousel ? a = e.children.eq((r() - 1) * s()).position() : e.active.index == e.children.length - 1 && (a = e.children.eq(e.children.length - 1).position()), 
                a && ("horizontal" == e.settings.mode ? u(-a.left, "reset", 0) : "vertical" == e.settings.mode && u(-a.top, "reset", 0));
            }
            e.working = !1, e.settings.onSlideAfter(e.children.eq(e.active.index), e.oldIndex, e.active.index);
        }, H = function(a) {
            e.settings.autoControlsCombine ? e.controls.autoEl.html(e.controls[a]) : (e.controls.autoEl.find("a").removeClass("active"), 
            e.controls.autoEl.find("a:not(.bx-" + a + ")").addClass("active"));
        }, I = function() {
            1 == r() || !e.settings.infiniteLoop && e.settings.hideControlOnEnd && (0 == e.active.index ? (e.controls.prev.addClass("disabled"), 
            e.controls.next.removeClass("disabled")) : e.active.index == r() - 1 ? (e.controls.next.addClass("disabled"), 
            e.controls.prev.removeClass("disabled")) : (e.controls.prev.removeClass("disabled"), 
            e.controls.next.removeClass("disabled")));
        }, J = function() {
            if (e.settings.autoDelay > 0) {
                setTimeout(f.startAuto, e.settings.autoDelay);
            } else f.startAuto();
            e.settings.autoHover && f.hover(function() {
                e.interval && (f.stopAuto(!0), e.autoPaused = !0);
            }, function() {
                e.autoPaused && (f.startAuto(!0), e.autoPaused = null);
            });
        }, K = function() {
            var b = 0;
            if ("next" == e.settings.autoDirection) f.append(e.children.clone().addClass("bx-clone")); else {
                f.prepend(e.children.clone().addClass("bx-clone"));
                var c = e.children.first().position();
                b = "horizontal" == e.settings.mode ? -c.left : -c.top;
            }
            u(b, "reset", 0), e.settings.pager = !1, e.settings.controls = !1, e.settings.autoControls = !1, 
            e.settings.tickerHover && !e.usingCSS && e.viewport.hover(function() {
                f.stop();
            }, function() {
                var b = 0;
                e.children.each(function(c) {
                    b += "horizontal" == e.settings.mode ? a(this).outerWidth(!0) : a(this).outerHeight(!0);
                });
                var c = e.settings.speed / b, d = "horizontal" == e.settings.mode ? "left" : "top", g = c * (b - Math.abs(parseInt(f.css(d))));
                L(g);
            }), L();
        }, L = function(a) {
            speed = a ? a : e.settings.speed;
            var b = {
                left: 0,
                top: 0
            }, c = {
                left: 0,
                top: 0
            };
            "next" == e.settings.autoDirection ? b = f.find(".bx-clone").first().position() : c = e.children.first().position();
            var d = "horizontal" == e.settings.mode ? -b.left : -b.top, g = "horizontal" == e.settings.mode ? -c.left : -c.top, h = {
                resetValue: g
            };
            u(d, "ticker", speed, h);
        }, M = function() {
            e.touch = {
                start: {
                    x: 0,
                    y: 0
                },
                end: {
                    x: 0,
                    y: 0
                }
            }, e.viewport.bind("touchstart", N);
        }, N = function(a) {
            if (e.working) a.preventDefault(); else {
                e.touch.originalPos = f.position();
                var b = a.originalEvent;
                e.touch.start.x = b.changedTouches[0].pageX, e.touch.start.y = b.changedTouches[0].pageY, 
                e.viewport.bind("touchmove", O), e.viewport.bind("touchend", P);
            }
        }, O = function(a) {
            var b = a.originalEvent, c = Math.abs(b.changedTouches[0].pageX - e.touch.start.x), d = Math.abs(b.changedTouches[0].pageY - e.touch.start.y);
            if (3 * c > d && e.settings.preventDefaultSwipeX ? a.preventDefault() : 3 * d > c && e.settings.preventDefaultSwipeY && a.preventDefault(), 
            "fade" != e.settings.mode && e.settings.oneToOneTouch) {
                var f = 0;
                if ("horizontal" == e.settings.mode) {
                    var g = b.changedTouches[0].pageX - e.touch.start.x;
                    f = e.touch.originalPos.left + g;
                } else {
                    var g = b.changedTouches[0].pageY - e.touch.start.y;
                    f = e.touch.originalPos.top + g;
                }
                u(f, "reset", 0);
            }
        }, P = function(a) {
            e.viewport.unbind("touchmove", O);
            var b = a.originalEvent, c = 0;
            if (e.touch.end.x = b.changedTouches[0].pageX, e.touch.end.y = b.changedTouches[0].pageY, 
            "fade" == e.settings.mode) {
                var d = Math.abs(e.touch.start.x - e.touch.end.x);
                d >= e.settings.swipeThreshold && (e.touch.start.x > e.touch.end.x ? f.goToNextSlide() : f.goToPrevSlide(), 
                f.stopAuto());
            } else {
                var d = 0;
                "horizontal" == e.settings.mode ? (d = e.touch.end.x - e.touch.start.x, c = e.touch.originalPos.left) : (d = e.touch.end.y - e.touch.start.y, 
                c = e.touch.originalPos.top), !e.settings.infiniteLoop && (0 == e.active.index && d > 0 || e.active.last && d < 0) ? u(c, "reset", 200) : Math.abs(d) >= e.settings.swipeThreshold ? (d < 0 ? f.goToNextSlide() : f.goToPrevSlide(), 
                f.stopAuto()) : u(c, "reset", 200);
            }
            e.viewport.unbind("touchend", P);
        }, Q = function(b) {
            if (e.initialized) {
                var c = a(window).width(), d = a(window).height();
                g == c && h == d || (g = c, h = d, f.redrawSlider(), e.settings.onSliderResize.call(f, e.active.index));
            }
        };
        return f.goToSlide = function(b, c) {
            if (!e.working && e.active.index != b) if (e.working = !0, e.oldIndex = e.active.index, 
            b < 0 ? e.active.index = r() - 1 : b >= r() ? e.active.index = 0 : e.active.index = b, 
            e.settings.onSlideBefore(e.children.eq(e.active.index), e.oldIndex, e.active.index), 
            "next" == c ? e.settings.onSlideNext(e.children.eq(e.active.index), e.oldIndex, e.active.index) : "prev" == c && e.settings.onSlidePrev(e.children.eq(e.active.index), e.oldIndex, e.active.index), 
            e.active.last = e.active.index >= r() - 1, e.settings.pager && F(e.active.index), 
            e.settings.controls && I(), "fade" == e.settings.mode) e.settings.adaptiveHeight && e.viewport.height() != n() && e.viewport.animate({
                height: n()
            }, e.settings.adaptiveHeightSpeed), e.children.filter(":visible").fadeOut(e.settings.speed).css({
                zIndex: 0
            }), e.children.eq(e.active.index).css("zIndex", e.settings.slideZIndex + 1).fadeIn(e.settings.speed, function() {
                a(this).css("zIndex", e.settings.slideZIndex), G();
            }); else {
                e.settings.adaptiveHeight && e.viewport.height() != n() && e.viewport.animate({
                    height: n()
                }, e.settings.adaptiveHeightSpeed);
                var d = 0, g = {
                    left: 0,
                    top: 0
                };
                if (!e.settings.infiniteLoop && e.carousel && e.active.last) if ("horizontal" == e.settings.mode) {
                    var h = e.children.eq(e.children.length - 1);
                    g = h.position(), d = e.viewport.width() - h.outerWidth();
                } else {
                    var i = e.children.length - e.settings.minSlides;
                    g = e.children.eq(i).position();
                } else if (e.carousel && e.active.last && "prev" == c) {
                    var j = 1 == e.settings.moveSlides ? e.settings.maxSlides - s() : (r() - 1) * s() - (e.children.length - e.settings.maxSlides), h = f.children(".bx-clone").eq(j);
                    g = h.position();
                } else if ("next" == c && 0 == e.active.index) g = f.find("> .bx-clone").eq(e.settings.maxSlides).position(), 
                e.active.last = !1; else if (b >= 0) {
                    var k = b * s();
                    g = e.children.eq(k).position();
                }
                if ("undefined" != typeof g) {
                    var l = "horizontal" == e.settings.mode ? -(g.left - d) : -g.top;
                    u(l, "slide", e.settings.speed);
                }
            }
        }, f.goToNextSlide = function() {
            if (e.settings.infiniteLoop || !e.active.last) {
                var a = parseInt(e.active.index) + 1;
                f.goToSlide(a, "next");
            }
        }, f.goToPrevSlide = function() {
            if (e.settings.infiniteLoop || 0 != e.active.index) {
                var a = parseInt(e.active.index) - 1;
                f.goToSlide(a, "prev");
            }
        }, f.startAuto = function(a) {
            e.interval || (e.interval = setInterval(function() {
                "next" == e.settings.autoDirection ? f.goToNextSlide() : f.goToPrevSlide();
            }, e.settings.pause), e.settings.autoControls && 1 != a && H("stop"));
        }, f.stopAuto = function(a) {
            e.interval && (clearInterval(e.interval), e.interval = null, e.settings.autoControls && 1 != a && H("start"));
        }, f.getCurrentSlide = function() {
            return e.active.index;
        }, f.getCurrentSlideElement = function() {
            return e.children.eq(e.active.index);
        }, f.getSlideCount = function() {
            return e.children.length;
        }, f.redrawSlider = function() {
            e.children.add(f.find(".bx-clone")).width(p()), e.viewport.css("height", n()), e.settings.ticker || t(), 
            e.active.last && (e.active.index = r() - 1), e.active.index >= r() && (e.active.last = !0), 
            e.settings.pager && !e.settings.pagerCustom && (v(), F(e.active.index));
        }, f.destroySlider = function() {
            e.initialized && (e.initialized = !1, a(".bx-clone", this).remove(), e.children.each(function() {
                void 0 != a(this).data("origStyle") ? a(this).attr("style", a(this).data("origStyle")) : a(this).removeAttr("style");
            }), void 0 != a(this).data("origStyle") ? this.attr("style", a(this).data("origStyle")) : a(this).removeAttr("style"), 
            a(this).unwrap().unwrap(), e.controls.el && e.controls.el.remove(), e.controls.next && e.controls.next.remove(), 
            e.controls.prev && e.controls.prev.remove(), e.pagerEl && e.settings.controls && e.pagerEl.remove(), 
            a(".bx-caption", this).remove(), e.controls.autoEl && e.controls.autoEl.remove(), 
            clearInterval(e.interval), e.settings.responsive && a(window).unbind("resize", Q));
        }, f.reloadSlider = function(a) {
            void 0 != a && (d = a), f.destroySlider(), j();
        }, j(), this;
    };
}(jQuery), jQuery.cookie = function(a, b, c) {
    if ("undefined" == typeof b) {
        var d = null;
        if (document.cookie && "" != document.cookie) for (var e = document.cookie.split(";"), f = 0; f < e.length; f++) {
            var g = jQuery.trim(e[f]);
            if (g.substring(0, a.length + 1) == a + "=") {
                d = decodeURIComponent(g.substring(a.length + 1));
                break;
            }
        }
        return d;
    }
    c = c || {}, null === b && (b = "", c = $.extend({}, c), c.expires = -1);
    var h = "";
    if (c.expires && ("number" == typeof c.expires || c.expires.toUTCString)) {
        var i;
        "number" == typeof c.expires ? (i = new Date(), i.setTime(i.getTime() + 24 * c.expires * 60 * 60 * 1e3)) : i = c.expires, 
        h = "; expires=" + i.toUTCString();
    }
    var j = c.path ? "; path=" + c.path : "", k = c.domain ? "; domain=" + c.domain : "", l = c.secure ? "; secure" : "";
    document.cookie = [ a, "=", encodeURIComponent(b), h, j, k, l ].join("");
}, !function(a) {
    function b(c, d) {
        return this instanceof b ? (a.isPlainObject(c) ? d = c : (d = d || {}, d.alias = c), 
        this.el = void 0, this.opts = a.extend(!0, {}, this.defaults, d), this.noMasksCache = d && void 0 !== d.definitions, 
        this.userOptions = d || {}, this.events = {}, void e(this.opts.alias, d, this.opts)) : new b(c, d);
    }
    function c(a) {
        var b = document.createElement("input"), c = "on" + a, d = c in b;
        return d || (b.setAttribute(c, "return;"), d = "function" == typeof b[c]), b = null, 
        d;
    }
    function d(b, c) {
        var d = b.getAttribute("type"), e = "INPUT" === b.tagName && a.inArray(d, c.supportsInputType) !== -1 || b.isContentEditable || "TEXTAREA" === b.tagName;
        if (!e && "INPUT" === b.tagName) {
            var f = document.createElement("input");
            f.setAttribute("type", d), e = "text" === f.type, f = null;
        }
        return e;
    }
    function e(b, c, d) {
        var f = d.aliases[b];
        return f ? (f.alias && e(f.alias, void 0, d), a.extend(!0, d, f), a.extend(!0, d, c), 
        !0) : (null === d.mask && (d.mask = b), !1);
    }
    function f(b, c, d) {
        function f(a, c) {
            c = void 0 !== c ? c : b.getAttribute("data-inputmask-" + a), null !== c && ("string" == typeof c && (0 === a.indexOf("on") ? c = window[c] : "false" === c ? c = !1 : "true" === c && (c = !0)), 
            d[a] = c);
        }
        var g, h, i, j, k = b.getAttribute("data-inputmask");
        if (k && "" !== k && (k = k.replace(new RegExp("'", "g"), '"'), h = JSON.parse("{" + k + "}")), 
        h) {
            i = void 0;
            for (j in h) if ("alias" === j.toLowerCase()) {
                i = h[j];
                break;
            }
        }
        f("alias", i), d.alias && e(d.alias, d, c);
        for (g in c) {
            if (h) {
                i = void 0;
                for (j in h) if (j.toLowerCase() === g.toLowerCase()) {
                    i = h[j];
                    break;
                }
            }
            f(g, i);
        }
        return a.extend(!0, c, d), c;
    }
    function g(c, d) {
        function e(b) {
            function d(a, b, c, d) {
                this.matches = [], this.isGroup = a || !1, this.isOptional = b || !1, this.isQuantifier = c || !1, 
                this.isAlternator = d || !1, this.quantifier = {
                    min: 1,
                    max: 1
                };
            }
            function e(b, d, e) {
                var f = c.definitions[d];
                e = void 0 !== e ? e : b.matches.length;
                var g = b.matches[e - 1];
                if (f && !r) {
                    f.placeholder = a.isFunction(f.placeholder) ? f.placeholder(c) : f.placeholder;
                    for (var h = f.prevalidator, i = h ? h.length : 0, j = 1; j < f.cardinality; j++) {
                        var k = i >= j ? h[j - 1] : [], l = k.validator, m = k.cardinality;
                        b.matches.splice(e++, 0, {
                            fn: l ? "string" == typeof l ? new RegExp(l) : new function() {
                                this.test = l;
                            }() : new RegExp("."),
                            cardinality: m ? m : 1,
                            optionality: b.isOptional,
                            newBlockMarker: void 0 === g || g.def !== (f.definitionSymbol || d),
                            casing: f.casing,
                            def: f.definitionSymbol || d,
                            placeholder: f.placeholder,
                            mask: d
                        }), g = b.matches[e - 1];
                    }
                    b.matches.splice(e++, 0, {
                        fn: f.validator ? "string" == typeof f.validator ? new RegExp(f.validator) : new function() {
                            this.test = f.validator;
                        }() : new RegExp("."),
                        cardinality: f.cardinality,
                        optionality: b.isOptional,
                        newBlockMarker: void 0 === g || g.def !== (f.definitionSymbol || d),
                        casing: f.casing,
                        def: f.definitionSymbol || d,
                        placeholder: f.placeholder,
                        mask: d
                    });
                } else b.matches.splice(e++, 0, {
                    fn: null,
                    cardinality: 0,
                    optionality: b.isOptional,
                    newBlockMarker: void 0 === g || g.def !== d,
                    casing: null,
                    def: c.staticDefinitionSymbol || d,
                    placeholder: void 0 !== c.staticDefinitionSymbol ? d : void 0,
                    mask: d
                }), r = !1;
            }
            function f(a, b) {
                a.isGroup && (a.isGroup = !1, e(a, c.groupmarker.start, 0), b !== !0 && e(a, c.groupmarker.end));
            }
            function g(a, b, c, d) {
                b.matches.length > 0 && (void 0 === d || d) && (c = b.matches[b.matches.length - 1], 
                f(c)), e(b, a);
            }
            function h() {
                if (t.length > 0) {
                    if (m = t[t.length - 1], g(k, m, o, !m.isAlternator), m.isAlternator) {
                        n = t.pop();
                        for (var a = 0; a < n.matches.length; a++) n.matches[a].isGroup = !1;
                        t.length > 0 ? (m = t[t.length - 1], m.matches.push(n)) : s.matches.push(n);
                    }
                } else g(k, s, o);
            }
            function i(a) {
                function b(a) {
                    return a === c.optionalmarker.start ? a = c.optionalmarker.end : a === c.optionalmarker.end ? a = c.optionalmarker.start : a === c.groupmarker.start ? a = c.groupmarker.end : a === c.groupmarker.end && (a = c.groupmarker.start), 
                    a;
                }
                a.matches = a.matches.reverse();
                for (var d in a.matches) {
                    var e = parseInt(d);
                    if (a.matches[d].isQuantifier && a.matches[e + 1] && a.matches[e + 1].isGroup) {
                        var f = a.matches[d];
                        a.matches.splice(d, 1), a.matches.splice(e + 1, 0, f);
                    }
                    void 0 !== a.matches[d].matches ? a.matches[d] = i(a.matches[d]) : a.matches[d] = b(a.matches[d]);
                }
                return a;
            }
            for (var j, k, l, m, n, o, p, q = /(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g, r = !1, s = new d(), t = [], u = []; j = q.exec(b); ) if (k = j[0], 
            r) h(); else switch (k.charAt(0)) {
              case c.escapeChar:
                r = !0;
                break;

              case c.optionalmarker.end:
              case c.groupmarker.end:
                if (l = t.pop(), void 0 !== l) if (t.length > 0) {
                    if (m = t[t.length - 1], m.matches.push(l), m.isAlternator) {
                        n = t.pop();
                        for (var v = 0; v < n.matches.length; v++) n.matches[v].isGroup = !1;
                        t.length > 0 ? (m = t[t.length - 1], m.matches.push(n)) : s.matches.push(n);
                    }
                } else s.matches.push(l); else h();
                break;

              case c.optionalmarker.start:
                t.push(new d((!1), (!0)));
                break;

              case c.groupmarker.start:
                t.push(new d((!0)));
                break;

              case c.quantifiermarker.start:
                var w = new d((!1), (!1), (!0));
                k = k.replace(/[{}]/g, "");
                var x = k.split(","), y = isNaN(x[0]) ? x[0] : parseInt(x[0]), z = 1 === x.length ? y : isNaN(x[1]) ? x[1] : parseInt(x[1]);
                if ("*" !== z && "+" !== z || (y = "*" === z ? 0 : 1), w.quantifier = {
                    min: y,
                    max: z
                }, t.length > 0) {
                    var A = t[t.length - 1].matches;
                    j = A.pop(), j.isGroup || (p = new d((!0)), p.matches.push(j), j = p), A.push(j), 
                    A.push(w);
                } else j = s.matches.pop(), j.isGroup || (p = new d((!0)), p.matches.push(j), j = p), 
                s.matches.push(j), s.matches.push(w);
                break;

              case c.alternatormarker:
                t.length > 0 ? (m = t[t.length - 1], o = m.matches.pop()) : o = s.matches.pop(), 
                o.isAlternator ? t.push(o) : (n = new d((!1), (!1), (!1), (!0)), n.matches.push(o), 
                t.push(n));
                break;

              default:
                h();
            }
            for (;t.length > 0; ) l = t.pop(), f(l, !0), s.matches.push(l);
            return s.matches.length > 0 && (o = s.matches[s.matches.length - 1], f(o), u.push(s)), 
            c.numericInput && i(u[0]), u;
        }
        function f(f, g) {
            if (null !== f && "" !== f) {
                if (1 === f.length && c.greedy === !1 && 0 !== c.repeat && (c.placeholder = ""), 
                c.repeat > 0 || "*" === c.repeat || "+" === c.repeat) {
                    var h = "*" === c.repeat ? 0 : "+" === c.repeat ? 1 : c.repeat;
                    f = c.groupmarker.start + f + c.groupmarker.end + c.quantifiermarker.start + h + "," + c.repeat + c.quantifiermarker.end;
                }
                var i;
                return void 0 === b.prototype.masksCache[f] || d === !0 ? (i = {
                    mask: f,
                    maskToken: e(f),
                    validPositions: {},
                    _buffer: void 0,
                    buffer: void 0,
                    tests: {},
                    metadata: g,
                    maskLength: void 0
                }, d !== !0 && (b.prototype.masksCache[c.numericInput ? f.split("").reverse().join("") : f] = i, 
                i = a.extend(!0, {}, b.prototype.masksCache[c.numericInput ? f.split("").reverse().join("") : f]))) : i = a.extend(!0, {}, b.prototype.masksCache[c.numericInput ? f.split("").reverse().join("") : f]), 
                i;
            }
        }
        function g(a) {
            return a = a.toString();
        }
        var h;
        if (a.isFunction(c.mask) && (c.mask = c.mask(c)), a.isArray(c.mask)) {
            if (c.mask.length > 1) {
                c.keepStatic = null === c.keepStatic || c.keepStatic;
                var i = "(";
                return a.each(c.numericInput ? c.mask.reverse() : c.mask, function(b, c) {
                    i.length > 1 && (i += ")|("), i += g(void 0 === c.mask || a.isFunction(c.mask) ? c : c.mask);
                }), i += ")", f(i, c.mask);
            }
            c.mask = c.mask.pop();
        }
        return c.mask && (h = void 0 === c.mask.mask || a.isFunction(c.mask.mask) ? f(g(c.mask), c.mask) : f(g(c.mask.mask), c.mask)), 
        h;
    }
    function h(e, f, g) {
        function i(a, b, c) {
            b = b || 0;
            var d, e, f, h = [], i = 0, j = o();
            ha = void 0 !== fa ? fa.maxLength : void 0, ha === -1 && (ha = void 0);
            do {
                if (a === !0 && m().validPositions[i]) {
                    var k = m().validPositions[i];
                    e = k.match, d = k.locator.slice(), h.push(c === !0 ? k.input : I(i, e));
                } else f = s(i, d, i - 1), e = f.match, d = f.locator.slice(), (g.jitMasking === !1 || i < j || isFinite(g.jitMasking) && g.jitMasking > i) && h.push(I(i, e));
                i++;
            } while ((void 0 === ha || i < ha) && (null !== e.fn || "" !== e.def) || b > i);
            return "" === h[h.length - 1] && h.pop(), m().maskLength = i + 1, h;
        }
        function m() {
            return f;
        }
        function n(a) {
            var b = m();
            b.buffer = void 0, a !== !0 && (b._buffer = void 0, b.validPositions = {}, b.p = 0);
        }
        function o(a, b, c) {
            var d = -1, e = -1, f = c || m().validPositions;
            void 0 === a && (a = -1);
            for (var g in f) {
                var h = parseInt(g);
                f[h] && (b || null !== f[h].match.fn) && (h <= a && (d = h), h >= a && (e = h));
            }
            return d !== -1 && a - d > 1 || e < a ? d : e;
        }
        function p(b, c, d, e) {
            if (e || g.insertMode && void 0 !== m().validPositions[b] && void 0 === d) {
                var f, h = a.extend(!0, {}, m().validPositions), i = o();
                for (f = b; f <= i; f++) delete m().validPositions[f];
                m().validPositions[b] = a.extend(!0, {}, c);
                var j, k = !0, l = m().validPositions, p = !1;
                for (f = j = b; f <= i; f++) {
                    var q = h[f];
                    if (void 0 !== q) for (var r = j, s = -1; r < m().maskLength && (null == q.match.fn && l[f] && (l[f].match.optionalQuantifier === !0 || l[f].match.optionality === !0) || null != q.match.fn); ) {
                        if (r++, p === !1 && h[r] && h[r].match.def === q.match.def) {
                            m().validPositions[r] = a.extend(!0, {}, h[r]), m().validPositions[r].input = q.input, 
                            j = r, k = !0;
                            break;
                        }
                        if (u(r, q.match.def)) {
                            var t = C(r, q.input, !0, !0);
                            if (k = t !== !1, j = t.caret || t.insert ? o() : r, p = !0, k) break;
                        } else {
                            if (k = null == q.match.fn, s === r) break;
                            s = r;
                        }
                    }
                    if (!k) break;
                }
                if (!k) return m().validPositions = a.extend(!0, {}, h), n(!0), !1;
            } else m().validPositions[b] = a.extend(!0, {}, c);
            return n(!0), !0;
        }
        function q(b, c, d, e) {
            function f(a) {
                var b = m().validPositions[a];
                if (void 0 !== b && null === b.match.fn) {
                    var c = m().validPositions[a - 1], d = m().validPositions[a + 1];
                    return void 0 !== c && void 0 !== d;
                }
                return !1;
            }
            var h, i = b, j = a.extend(!0, {}, m().validPositions), k = !1;
            for (m().p = b, h = c - 1; h >= i; h--) void 0 !== m().validPositions[h] && (d === !0 || !f(h) && g.canClearPosition(m(), h, o(), e, g) !== !1) && delete m().validPositions[h];
            for (n(!0), h = i + 1; h <= o(); ) {
                for (;void 0 !== m().validPositions[i]; ) i++;
                var l = m().validPositions[i];
                if (h < i && (h = i + 1), void 0 === m().validPositions[h] && D(h) || void 0 !== l) h++; else {
                    var p = s(h);
                    k === !1 && j[i] && j[i].match.def === p.match.def ? (m().validPositions[i] = a.extend(!0, {}, j[i]), 
                    m().validPositions[i].input = p.input, delete m().validPositions[h], h++) : u(i, p.match.def) ? C(i, p.input || I(h), !0) !== !1 && (delete m().validPositions[h], 
                    h++, k = !0) : D(h) || (h++, i--), i++;
                }
            }
            n(!0);
        }
        function r(a, b) {
            for (var c, d = a, e = o(), f = m().validPositions[e] || w(0)[0], h = void 0 !== f.alternation ? f.locator[f.alternation].toString().split(",") : [], i = 0; i < d.length && (c = d[i], 
            !c.match || (!g.greedy && !b || c.match.optionalQuantifier === !0) && (c.match.optionality !== !1 && c.match.newBlockMarker !== !1 || c.match.optionalQuantifier === !0) || !(void 0 === f.alternation || f.alternation !== c.alternation || void 0 !== c.locator[f.alternation] && B(c.locator[f.alternation].toString().split(","), h))); i++) ;
            return c;
        }
        function s(a, b, c) {
            return m().validPositions[a] || r(w(a, b ? b.slice() : b, c));
        }
        function t(a) {
            return m().validPositions[a] ? m().validPositions[a] : w(a)[0];
        }
        function u(a, b) {
            for (var c = !1, d = w(a), e = 0; e < d.length; e++) if (d[e].match && d[e].match.def === b) {
                c = !0;
                break;
            }
            return c;
        }
        function v(b, c) {
            var d, e;
            return (m().tests[b] || m().validPositions[b]) && a.each(m().tests[b] || [ m().validPositions[b] ], function(a, b) {
                var f = b.alternation ? b.locator[b.alternation].toString().indexOf(c) : -1;
                (void 0 === e || f < e) && f !== -1 && (d = b, e = f);
            }), d;
        }
        function w(b, c, d) {
            function e(c, d, f, h) {
                function j(f, h, l) {
                    function q(b, c) {
                        var d = 0 === a.inArray(b, c.matches);
                        return d || a.each(c.matches, function(a, e) {
                            if (e.isQuantifier === !0 && (d = q(b, c.matches[a - 1]))) return !1;
                        }), d;
                    }
                    function r(a, b) {
                        var c = v(a, b);
                        return c ? c.locator.slice(c.alternation + 1) : void 0;
                    }
                    function s(a, c) {
                        return null === a.match.fn && null !== c.match.fn && c.match.fn.test(a.match.def, m(), b, !1, g, !1);
                    }
                    if (k > 1e4) throw "Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. " + m().mask;
                    if (k === b && void 0 === f.matches) return n.push({
                        match: f,
                        locator: h.reverse(),
                        cd: p
                    }), !0;
                    if (void 0 !== f.matches) {
                        if (f.isGroup && l !== f) {
                            if (f = j(c.matches[a.inArray(f, c.matches) + 1], h)) return !0;
                        } else if (f.isOptional) {
                            var t = f;
                            if (f = e(f, d, h, l)) {
                                if (i = n[n.length - 1].match, !q(i, t)) return !0;
                                o = !0, k = b;
                            }
                        } else if (f.isAlternator) {
                            var u, w = f, x = [], y = n.slice(), z = h.length, A = d.length > 0 ? d.shift() : -1;
                            if (A === -1 || "string" == typeof A) {
                                var B, C = k, D = d.slice(), E = [];
                                if ("string" == typeof A) E = A.split(","); else for (B = 0; B < w.matches.length; B++) E.push(B);
                                for (var F = 0; F < E.length; F++) {
                                    if (B = parseInt(E[F]), n = [], d = r(k, B) || D.slice(), f = j(w.matches[B] || c.matches[B], [ B ].concat(h), l) || f, 
                                    f !== !0 && void 0 !== f && E[E.length - 1] < w.matches.length) {
                                        var G = a.inArray(f, c.matches) + 1;
                                        c.matches.length > G && (f = j(c.matches[G], [ G ].concat(h.slice(1, h.length)), l), 
                                        f && (E.push(G.toString()), a.each(n, function(a, b) {
                                            b.alternation = h.length - 1;
                                        })));
                                    }
                                    u = n.slice(), k = C, n = [];
                                    for (var H = 0; H < u.length; H++) {
                                        var I = u[H], J = !1;
                                        I.alternation = I.alternation || z;
                                        for (var K = 0; K < x.length; K++) {
                                            var L = x[K];
                                            if (("string" != typeof A || a.inArray(I.locator[I.alternation].toString(), E) !== -1) && (I.match.def === L.match.def || s(I, L))) {
                                                J = I.match.mask === L.match.mask, L.locator[I.alternation].toString().indexOf(I.locator[I.alternation]) === -1 && (L.locator[I.alternation] = L.locator[I.alternation] + "," + I.locator[I.alternation], 
                                                L.alternation = I.alternation, null == I.match.fn && (L.na = L.na || I.locator[I.alternation].toString(), 
                                                L.na.indexOf(I.locator[I.alternation]) === -1 && (L.na = L.na + "," + I.locator[I.alternation])));
                                                break;
                                            }
                                        }
                                        J || x.push(I);
                                    }
                                }
                                "string" == typeof A && (x = a.map(x, function(b, c) {
                                    if (isFinite(c)) {
                                        var d, e = b.alternation, f = b.locator[e].toString().split(",");
                                        b.locator[e] = void 0, b.alternation = void 0;
                                        for (var g = 0; g < f.length; g++) d = a.inArray(f[g], E) !== -1, d && (void 0 !== b.locator[e] ? (b.locator[e] += ",", 
                                        b.locator[e] += f[g]) : b.locator[e] = parseInt(f[g]), b.alternation = e);
                                        if (void 0 !== b.locator[e]) return b;
                                    }
                                })), n = y.concat(x), k = b, o = n.length > 0, d = D.slice();
                            } else f = j(w.matches[A] || c.matches[A], [ A ].concat(h), l);
                            if (f) return !0;
                        } else if (f.isQuantifier && l !== c.matches[a.inArray(f, c.matches) - 1]) for (var M = f, N = d.length > 0 ? d.shift() : 0; N < (isNaN(M.quantifier.max) ? N + 1 : M.quantifier.max) && k <= b; N++) {
                            var O = c.matches[a.inArray(M, c.matches) - 1];
                            if (f = j(O, [ N ].concat(h), O)) {
                                if (i = n[n.length - 1].match, i.optionalQuantifier = N > M.quantifier.min - 1, 
                                q(i, O)) {
                                    if (N > M.quantifier.min - 1) {
                                        o = !0, k = b;
                                        break;
                                    }
                                    return !0;
                                }
                                return !0;
                            }
                        } else if (f = e(f, d, h, l)) return !0;
                    } else k++;
                }
                for (var l = d.length > 0 ? d.shift() : 0; l < c.matches.length; l++) if (c.matches[l].isQuantifier !== !0) {
                    var q = j(c.matches[l], [ l ].concat(f), h);
                    if (q && k === b) return q;
                    if (k > b) break;
                }
            }
            function f(b) {
                var c = [];
                return a.isArray(b) || (b = [ b ]), b.length > 0 && (void 0 === b[0].alternation ? (c = r(b.slice()).locator.slice(), 
                0 === c.length && (c = b[0].locator.slice())) : a.each(b, function(a, b) {
                    if ("" !== b.def) if (0 === c.length) c = b.locator.slice(); else for (var d = 0; d < c.length; d++) b.locator[d] && c[d].toString().indexOf(b.locator[d]) === -1 && (c[d] += "," + b.locator[d]);
                })), c;
            }
            function h(a) {
                return g.keepStatic && b > 0 && a.length > 1 + ("" === a[a.length - 1].match.def ? 1 : 0) && a[0].match.optionality !== !0 && a[0].match.optionalQuantifier !== !0 && null === a[0].match.fn && !/[0-9a-bA-Z]/.test(a[0].match.def) ? [ r(a) ] : a;
            }
            var i, j = m().maskToken, k = c ? d : 0, l = c ? c.slice() : [ 0 ], n = [], o = !1, p = c ? c.join("") : "";
            if (b > -1) {
                if (void 0 === c) {
                    for (var q, s = b - 1; void 0 === (q = m().validPositions[s] || m().tests[s]) && s > -1; ) s--;
                    void 0 !== q && s > -1 && (l = f(q), p = l.join(""), k = s);
                }
                if (m().tests[b] && m().tests[b][0].cd === p) return h(m().tests[b]);
                for (var t = l.shift(); t < j.length; t++) {
                    var u = e(j[t], l, [ t ]);
                    if (u && k === b || k > b) break;
                }
            }
            return (0 === n.length || o) && n.push({
                match: {
                    fn: null,
                    cardinality: 0,
                    optionality: !0,
                    casing: null,
                    def: "",
                    placeholder: ""
                },
                locator: [],
                cd: p
            }), void 0 !== c && m().tests[b] ? h(a.extend(!0, [], n)) : (m().tests[b] = a.extend(!0, [], n), 
            h(m().tests[b]));
        }
        function x() {
            return void 0 === m()._buffer && (m()._buffer = i(!1, 1), void 0 === m().buffer && m()._buffer.slice()), 
            m()._buffer;
        }
        function y(a) {
            return void 0 !== m().buffer && a !== !0 || (m().buffer = i(!0, o(), !0)), m().buffer;
        }
        function z(a, b, c) {
            var d;
            if (a === !0) n(), a = 0, b = c.length; else for (d = a; d < b; d++) delete m().validPositions[d];
            for (d = a; d < b; d++) n(!0), c[d] !== g.skipOptionalPartCharacter && C(d, c[d], !0, !0);
        }
        function A(a, c, d) {
            switch (c.casing) {
              case "upper":
                a = a.toUpperCase();
                break;

              case "lower":
                a = a.toLowerCase();
                break;

              case "title":
                var e = m().validPositions[d - 1];
                a = 0 === d || e && e.input === String.fromCharCode(b.keyCode.SPACE) ? a.toUpperCase() : a.toLowerCase();
            }
            return a;
        }
        function B(b, c) {
            for (var d = g.greedy ? c : c.slice(0, 1), e = !1, f = 0; f < b.length; f++) if (a.inArray(b[f], d) !== -1) {
                e = !0;
                break;
            }
            return e;
        }
        function C(c, d, e, f, h) {
            function i(a) {
                return ja ? a.begin - a.end > 1 || a.begin - a.end === 1 && g.insertMode : a.end - a.begin > 1 || a.end - a.begin === 1 && g.insertMode;
            }
            function j(b, d, e) {
                var h = !1;
                return a.each(w(b), function(j, k) {
                    for (var l = k.match, r = d ? 1 : 0, s = "", t = l.cardinality; t > r; t--) s += G(b - (t - 1));
                    if (d && (s += d), y(!0), h = null != l.fn ? l.fn.test(s, m(), b, e, g, i(c)) : (d === l.def || d === g.skipOptionalPartCharacter) && "" !== l.def && {
                        c: l.placeholder || l.def,
                        pos: b
                    }, h !== !1) {
                        var u = void 0 !== h.c ? h.c : d;
                        u = u === g.skipOptionalPartCharacter && null === l.fn ? l.placeholder || l.def : u;
                        var v = b, w = y();
                        if (void 0 !== h.remove && (a.isArray(h.remove) || (h.remove = [ h.remove ]), a.each(h.remove.sort(function(a, b) {
                            return b - a;
                        }), function(a, b) {
                            q(b, b + 1, !0);
                        })), void 0 !== h.insert && (a.isArray(h.insert) || (h.insert = [ h.insert ]), a.each(h.insert.sort(function(a, b) {
                            return a - b;
                        }), function(a, b) {
                            C(b.pos, b.c, !1, f);
                        })), h.refreshFromBuffer) {
                            var x = h.refreshFromBuffer;
                            if (e = !0, z(x === !0 ? x : x.start, x.end, w), void 0 === h.pos && void 0 === h.c) return h.pos = o(), 
                            !1;
                            if (v = void 0 !== h.pos ? h.pos : b, v !== b) return h = a.extend(h, C(v, u, !0, f)), 
                            !1;
                        } else if (h !== !0 && void 0 !== h.pos && h.pos !== b && (v = h.pos, z(b, v, y().slice()), 
                        v !== b)) return h = a.extend(h, C(v, u, !0)), !1;
                        return (h === !0 || void 0 !== h.pos || void 0 !== h.c) && (j > 0 && n(!0), p(v, a.extend({}, k, {
                            input: A(u, l, v)
                        }), f, i(c)) || (h = !1), !1);
                    }
                }), h;
            }
            function k(b, c, d) {
                var e, h, i, j, k, l, p, q, r = a.extend(!0, {}, m().validPositions), s = !1, t = o();
                for (j = m().validPositions[t]; t >= 0; t--) if (i = m().validPositions[t], i && void 0 !== i.alternation) {
                    if (e = t, h = m().validPositions[e].alternation, j.locator[i.alternation] !== i.locator[i.alternation]) break;
                    j = i;
                }
                if (void 0 !== h) {
                    q = parseInt(e);
                    var u = void 0 !== j.locator[j.alternation || h] ? j.locator[j.alternation || h] : p[0];
                    u.length > 0 && (u = u.split(",")[0]);
                    var v = m().validPositions[q], x = m().validPositions[q - 1];
                    a.each(w(q, x ? x.locator : void 0, q - 1), function(e, i) {
                        p = i.locator[h] ? i.locator[h].toString().split(",") : [];
                        for (var j = 0; j < p.length; j++) {
                            var t = [], w = 0, x = 0, y = !1;
                            if (u < p[j] && (void 0 === i.na || a.inArray(p[j], i.na.split(",")) === -1)) {
                                m().validPositions[q] = a.extend(!0, {}, i);
                                var z = m().validPositions[q].locator;
                                for (m().validPositions[q].locator[h] = parseInt(p[j]), null == i.match.fn ? (v.input !== i.match.def && (y = !0, 
                                v.generatedInput !== !0 && t.push(v.input)), x++, m().validPositions[q].generatedInput = !/[0-9a-bA-Z]/.test(i.match.def), 
                                m().validPositions[q].input = i.match.def) : m().validPositions[q].input = v.input, 
                                k = q + 1; k < o(void 0, !0) + 1; k++) l = m().validPositions[k], l && l.generatedInput !== !0 && /[0-9a-bA-Z]/.test(l.input) ? t.push(l.input) : k < b && w++, 
                                delete m().validPositions[k];
                                for (y && t[0] === i.match.def && t.shift(), n(!0), s = !0; t.length > 0; ) {
                                    var A = t.shift();
                                    if (A !== g.skipOptionalPartCharacter && !(s = C(o(void 0, !0) + 1, A, !1, f, !0))) break;
                                }
                                if (s) {
                                    m().validPositions[q].locator = z;
                                    var B = o(b) + 1;
                                    for (k = q + 1; k < o() + 1; k++) l = m().validPositions[k], (void 0 === l || null == l.match.fn) && k < b + (x - w) && x++;
                                    b += x - w, s = C(b > B ? B : b, c, d, f, !0);
                                }
                                if (s) return !1;
                                n(), m().validPositions = a.extend(!0, {}, r);
                            }
                        }
                    });
                }
                return s;
            }
            function l(b, c) {
                for (var d = m().validPositions[c], e = d.locator, f = e.length, g = b; g < c; g++) if (void 0 === m().validPositions[g] && !D(g, !0)) {
                    var h = w(g), i = h[0], j = -1;
                    a.each(h, function(a, b) {
                        for (var c = 0; c < f && void 0 !== b.locator[c] && B(b.locator[c].toString().split(","), e[c].toString().split(",")); c++) j < c && (j = c, 
                        i = b);
                    }), p(g, a.extend({}, i, {
                        input: i.match.placeholder || i.match.def
                    }), !0);
                }
            }
            e = e === !0;
            var t = c;
            void 0 !== c.begin && (t = ja && !i(c) ? c.end : c.begin);
            for (var u = !1, v = a.extend(!0, {}, m().validPositions), x = t - 1; x > -1 && !m().validPositions[x]; x--) ;
            var F;
            for (x++; x < t; x++) void 0 === m().validPositions[x] && (g.jitMasking === !1 || g.jitMasking > x) && ((F = s(x, s(x - 1).locator, x - 1)).match.def === g.radixPointDefinitionSymbol || !D(x, !0) || a.inArray(g.radixPoint, y()) < x && F.match.fn && F.match.fn.test(I(x), m(), x, !1, g)) && (u = j(x, F.match.placeholder || (null == F.match.fn ? F.match.def : "" !== I(x) ? I(x) : y()[x]), !0), 
            u !== !1 && (m().validPositions[u.pos || x].generatedInput = !0));
            if (i(c) && (Q(void 0, b.keyCode.DELETE, c), t = m().p), t < m().maskLength && (u = j(t, d, e), 
            (!e || f === !0) && u === !1)) {
                var H = m().validPositions[t];
                if (!H || null !== H.match.fn || H.match.def !== d && d !== g.skipOptionalPartCharacter) {
                    if ((g.insertMode || void 0 === m().validPositions[E(t)]) && !D(t, !0)) {
                        var J = w(t).slice();
                        "" === J[J.length - 1].match.def && J.pop();
                        var K = r(J, !0);
                        K && (K = K.match.placeholder || K.match.def, j(t, K, e));
                        for (var L = t + 1, M = E(t); L <= M; L++) if (u = j(L, d, e), u !== !1) {
                            l(t, L), t = L;
                            break;
                        }
                    }
                } else u = {
                    caret: E(t)
                };
            }
            return u === !1 && g.keepStatic && !e && h !== !0 && (u = k(t, d, e)), u === !0 && (u = {
                pos: t
            }), a.isFunction(g.postValidation) && u !== !1 && !e && f !== !0 && (u = !!g.postValidation(y(!0), u, g) && u), 
            void 0 === u.pos && (u.pos = t), u === !1 && (n(!0), m().validPositions = a.extend(!0, {}, v)), 
            u;
        }
        function D(a, b) {
            var c;
            if (b ? (c = s(a).match, "" === c.def && (c = t(a).match)) : c = t(a).match, null != c.fn) return c.fn;
            if (b !== !0 && a > -1) {
                var d = w(a);
                return d.length > 1 + ("" === d[d.length - 1].match.def ? 1 : 0);
            }
            return !1;
        }
        function E(a, b) {
            var c = m().maskLength;
            if (a >= c) return c;
            for (var d = a; ++d < c && (b === !0 && (t(d).match.newBlockMarker !== !0 || !D(d)) || b !== !0 && !D(d)); ) ;
            return d;
        }
        function F(a, b) {
            var c, d = a;
            if (d <= 0) return 0;
            for (;--d > 0 && (b === !0 && t(d).match.newBlockMarker !== !0 || b !== !0 && !D(d) && (c = w(d), 
            c.length < 2 || 2 === c.length && "" === c[1].match.def)); ) ;
            return d;
        }
        function G(a) {
            return void 0 === m().validPositions[a] ? I(a) : m().validPositions[a].input;
        }
        function H(b, c, d, e, f) {
            if (e && a.isFunction(g.onBeforeWrite)) {
                var h = g.onBeforeWrite(e, c, d, g);
                if (h) {
                    if (h.refreshFromBuffer) {
                        var i = h.refreshFromBuffer;
                        z(i === !0 ? i : i.start, i.end, h.buffer || c), c = y(!0);
                    }
                    void 0 !== d && (d = void 0 !== h.caret ? h.caret : d);
                }
            }
            b.inputmask._valueSet(c.join("")), void 0 === d || void 0 !== e && "blur" === e.type || L(b, d), 
            f === !0 && (la = !0, a(b).trigger("input"));
        }
        function I(a, b) {
            if (b = b || t(a).match, void 0 !== b.placeholder) return b.placeholder;
            if (null === b.fn) {
                if (a > -1 && void 0 === m().validPositions[a]) {
                    var c, d = w(a), e = [];
                    if (d.length > 1 + ("" === d[d.length - 1].match.def ? 1 : 0)) for (var f = 0; f < d.length; f++) if (d[f].match.optionality !== !0 && d[f].match.optionalQuantifier !== !0 && (null === d[f].match.fn || void 0 === c || d[f].match.fn.test(c.match.def, m(), a, !0, g) !== !1) && (e.push(d[f]), 
                    null === d[f].match.fn && (c = d[f]), e.length > 1 && /[0-9a-bA-Z]/.test(e[0].match.def))) return g.placeholder.charAt(a % g.placeholder.length);
                }
                return b.def;
            }
            return g.placeholder.charAt(a % g.placeholder.length);
        }
        function J(c, d, e, f, h) {
            function i() {
                var a = !1, b = x().slice(l, E(l)).join("").indexOf(k);
                if (b !== -1 && !D(l)) {
                    a = !0;
                    for (var c = x().slice(l, l + b), d = 0; d < c.length; d++) if (" " !== c[d]) {
                        a = !1;
                        break;
                    }
                }
                return a;
            }
            var j = f.slice(), k = "", l = 0, p = void 0;
            if (n(), m().p = E(-1), !e) if (g.autoUnmask !== !0) {
                var q = x().slice(0, E(-1)).join(""), r = j.join("").match(new RegExp("^" + b.escapeRegex(q), "g"));
                r && r.length > 0 && (j.splice(0, r.length * q.length), l = E(l));
            } else l = E(l);
            if (a.each(j, function(b, d) {
                if (void 0 !== d) {
                    var f = new a.Event("keypress");
                    f.which = d.charCodeAt(0), k += d;
                    var h = o(void 0, !0), j = m().validPositions[h], q = s(h + 1, j ? j.locator.slice() : void 0, h);
                    if (!i() || e || g.autoUnmask) {
                        var r = e ? b : null == q.match.fn && q.match.optionality && h + 1 < m().p ? h + 1 : m().p;
                        p = S.call(c, f, !0, !1, e, r), l = r + 1, k = "";
                    } else p = S.call(c, f, !0, !1, !0, h + 1);
                    if (!e && a.isFunction(g.onBeforeWrite) && (p = g.onBeforeWrite(f, y(), p.forwardPosition, g), 
                    p && p.refreshFromBuffer)) {
                        var t = p.refreshFromBuffer;
                        z(t === !0 ? t : t.start, t.end, p.buffer), n(!0), p.caret && (m().p = p.caret);
                    }
                }
            }), d) {
                var t = document.activeElement === c && (h || p) ? h ? L(c).begin : p.forwardPosition : void 0, u = y().length - c.inputmask._valueGet().length;
                H(c, y(), t + u, h || new a.Event("checkval"));
            }
        }
        function K(b) {
            if (b && void 0 === b.inputmask) return b.value;
            var c = [], d = m().validPositions;
            for (var e in d) d[e].match && null != d[e].match.fn && c.push(d[e].input);
            var f = 0 === c.length ? "" : (ja ? c.reverse() : c).join("");
            if (a.isFunction(g.onUnMask)) {
                var h = (ja ? y().slice().reverse() : y()).join("");
                f = g.onUnMask(h, f, g) || f;
            }
            return f;
        }
        function L(a, b, c, d) {
            function e(a) {
                if (d !== !0 && ja && "number" == typeof a && (!g.greedy || "" !== g.placeholder)) {
                    var b = y().join("").length;
                    a = b - a;
                }
                return a;
            }
            var f;
            if ("number" != typeof b) return a.setSelectionRange ? (b = a.selectionStart, c = a.selectionEnd) : window.getSelection ? (f = window.getSelection().getRangeAt(0), 
            f.commonAncestorContainer.parentNode !== a && f.commonAncestorContainer !== a || (b = f.startOffset, 
            c = f.endOffset)) : document.selection && document.selection.createRange && (f = document.selection.createRange(), 
            b = 0 - f.duplicate().moveStart("character", -a.inputmask._valueGet().length), c = b + f.text.length), 
            {
                begin: e(b),
                end: e(c)
            };
            b = e(b), c = e(c), c = "number" == typeof c ? c : b;
            var h = parseInt(((a.ownerDocument.defaultView || window).getComputedStyle ? (a.ownerDocument.defaultView || window).getComputedStyle(a, null) : a.currentStyle).fontSize) * c;
            if (a.scrollLeft = h > a.scrollWidth ? h : 0, j || g.insertMode !== !1 || b !== c || c++, 
            a.setSelectionRange) a.selectionStart = b, a.selectionEnd = c; else if (window.getSelection) {
                if (f = document.createRange(), void 0 === a.firstChild || null === a.firstChild) {
                    var i = document.createTextNode("");
                    a.appendChild(i);
                }
                f.setStart(a.firstChild, b < a.inputmask._valueGet().length ? b : a.inputmask._valueGet().length), 
                f.setEnd(a.firstChild, c < a.inputmask._valueGet().length ? c : a.inputmask._valueGet().length), 
                f.collapse(!0);
                var k = window.getSelection();
                k.removeAllRanges(), k.addRange(f);
            } else a.createTextRange && (f = a.createTextRange(), f.collapse(!0), f.moveEnd("character", c), 
            f.moveStart("character", b), f.select());
        }
        function M(b) {
            var c, d, e = y(), f = e.length, g = o(), h = {}, i = m().validPositions[g], j = void 0 !== i ? i.locator.slice() : void 0;
            for (c = g + 1; c < e.length; c++) d = s(c, j, c - 1), j = d.locator.slice(), h[c] = a.extend(!0, {}, d);
            var k = i && void 0 !== i.alternation ? i.locator[i.alternation] : void 0;
            for (c = f - 1; c > g && (d = h[c], (d.match.optionality || d.match.optionalQuantifier || k && (k !== h[c].locator[i.alternation] && null != d.match.fn || null === d.match.fn && d.locator[i.alternation] && B(d.locator[i.alternation].toString().split(","), k.toString().split(",")) && "" !== w(c)[0].def)) && e[c] === I(c, d.match)); c--) f--;
            return b ? {
                l: f,
                def: h[f] ? h[f].match : void 0
            } : f;
        }
        function N(a) {
            for (var b = M(), c = a.length - 1; c > b && !D(c); c--) ;
            return a.splice(b, c + 1 - b), a;
        }
        function O(b) {
            if (a.isFunction(g.isComplete)) return g.isComplete(b, g);
            if ("*" !== g.repeat) {
                var c = !1, d = M(!0), e = F(d.l);
                if (void 0 === d.def || d.def.newBlockMarker || d.def.optionality || d.def.optionalQuantifier) {
                    c = !0;
                    for (var f = 0; f <= e; f++) {
                        var h = s(f).match;
                        if (null !== h.fn && void 0 === m().validPositions[f] && h.optionality !== !0 && h.optionalQuantifier !== !0 || null === h.fn && b[f] !== I(f, h)) {
                            c = !1;
                            break;
                        }
                    }
                }
                return c;
            }
        }
        function P(b) {
            function c(b) {
                if (a.valHooks && (void 0 === a.valHooks[b] || a.valHooks[b].inputmaskpatch !== !0)) {
                    var c = a.valHooks[b] && a.valHooks[b].get ? a.valHooks[b].get : function(a) {
                        return a.value;
                    }, d = a.valHooks[b] && a.valHooks[b].set ? a.valHooks[b].set : function(a, b) {
                        return a.value = b, a;
                    };
                    a.valHooks[b] = {
                        get: function(a) {
                            if (a.inputmask) {
                                if (a.inputmask.opts.autoUnmask) return a.inputmask.unmaskedvalue();
                                var b = c(a);
                                return o(void 0, void 0, a.inputmask.maskset.validPositions) !== -1 || g.nullable !== !0 ? b : "";
                            }
                            return c(a);
                        },
                        set: function(b, c) {
                            var e, f = a(b);
                            return e = d(b, c), b.inputmask && f.trigger("setvalue"), e;
                        },
                        inputmaskpatch: !0
                    };
                }
            }
            function d() {
                return this.inputmask ? this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : o() !== -1 || g.nullable !== !0 ? document.activeElement === this && g.clearMaskOnLostFocus ? (ja ? N(y().slice()).reverse() : N(y().slice())).join("") : h.call(this) : "" : h.call(this);
            }
            function e(b) {
                i.call(this, b), this.inputmask && a(this).trigger("setvalue");
            }
            function f(b) {
                oa.on(b, "mouseenter", function(b) {
                    var c = a(this), d = this, e = d.inputmask._valueGet();
                    e !== y().join("") && c.trigger("setvalue");
                });
            }
            var h, i;
            if (!b.inputmask.__valueGet) {
                if (Object.getOwnPropertyDescriptor) {
                    "function" != typeof Object.getPrototypeOf && (Object.getPrototypeOf = "object" == typeof "test".__proto__ ? function(a) {
                        return a.__proto__;
                    } : function(a) {
                        return a.constructor.prototype;
                    });
                    var j = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(b), "value") : void 0;
                    j && j.get && j.set ? (h = j.get, i = j.set, Object.defineProperty(b, "value", {
                        get: d,
                        set: e,
                        configurable: !0
                    })) : "INPUT" !== b.tagName && (h = function() {
                        return this.textContent;
                    }, i = function(a) {
                        this.textContent = a;
                    }, Object.defineProperty(b, "value", {
                        get: d,
                        set: e,
                        configurable: !0
                    }));
                } else document.__lookupGetter__ && b.__lookupGetter__("value") && (h = b.__lookupGetter__("value"), 
                i = b.__lookupSetter__("value"), b.__defineGetter__("value", d), b.__defineSetter__("value", e));
                b.inputmask.__valueGet = h, b.inputmask._valueGet = function(a) {
                    return ja && a !== !0 ? h.call(this.el).split("").reverse().join("") : h.call(this.el);
                }, b.inputmask.__valueSet = i, b.inputmask._valueSet = function(a, b) {
                    i.call(this.el, null === a || void 0 === a ? "" : b !== !0 && ja ? a.split("").reverse().join("") : a);
                }, void 0 === h && (h = function() {
                    return this.value;
                }, i = function(a) {
                    this.value = a;
                }, c(b.type), f(b));
            }
        }
        function Q(c, d, e, f) {
            function h() {
                if (g.keepStatic) {
                    for (var b = [], d = o(-1, !0), e = a.extend(!0, {}, m().validPositions), f = m().validPositions[d]; d >= 0; d--) {
                        var h = m().validPositions[d];
                        if (h) {
                            if (/[0-9a-bA-Z]/.test(h.input) && b.push(h.input), delete m().validPositions[d], 
                            void 0 !== h.alternation && h.locator[h.alternation] !== f.locator[h.alternation]) break;
                            f = h;
                        }
                    }
                    if (d > -1) for (m().p = E(o(-1, !0)); b.length > 0; ) {
                        var i = new a.Event("keypress");
                        i.which = b.pop().charCodeAt(0), S.call(c, i, !0, !1, !1, m().p);
                    } else m().validPositions = a.extend(!0, {}, e);
                }
            }
            if ((g.numericInput || ja) && (d === b.keyCode.BACKSPACE ? d = b.keyCode.DELETE : d === b.keyCode.DELETE && (d = b.keyCode.BACKSPACE), 
            ja)) {
                var i = e.end;
                e.end = e.begin, e.begin = i;
            }
            d === b.keyCode.BACKSPACE && (e.end - e.begin < 1 || g.insertMode === !1) ? (e.begin = F(e.begin), 
            void 0 === m().validPositions[e.begin] || m().validPositions[e.begin].input !== g.groupSeparator && m().validPositions[e.begin].input !== g.radixPoint || e.begin--) : d === b.keyCode.DELETE && e.begin === e.end && (e.end = D(e.end, !0) ? e.end + 1 : E(e.end) + 1, 
            void 0 === m().validPositions[e.begin] || m().validPositions[e.begin].input !== g.groupSeparator && m().validPositions[e.begin].input !== g.radixPoint || e.end++), 
            q(e.begin, e.end, !1, f), f !== !0 && h();
            var j = o(e.begin, !0);
            j < e.begin ? m().p = E(j) : f !== !0 && (m().p = e.begin);
        }
        function R(d) {
            var e = this, f = a(e), h = d.keyCode, i = L(e);
            if (h === b.keyCode.BACKSPACE || h === b.keyCode.DELETE || l && h === b.keyCode.BACKSPACE_SAFARI || d.ctrlKey && h === b.keyCode.X && !c("cut")) d.preventDefault(), 
            Q(e, h, i), H(e, y(!0), m().p, d, e.inputmask._valueGet() !== y().join("")), e.inputmask._valueGet() === x().join("") ? f.trigger("cleared") : O(y()) === !0 && f.trigger("complete"), 
            g.showTooltip && (e.title = g.tooltip || m().mask); else if (h === b.keyCode.END || h === b.keyCode.PAGE_DOWN) {
                d.preventDefault();
                var j = E(o());
                g.insertMode || j !== m().maskLength || d.shiftKey || j--, L(e, d.shiftKey ? i.begin : j, j, !0);
            } else h === b.keyCode.HOME && !d.shiftKey || h === b.keyCode.PAGE_UP ? (d.preventDefault(), 
            L(e, 0, d.shiftKey ? i.begin : 0, !0)) : (g.undoOnEscape && h === b.keyCode.ESCAPE || 90 === h && d.ctrlKey) && d.altKey !== !0 ? (J(e, !0, !1, ea.split("")), 
            f.trigger("click")) : h !== b.keyCode.INSERT || d.shiftKey || d.ctrlKey ? g.tabThrough === !0 && h === b.keyCode.TAB ? (d.shiftKey === !0 ? (null === t(i.begin).match.fn && (i.begin = E(i.begin)), 
            i.end = F(i.begin, !0), i.begin = F(i.end, !0)) : (i.begin = E(i.begin, !0), i.end = E(i.begin, !0), 
            i.end < m().maskLength && i.end--), i.begin < m().maskLength && (d.preventDefault(), 
            L(e, i.begin, i.end))) : g.insertMode !== !1 || d.shiftKey || (h === b.keyCode.RIGHT ? setTimeout(function() {
                var a = L(e);
                L(e, a.begin);
            }, 0) : h === b.keyCode.LEFT && setTimeout(function() {
                var a = L(e);
                L(e, ja ? a.begin + 1 : a.begin - 1);
            }, 0)) : (g.insertMode = !g.insertMode, L(e, g.insertMode || i.begin !== m().maskLength ? i.begin : i.begin - 1));
            g.onKeyDown.call(this, d, y(), L(e).begin, g), ma = a.inArray(h, g.ignorables) !== -1;
        }
        function S(c, d, e, f, h) {
            var i = this, j = a(i), k = c.which || c.charCode || c.keyCode;
            if (!(d === !0 || c.ctrlKey && c.altKey) && (c.ctrlKey || c.metaKey || ma)) return k === b.keyCode.ENTER && ea !== y().join("") && (ea = y().join(""), 
            setTimeout(function() {
                j.trigger("change");
            }, 0)), !0;
            if (k) {
                46 === k && c.shiftKey === !1 && "," === g.radixPoint && (k = 44);
                var l, o = d ? {
                    begin: h,
                    end: h
                } : L(i), p = String.fromCharCode(k);
                m().writeOutBuffer = !0;
                var q = C(o, p, f);
                if (q !== !1 && (n(!0), l = void 0 !== q.caret ? q.caret : d ? q.pos + 1 : E(q.pos), 
                m().p = l), e !== !1) {
                    var r = this;
                    if (setTimeout(function() {
                        g.onKeyValidation.call(r, k, q, g);
                    }, 0), m().writeOutBuffer && q !== !1) {
                        var s = y();
                        H(i, s, g.numericInput && void 0 === q.caret ? F(l) : l, c, d !== !0), d !== !0 && setTimeout(function() {
                            O(s) === !0 && j.trigger("complete");
                        }, 0);
                    }
                }
                if (g.showTooltip && (i.title = g.tooltip || m().mask), c.preventDefault(), d) return q.forwardPosition = l, 
                q;
            }
        }
        function T(b) {
            var c, d = this, e = b.originalEvent || b, f = a(d), h = d.inputmask._valueGet(!0), i = L(d);
            ja && (c = i.end, i.end = i.begin, i.begin = c);
            var j = h.substr(0, i.begin), k = h.substr(i.end, h.length);
            j === (ja ? x().reverse() : x()).slice(0, i.begin).join("") && (j = ""), k === (ja ? x().reverse() : x()).slice(i.end).join("") && (k = ""), 
            ja && (c = j, j = k, k = c), window.clipboardData && window.clipboardData.getData ? h = j + window.clipboardData.getData("Text") + k : e.clipboardData && e.clipboardData.getData && (h = j + e.clipboardData.getData("text/plain") + k);
            var l = h;
            if (a.isFunction(g.onBeforePaste)) {
                if (l = g.onBeforePaste(h, g), l === !1) return b.preventDefault();
                l || (l = h);
            }
            return J(d, !1, !1, ja ? l.split("").reverse() : l.toString().split("")), H(d, y(), E(o()), b, ea !== y().join("")), 
            O(y()) === !0 && f.trigger("complete"), b.preventDefault();
        }
        function U(c) {
            var d = this, e = d.inputmask._valueGet();
            if (y().join("") !== e) {
                var f = L(d);
                if (e = e.replace(new RegExp("(" + b.escapeRegex(x().join("")) + ")*"), ""), k) {
                    var g = e.replace(y().join(""), "");
                    if (1 === g.length) {
                        var h = new a.Event("keypress");
                        return h.which = g.charCodeAt(0), S.call(d, h, !0, !0, !1, m().validPositions[f.begin - 1] ? f.begin : f.begin - 1), 
                        !1;
                    }
                }
                if (f.begin > e.length && (L(d, e.length), f = L(d)), y().length - e.length !== 1 || e.charAt(f.begin) === y()[f.begin] || e.charAt(f.begin + 1) === y()[f.begin] || D(f.begin)) {
                    for (var i = o() + 1, j = y().slice(i).join(""); null === e.match(b.escapeRegex(j) + "$"); ) j = j.slice(1);
                    e = e.replace(j, ""), e = e.split(""), J(d, !0, !1, e, c), O(y()) === !0 && a(d).trigger("complete");
                } else c.keyCode = b.keyCode.BACKSPACE, R.call(d, c);
                c.preventDefault();
            }
        }
        function V(b) {
            var c = this, d = c.inputmask._valueGet();
            J(c, !0, !1, (a.isFunction(g.onBeforeMask) ? g.onBeforeMask(d, g) || d : d).split("")), 
            ea = y().join(""), (g.clearMaskOnLostFocus || g.clearIncomplete) && c.inputmask._valueGet() === x().join("") && c.inputmask._valueSet("");
        }
        function W(a) {
            var b = this, c = b.inputmask._valueGet();
            g.showMaskOnFocus && (!g.showMaskOnHover || g.showMaskOnHover && "" === c) ? b.inputmask._valueGet() !== y().join("") && H(b, y(), E(o())) : na === !1 && L(b, E(o())), 
            g.positionCaretOnTab === !0 && setTimeout(function() {
                Y.apply(this, [ a ]);
            }, 0), ea = y().join("");
        }
        function X(a) {
            var b = this;
            if (na = !1, g.clearMaskOnLostFocus && document.activeElement !== b) {
                var c = y().slice(), d = b.inputmask._valueGet();
                d !== b.getAttribute("placeholder") && "" !== d && (o() === -1 && d === x().join("") ? c = [] : N(c), 
                H(b, c));
            }
        }
        function Y(b) {
            function c(b) {
                if ("" !== g.radixPoint) {
                    var c = m().validPositions;
                    if (void 0 === c[b] || c[b].input === I(b)) {
                        if (b < E(-1)) return !0;
                        var d = a.inArray(g.radixPoint, y());
                        if (d !== -1) {
                            for (var e in c) if (d < e && c[e].input !== I(e)) return !1;
                            return !0;
                        }
                    }
                }
                return !1;
            }
            var d = this;
            setTimeout(function() {
                if (document.activeElement === d) {
                    var b = L(d);
                    if (b.begin === b.end) switch (g.positionCaretOnClick) {
                      case "none":
                        break;

                      case "radixFocus":
                        if (c(b.begin)) {
                            L(d, g.numericInput ? E(a.inArray(g.radixPoint, y())) : a.inArray(g.radixPoint, y()));
                            break;
                        }

                      default:
                        var e = b.begin, f = o(e, !0), h = E(f);
                        if (e < h) L(d, D(e) || D(e - 1) ? e : E(e)); else {
                            var i = I(h);
                            ("" !== i && y()[h] !== i && t(h).match.optionalQuantifier !== !0 || !D(h, !0) && t(h).match.def === i) && (h = E(h)), 
                            L(d, h);
                        }
                    }
                }
            }, 0);
        }
        function Z(a) {
            var b = this;
            setTimeout(function() {
                L(b, 0, E(o()));
            }, 0);
        }
        function $(c) {
            var d = this, e = a(d), f = L(d), h = c.originalEvent || c, i = window.clipboardData || h.clipboardData, j = ja ? y().slice(f.end, f.begin) : y().slice(f.begin, f.end);
            i.setData("text", ja ? j.reverse().join("") : j.join("")), document.execCommand && document.execCommand("copy"), 
            Q(d, b.keyCode.DELETE, f), H(d, y(), m().p, c, ea !== y().join("")), d.inputmask._valueGet() === x().join("") && e.trigger("cleared"), 
            g.showTooltip && (d.title = g.tooltip || m().mask);
        }
        function _(b) {
            var c = a(this), d = this;
            if (d.inputmask) {
                var e = d.inputmask._valueGet(), f = y().slice();
                ea !== f.join("") && setTimeout(function() {
                    c.trigger("change"), ea = f.join("");
                }, 0), "" !== e && (g.clearMaskOnLostFocus && (o() === -1 && e === x().join("") ? f = [] : N(f)), 
                O(f) === !1 && (setTimeout(function() {
                    c.trigger("incomplete");
                }, 0), g.clearIncomplete && (n(), f = g.clearMaskOnLostFocus ? [] : x().slice())), 
                H(d, f, void 0, b));
            }
        }
        function aa(a) {
            var b = this;
            na = !0, document.activeElement !== b && g.showMaskOnHover && b.inputmask._valueGet() !== y().join("") && H(b, y());
        }
        function ba(a) {
            ea !== y().join("") && ga.trigger("change"), g.clearMaskOnLostFocus && o() === -1 && fa.inputmask._valueGet && fa.inputmask._valueGet() === x().join("") && fa.inputmask._valueSet(""), 
            g.removeMaskOnSubmit && (fa.inputmask._valueSet(fa.inputmask.unmaskedvalue(), !0), 
            setTimeout(function() {
                H(fa, y());
            }, 0));
        }
        function ca(a) {
            setTimeout(function() {
                ga.trigger("setvalue");
            }, 0);
        }
        function da(b) {
            if (fa = b, ga = a(fa), g.showTooltip && (fa.title = g.tooltip || m().mask), ("rtl" === fa.dir || g.rightAlign) && (fa.style.textAlign = "right"), 
            ("rtl" === fa.dir || g.numericInput) && (fa.dir = "ltr", fa.removeAttribute("dir"), 
            fa.inputmask.isRTL = !0, ja = !0), oa.off(fa), P(fa), d(fa, g) && (oa.on(fa, "submit", ba), 
            oa.on(fa, "reset", ca), oa.on(fa, "mouseenter", aa), oa.on(fa, "blur", _), oa.on(fa, "focus", W), 
            oa.on(fa, "mouseleave", X), oa.on(fa, "click", Y), oa.on(fa, "dblclick", Z), oa.on(fa, "paste", T), 
            oa.on(fa, "dragdrop", T), oa.on(fa, "drop", T), oa.on(fa, "cut", $), oa.on(fa, "complete", g.oncomplete), 
            oa.on(fa, "incomplete", g.onincomplete), oa.on(fa, "cleared", g.oncleared), g.inputEventOnly !== !0 && (oa.on(fa, "keydown", R), 
            oa.on(fa, "keypress", S)), oa.on(fa, "input", U)), oa.on(fa, "setvalue", V), x(), 
            "" !== fa.inputmask._valueGet() || g.clearMaskOnLostFocus === !1 || document.activeElement === fa) {
                var c = a.isFunction(g.onBeforeMask) ? g.onBeforeMask(fa.inputmask._valueGet(), g) || fa.inputmask._valueGet() : fa.inputmask._valueGet();
                J(fa, !0, !1, c.split(""));
                var e = y().slice();
                ea = e.join(""), O(e) === !1 && g.clearIncomplete && n(), g.clearMaskOnLostFocus && document.activeElement !== fa && (o() === -1 ? e = [] : N(e)), 
                H(fa, e), document.activeElement === fa && L(fa, E(o()));
            }
        }
        var ea, fa, ga, ha, ia, ja = !1, ka = !1, la = !1, ma = !1, na = !0, oa = {
            on: function(c, d, e) {
                var f = function(c) {
                    if (void 0 === this.inputmask && "FORM" !== this.nodeName) {
                        var d = a.data(this, "_inputmask_opts");
                        d ? new b(d).mask(this) : oa.off(this);
                    } else {
                        if ("setvalue" === c.type || !(this.disabled || this.readOnly && !("keydown" === c.type && c.ctrlKey && 67 === c.keyCode || g.tabThrough === !1 && c.keyCode === b.keyCode.TAB))) {
                            switch (c.type) {
                              case "input":
                                if (la === !0) return la = !1, c.preventDefault();
                                break;

                              case "keydown":
                                ka = !1, la = !1;
                                break;

                              case "keypress":
                                if (ka === !0) return c.preventDefault();
                                ka = !0;
                                break;

                              case "click":
                                if (k) {
                                    var f = this;
                                    return setTimeout(function() {
                                        e.apply(f, arguments);
                                    }, 0), !1;
                                }
                            }
                            var h = e.apply(this, arguments);
                            return h === !1 && (c.preventDefault(), c.stopPropagation()), h;
                        }
                        c.preventDefault();
                    }
                };
                c.inputmask.events[d] = c.inputmask.events[d] || [], c.inputmask.events[d].push(f), 
                a.inArray(d, [ "submit", "reset" ]) !== -1 ? null != c.form && a(c.form).on(d, f) : a(c).on(d, f);
            },
            off: function(b, c) {
                if (b.inputmask && b.inputmask.events) {
                    var d;
                    c ? (d = [], d[c] = b.inputmask.events[c]) : d = b.inputmask.events, a.each(d, function(c, d) {
                        for (;d.length > 0; ) {
                            var e = d.pop();
                            a.inArray(c, [ "submit", "reset" ]) !== -1 ? null != b.form && a(b.form).off(c, e) : a(b).off(c, e);
                        }
                        delete b.inputmask.events[c];
                    });
                }
            }
        };
        if (void 0 !== e) switch (e.action) {
          case "isComplete":
            return fa = e.el, O(y());

          case "unmaskedvalue":
            return fa = e.el, void 0 !== fa && void 0 !== fa.inputmask ? (f = fa.inputmask.maskset, 
            g = fa.inputmask.opts, ja = fa.inputmask.isRTL) : (ia = e.value, g.numericInput && (ja = !0), 
            ia = (a.isFunction(g.onBeforeMask) ? g.onBeforeMask(ia, g) || ia : ia).split(""), 
            J(void 0, !1, !1, ja ? ia.reverse() : ia), a.isFunction(g.onBeforeWrite) && g.onBeforeWrite(void 0, y(), 0, g)), 
            K(fa);

          case "mask":
            fa = e.el, f = fa.inputmask.maskset, g = fa.inputmask.opts, ja = fa.inputmask.isRTL, 
            da(fa);
            break;

          case "format":
            return g.numericInput && (ja = !0), ia = (a.isFunction(g.onBeforeMask) ? g.onBeforeMask(e.value, g) || e.value : e.value).split(""), 
            J(void 0, !1, !1, ja ? ia.reverse() : ia), a.isFunction(g.onBeforeWrite) && g.onBeforeWrite(void 0, y(), 0, g), 
            e.metadata ? {
                value: ja ? y().slice().reverse().join("") : y().join(""),
                metadata: h({
                    action: "getmetadata"
                }, f, g)
            } : ja ? y().slice().reverse().join("") : y().join("");

          case "isValid":
            g.numericInput && (ja = !0), e.value ? (ia = e.value.split(""), J(void 0, !1, !0, ja ? ia.reverse() : ia)) : e.value = y().join("");
            for (var pa = y(), qa = M(), ra = pa.length - 1; ra > qa && !D(ra); ra--) ;
            return pa.splice(qa, ra + 1 - qa), O(pa) && e.value === y().join("");

          case "getemptymask":
            return x().join("");

          case "remove":
            fa = e.el, ga = a(fa), f = fa.inputmask.maskset, g = fa.inputmask.opts, fa.inputmask._valueSet(K(fa)), 
            oa.off(fa);
            var sa;
            Object.getOwnPropertyDescriptor && Object.getPrototypeOf ? (sa = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(fa), "value"), 
            sa && fa.inputmask.__valueGet && Object.defineProperty(fa, "value", {
                get: fa.inputmask.__valueGet,
                set: fa.inputmask.__valueSet,
                configurable: !0
            })) : document.__lookupGetter__ && fa.__lookupGetter__("value") && fa.inputmask.__valueGet && (fa.__defineGetter__("value", fa.inputmask.__valueGet), 
            fa.__defineSetter__("value", fa.inputmask.__valueSet)), fa.inputmask = void 0;
            break;

          case "getmetadata":
            if (a.isArray(f.metadata)) {
                for (var ta, ua = o(void 0, !0), va = ua; va >= 0; va--) if (m().validPositions[va] && void 0 !== m().validPositions[va].alternation) {
                    ta = m().validPositions[va].alternation;
                    break;
                }
                return void 0 !== ta ? f.metadata[m().validPositions[va].locator[ta]] : [];
            }
            return f.metadata;
        }
    }
    b.prototype = {
        defaults: {
            placeholder: "_",
            optionalmarker: {
                start: "[",
                end: "]"
            },
            quantifiermarker: {
                start: "{",
                end: "}"
            },
            groupmarker: {
                start: "(",
                end: ")"
            },
            alternatormarker: "|",
            escapeChar: "\\",
            mask: null,
            oncomplete: a.noop,
            onincomplete: a.noop,
            oncleared: a.noop,
            repeat: 0,
            greedy: !0,
            autoUnmask: !1,
            removeMaskOnSubmit: !1,
            clearMaskOnLostFocus: !0,
            insertMode: !0,
            clearIncomplete: !1,
            aliases: {},
            alias: null,
            onKeyDown: a.noop,
            onBeforeMask: null,
            onBeforePaste: function(b, c) {
                return a.isFunction(c.onBeforeMask) ? c.onBeforeMask(b, c) : b;
            },
            onBeforeWrite: null,
            onUnMask: null,
            showMaskOnFocus: !0,
            showMaskOnHover: !0,
            onKeyValidation: a.noop,
            skipOptionalPartCharacter: " ",
            showTooltip: !1,
            tooltip: void 0,
            numericInput: !1,
            rightAlign: !1,
            undoOnEscape: !0,
            radixPoint: "",
            radixPointDefinitionSymbol: void 0,
            groupSeparator: "",
            keepStatic: null,
            positionCaretOnTab: !0,
            tabThrough: !1,
            supportsInputType: [ "text", "tel", "password" ],
            definitions: {
                "9": {
                    validator: "[0-9]",
                    cardinality: 1,
                    definitionSymbol: "*"
                },
                a: {
                    validator: "[A-Za-zА-яЁёÀ-ÿµ]",
                    cardinality: 1,
                    definitionSymbol: "*"
                },
                "*": {
                    validator: "[0-9A-Za-zА-яЁёÀ-ÿµ]",
                    cardinality: 1
                }
            },
            ignorables: [ 8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 ],
            isComplete: null,
            canClearPosition: a.noop,
            postValidation: null,
            staticDefinitionSymbol: void 0,
            jitMasking: !1,
            nullable: !0,
            inputEventOnly: !1,
            positionCaretOnClick: "lvp"
        },
        masksCache: {},
        mask: function(c) {
            var d = this;
            return "string" == typeof c && (c = document.getElementById(c) || document.querySelectorAll(c)), 
            c = c.nodeName ? [ c ] : c, a.each(c, function(c, e) {
                var i = a.extend(!0, {}, d.opts);
                f(e, i, a.extend(!0, {}, d.userOptions));
                var j = g(i, d.noMasksCache);
                void 0 !== j && (void 0 !== e.inputmask && e.inputmask.remove(), e.inputmask = new b(), 
                e.inputmask.opts = i, e.inputmask.noMasksCache = d.noMasksCache, e.inputmask.userOptions = a.extend(!0, {}, d.userOptions), 
                e.inputmask.el = e, e.inputmask.maskset = j, e.inputmask.isRTL = !1, a.data(e, "_inputmask_opts", i), 
                h({
                    action: "mask",
                    el: e
                }));
            }), c && c[0] ? c[0].inputmask || this : this;
        },
        option: function(b, c) {
            return "string" == typeof b ? this.opts[b] : "object" == typeof b ? (a.extend(this.userOptions, b), 
            this.el && c !== !0 && this.mask(this.el), this) : void 0;
        },
        unmaskedvalue: function(a) {
            return h({
                action: "unmaskedvalue",
                el: this.el,
                value: a
            }, this.el && this.el.inputmask ? this.el.inputmask.maskset : g(this.opts, this.noMasksCache), this.opts);
        },
        remove: function() {
            if (this.el) return h({
                action: "remove",
                el: this.el
            }), this.el.inputmask = void 0, this.el;
        },
        getemptymask: function() {
            return h({
                action: "getemptymask"
            }, this.maskset || g(this.opts, this.noMasksCache), this.opts);
        },
        hasMaskedValue: function() {
            return !this.opts.autoUnmask;
        },
        isComplete: function() {
            return h({
                action: "isComplete",
                el: this.el
            }, this.maskset || g(this.opts, this.noMasksCache), this.opts);
        },
        getmetadata: function() {
            return h({
                action: "getmetadata"
            }, this.maskset || g(this.opts, this.noMasksCache), this.opts);
        },
        isValid: function(a) {
            return h({
                action: "isValid",
                value: a
            }, this.maskset || g(this.opts, this.noMasksCache), this.opts);
        },
        format: function(a, b) {
            return h({
                action: "format",
                value: a,
                metadata: b
            }, this.maskset || g(this.opts, this.noMasksCache), this.opts);
        }
    }, b.extendDefaults = function(c) {
        a.extend(!0, b.prototype.defaults, c);
    }, b.extendDefinitions = function(c) {
        a.extend(!0, b.prototype.defaults.definitions, c);
    }, b.extendAliases = function(c) {
        a.extend(!0, b.prototype.defaults.aliases, c);
    }, b.format = function(a, c, d) {
        return b(c).format(a, d);
    }, b.unmask = function(a, c) {
        return b(c).unmaskedvalue(a);
    }, b.isValid = function(a, c) {
        return b(c).isValid(a);
    }, b.remove = function(b) {
        a.each(b, function(a, b) {
            b.inputmask && b.inputmask.remove();
        });
    }, b.escapeRegex = function(a) {
        var b = [ "/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^" ];
        return a.replace(new RegExp("(\\" + b.join("|\\") + ")", "gim"), "\\$1");
    }, b.keyCode = {
        ALT: 18,
        BACKSPACE: 8,
        BACKSPACE_SAFARI: 127,
        CAPS_LOCK: 20,
        COMMA: 188,
        COMMAND: 91,
        COMMAND_LEFT: 91,
        COMMAND_RIGHT: 93,
        CONTROL: 17,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        INSERT: 45,
        LEFT: 37,
        MENU: 93,
        NUMPAD_ADD: 107,
        NUMPAD_DECIMAL: 110,
        NUMPAD_DIVIDE: 111,
        NUMPAD_ENTER: 108,
        NUMPAD_MULTIPLY: 106,
        NUMPAD_SUBTRACT: 109,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SHIFT: 16,
        SPACE: 32,
        TAB: 9,
        UP: 38,
        WINDOWS: 91,
        X: 88
    };
    var i = navigator.userAgent, j = /mobile/i.test(i), k = /iemobile/i.test(i), l = /iphone/i.test(i) && !k;
    return window.Inputmask = b, b;
}(jQuery), function(a, b) {
    return void 0 === a.fn.inputmask && (a.fn.inputmask = function(c, d) {
        var e, f = this[0];
        if (void 0 === d && (d = {}), "string" == typeof c) switch (c) {
          case "unmaskedvalue":
            return f && f.inputmask ? f.inputmask.unmaskedvalue() : a(f).val();

          case "remove":
            return this.each(function() {
                this.inputmask && this.inputmask.remove();
            });

          case "getemptymask":
            return f && f.inputmask ? f.inputmask.getemptymask() : "";

          case "hasMaskedValue":
            return !(!f || !f.inputmask) && f.inputmask.hasMaskedValue();

          case "isComplete":
            return !f || !f.inputmask || f.inputmask.isComplete();

          case "getmetadata":
            return f && f.inputmask ? f.inputmask.getmetadata() : void 0;

          case "setvalue":
            a(f).val(d), f && void 0 === f.inputmask && a(f).triggerHandler("setvalue");
            break;

          case "option":
            if ("string" != typeof d) return this.each(function() {
                if (void 0 !== this.inputmask) return this.inputmask.option(d);
            });
            if (f && void 0 !== f.inputmask) return f.inputmask.option(d);
            break;

          default:
            return d.alias = c, e = new b(d), this.each(function() {
                e.mask(this);
            });
        } else {
            if ("object" == typeof c) return e = new b(c), void 0 === c.mask && void 0 === c.alias ? this.each(function() {
                return void 0 !== this.inputmask ? this.inputmask.option(c) : void e.mask(this);
            }) : this.each(function() {
                e.mask(this);
            });
            if (void 0 === c) return this.each(function() {
                e = new b(d), e.mask(this);
            });
        }
    }), a.fn.inputmask;
}(jQuery, Inputmask), function(a, b) {
    return b.extendDefinitions({
        h: {
            validator: "[01][0-9]|2[0-3]",
            cardinality: 2,
            prevalidator: [ {
                validator: "[0-2]",
                cardinality: 1
            } ]
        },
        s: {
            validator: "[0-5][0-9]",
            cardinality: 2,
            prevalidator: [ {
                validator: "[0-5]",
                cardinality: 1
            } ]
        },
        d: {
            validator: "0[1-9]|[12][0-9]|3[01]",
            cardinality: 2,
            prevalidator: [ {
                validator: "[0-3]",
                cardinality: 1
            } ]
        },
        m: {
            validator: "0[1-9]|1[012]",
            cardinality: 2,
            prevalidator: [ {
                validator: "[01]",
                cardinality: 1
            } ]
        },
        y: {
            validator: "(19|20)\\d{2}",
            cardinality: 4,
            prevalidator: [ {
                validator: "[12]",
                cardinality: 1
            }, {
                validator: "(19|20)",
                cardinality: 2
            }, {
                validator: "(19|20)\\d",
                cardinality: 3
            } ]
        }
    }), b.extendAliases({
        "dd/mm/yyyy": {
            mask: "1/2/y",
            placeholder: "dd/mm/yyyy",
            regex: {
                val1pre: new RegExp("[0-3]"),
                val1: new RegExp("0[1-9]|[12][0-9]|3[01]"),
                val2pre: function(a) {
                    var c = b.escapeRegex.call(this, a);
                    return new RegExp("((0[1-9]|[12][0-9]|3[01])" + c + "[01])");
                },
                val2: function(a) {
                    var c = b.escapeRegex.call(this, a);
                    return new RegExp("((0[1-9]|[12][0-9])" + c + "(0[1-9]|1[012]))|(30" + c + "(0[13-9]|1[012]))|(31" + c + "(0[13578]|1[02]))");
                }
            },
            leapday: "29/02/",
            separator: "/",
            yearrange: {
                minyear: 1900,
                maxyear: 2099
            },
            isInYearRange: function(a, b, c) {
                if (isNaN(a)) return !1;
                var d = parseInt(a.concat(b.toString().slice(a.length))), e = parseInt(a.concat(c.toString().slice(a.length)));
                return !isNaN(d) && b <= d && d <= c || !isNaN(e) && b <= e && e <= c;
            },
            determinebaseyear: function(a, b, c) {
                var d = new Date().getFullYear();
                if (a > d) return a;
                if (b < d) {
                    for (var e = b.toString().slice(0, 2), f = b.toString().slice(2, 4); b < e + c; ) e--;
                    var g = e + f;
                    return a > g ? a : g;
                }
                if (a <= d && d <= b) {
                    for (var h = d.toString().slice(0, 2); b < h + c; ) h--;
                    var i = h + c;
                    return i < a ? a : i;
                }
                return d;
            },
            onKeyDown: function(c, d, e, f) {
                var g = a(this);
                if (c.ctrlKey && c.keyCode === b.keyCode.RIGHT) {
                    var h = new Date();
                    g.val(h.getDate().toString() + (h.getMonth() + 1).toString() + h.getFullYear().toString()), 
                    g.trigger("setvalue");
                }
            },
            getFrontValue: function(a, b, c) {
                for (var d = 0, e = 0, f = 0; f < a.length && "2" !== a.charAt(f); f++) {
                    var g = c.definitions[a.charAt(f)];
                    g ? (d += e, e = g.cardinality) : e++;
                }
                return b.join("").substr(d, e);
            },
            definitions: {
                "1": {
                    validator: function(a, b, c, d, e) {
                        var f = e.regex.val1.test(a);
                        return d || f || a.charAt(1) !== e.separator && "-./".indexOf(a.charAt(1)) === -1 || !(f = e.regex.val1.test("0" + a.charAt(0))) ? f : (b.buffer[c - 1] = "0", 
                        {
                            refreshFromBuffer: {
                                start: c - 1,
                                end: c
                            },
                            pos: c,
                            c: a.charAt(0)
                        });
                    },
                    cardinality: 2,
                    prevalidator: [ {
                        validator: function(a, b, c, d, e) {
                            var f = a;
                            isNaN(b.buffer[c + 1]) || (f += b.buffer[c + 1]);
                            var g = 1 === f.length ? e.regex.val1pre.test(f) : e.regex.val1.test(f);
                            if (!d && !g) {
                                if (g = e.regex.val1.test(a + "0")) return b.buffer[c] = a, b.buffer[++c] = "0", 
                                {
                                    pos: c,
                                    c: "0"
                                };
                                if (g = e.regex.val1.test("0" + a)) return b.buffer[c] = "0", c++, {
                                    pos: c
                                };
                            }
                            return g;
                        },
                        cardinality: 1
                    } ]
                },
                "2": {
                    validator: function(a, b, c, d, e) {
                        var f = e.getFrontValue(b.mask, b.buffer, e);
                        f.indexOf(e.placeholder[0]) !== -1 && (f = "01" + e.separator);
                        var g = e.regex.val2(e.separator).test(f + a);
                        if (!d && !g && (a.charAt(1) === e.separator || "-./".indexOf(a.charAt(1)) !== -1) && (g = e.regex.val2(e.separator).test(f + "0" + a.charAt(0)))) return b.buffer[c - 1] = "0", 
                        {
                            refreshFromBuffer: {
                                start: c - 1,
                                end: c
                            },
                            pos: c,
                            c: a.charAt(0)
                        };
                        if (e.mask.indexOf("2") === e.mask.length - 1 && g) {
                            var h = b.buffer.join("").substr(4, 4) + a;
                            if (h !== e.leapday) return !0;
                            var i = parseInt(b.buffer.join("").substr(0, 4), 10);
                            return i % 4 === 0 && (i % 100 !== 0 || i % 400 === 0);
                        }
                        return g;
                    },
                    cardinality: 2,
                    prevalidator: [ {
                        validator: function(a, b, c, d, e) {
                            isNaN(b.buffer[c + 1]) || (a += b.buffer[c + 1]);
                            var f = e.getFrontValue(b.mask, b.buffer, e);
                            f.indexOf(e.placeholder[0]) !== -1 && (f = "01" + e.separator);
                            var g = 1 === a.length ? e.regex.val2pre(e.separator).test(f + a) : e.regex.val2(e.separator).test(f + a);
                            return d || g || !(g = e.regex.val2(e.separator).test(f + "0" + a)) ? g : (b.buffer[c] = "0", 
                            c++, {
                                pos: c
                            });
                        },
                        cardinality: 1
                    } ]
                },
                y: {
                    validator: function(a, b, c, d, e) {
                        if (e.isInYearRange(a, e.yearrange.minyear, e.yearrange.maxyear)) {
                            var f = b.buffer.join("").substr(0, 6);
                            if (f !== e.leapday) return !0;
                            var g = parseInt(a, 10);
                            return g % 4 === 0 && (g % 100 !== 0 || g % 400 === 0);
                        }
                        return !1;
                    },
                    cardinality: 4,
                    prevalidator: [ {
                        validator: function(a, b, c, d, e) {
                            var f = e.isInYearRange(a, e.yearrange.minyear, e.yearrange.maxyear);
                            if (!d && !f) {
                                var g = e.determinebaseyear(e.yearrange.minyear, e.yearrange.maxyear, a + "0").toString().slice(0, 1);
                                if (f = e.isInYearRange(g + a, e.yearrange.minyear, e.yearrange.maxyear)) return b.buffer[c++] = g.charAt(0), 
                                {
                                    pos: c
                                };
                                if (g = e.determinebaseyear(e.yearrange.minyear, e.yearrange.maxyear, a + "0").toString().slice(0, 2), 
                                f = e.isInYearRange(g + a, e.yearrange.minyear, e.yearrange.maxyear)) return b.buffer[c++] = g.charAt(0), 
                                b.buffer[c++] = g.charAt(1), {
                                    pos: c
                                };
                            }
                            return f;
                        },
                        cardinality: 1
                    }, {
                        validator: function(a, b, c, d, e) {
                            var f = e.isInYearRange(a, e.yearrange.minyear, e.yearrange.maxyear);
                            if (!d && !f) {
                                var g = e.determinebaseyear(e.yearrange.minyear, e.yearrange.maxyear, a).toString().slice(0, 2);
                                if (f = e.isInYearRange(a[0] + g[1] + a[1], e.yearrange.minyear, e.yearrange.maxyear)) return b.buffer[c++] = g.charAt(1), 
                                {
                                    pos: c
                                };
                                if (g = e.determinebaseyear(e.yearrange.minyear, e.yearrange.maxyear, a).toString().slice(0, 2), 
                                e.isInYearRange(g + a, e.yearrange.minyear, e.yearrange.maxyear)) {
                                    var h = b.buffer.join("").substr(0, 6);
                                    if (h !== e.leapday) f = !0; else {
                                        var i = parseInt(a, 10);
                                        f = i % 4 === 0 && (i % 100 !== 0 || i % 400 === 0);
                                    }
                                } else f = !1;
                                if (f) return b.buffer[c - 1] = g.charAt(0), b.buffer[c++] = g.charAt(1), b.buffer[c++] = a.charAt(0), 
                                {
                                    refreshFromBuffer: {
                                        start: c - 3,
                                        end: c
                                    },
                                    pos: c
                                };
                            }
                            return f;
                        },
                        cardinality: 2
                    }, {
                        validator: function(a, b, c, d, e) {
                            return e.isInYearRange(a, e.yearrange.minyear, e.yearrange.maxyear);
                        },
                        cardinality: 3
                    } ]
                }
            },
            insertMode: !1,
            autoUnmask: !1
        },
        "mm/dd/yyyy": {
            placeholder: "mm/dd/yyyy",
            alias: "dd/mm/yyyy",
            regex: {
                val2pre: function(a) {
                    var c = b.escapeRegex.call(this, a);
                    return new RegExp("((0[13-9]|1[012])" + c + "[0-3])|(02" + c + "[0-2])");
                },
                val2: function(a) {
                    var c = b.escapeRegex.call(this, a);
                    return new RegExp("((0[1-9]|1[012])" + c + "(0[1-9]|[12][0-9]))|((0[13-9]|1[012])" + c + "30)|((0[13578]|1[02])" + c + "31)");
                },
                val1pre: new RegExp("[01]"),
                val1: new RegExp("0[1-9]|1[012]")
            },
            leapday: "02/29/",
            onKeyDown: function(c, d, e, f) {
                var g = a(this);
                if (c.ctrlKey && c.keyCode === b.keyCode.RIGHT) {
                    var h = new Date();
                    g.val((h.getMonth() + 1).toString() + h.getDate().toString() + h.getFullYear().toString()), 
                    g.trigger("setvalue");
                }
            }
        },
        "yyyy/mm/dd": {
            mask: "y/1/2",
            placeholder: "yyyy/mm/dd",
            alias: "mm/dd/yyyy",
            leapday: "/02/29",
            onKeyDown: function(c, d, e, f) {
                var g = a(this);
                if (c.ctrlKey && c.keyCode === b.keyCode.RIGHT) {
                    var h = new Date();
                    g.val(h.getFullYear().toString() + (h.getMonth() + 1).toString() + h.getDate().toString()), 
                    g.trigger("setvalue");
                }
            }
        },
        "dd.mm.yyyy": {
            mask: "1.2.y",
            placeholder: "dd.mm.yyyy",
            leapday: "29.02.",
            separator: ".",
            alias: "dd/mm/yyyy"
        },
        "dd-mm-yyyy": {
            mask: "1-2-y",
            placeholder: "dd-mm-yyyy",
            leapday: "29-02-",
            separator: "-",
            alias: "dd/mm/yyyy"
        },
        "mm.dd.yyyy": {
            mask: "1.2.y",
            placeholder: "mm.dd.yyyy",
            leapday: "02.29.",
            separator: ".",
            alias: "mm/dd/yyyy"
        },
        "mm-dd-yyyy": {
            mask: "1-2-y",
            placeholder: "mm-dd-yyyy",
            leapday: "02-29-",
            separator: "-",
            alias: "mm/dd/yyyy"
        },
        "yyyy.mm.dd": {
            mask: "y.1.2",
            placeholder: "yyyy.mm.dd",
            leapday: ".02.29",
            separator: ".",
            alias: "yyyy/mm/dd"
        },
        "yyyy-mm-dd": {
            mask: "y-1-2",
            placeholder: "yyyy-mm-dd",
            leapday: "-02-29",
            separator: "-",
            alias: "yyyy/mm/dd"
        },
        datetime: {
            mask: "1/2/y h:s",
            placeholder: "dd/mm/yyyy hh:mm",
            alias: "dd/mm/yyyy",
            regex: {
                hrspre: new RegExp("[012]"),
                hrs24: new RegExp("2[0-4]|1[3-9]"),
                hrs: new RegExp("[01][0-9]|2[0-4]"),
                ampm: new RegExp("^[a|p|A|P][m|M]"),
                mspre: new RegExp("[0-5]"),
                ms: new RegExp("[0-5][0-9]")
            },
            timeseparator: ":",
            hourFormat: "24",
            definitions: {
                h: {
                    validator: function(a, b, c, d, e) {
                        if ("24" === e.hourFormat && 24 === parseInt(a, 10)) return b.buffer[c - 1] = "0", 
                        b.buffer[c] = "0", {
                            refreshFromBuffer: {
                                start: c - 1,
                                end: c
                            },
                            c: "0"
                        };
                        var f = e.regex.hrs.test(a);
                        if (!d && !f && (a.charAt(1) === e.timeseparator || "-.:".indexOf(a.charAt(1)) !== -1) && (f = e.regex.hrs.test("0" + a.charAt(0)))) return b.buffer[c - 1] = "0", 
                        b.buffer[c] = a.charAt(0), c++, {
                            refreshFromBuffer: {
                                start: c - 2,
                                end: c
                            },
                            pos: c,
                            c: e.timeseparator
                        };
                        if (f && "24" !== e.hourFormat && e.regex.hrs24.test(a)) {
                            var g = parseInt(a, 10);
                            return 24 === g ? (b.buffer[c + 5] = "a", b.buffer[c + 6] = "m") : (b.buffer[c + 5] = "p", 
                            b.buffer[c + 6] = "m"), g -= 12, g < 10 ? (b.buffer[c] = g.toString(), b.buffer[c - 1] = "0") : (b.buffer[c] = g.toString().charAt(1), 
                            b.buffer[c - 1] = g.toString().charAt(0)), {
                                refreshFromBuffer: {
                                    start: c - 1,
                                    end: c + 6
                                },
                                c: b.buffer[c]
                            };
                        }
                        return f;
                    },
                    cardinality: 2,
                    prevalidator: [ {
                        validator: function(a, b, c, d, e) {
                            var f = e.regex.hrspre.test(a);
                            return d || f || !(f = e.regex.hrs.test("0" + a)) ? f : (b.buffer[c] = "0", c++, 
                            {
                                pos: c
                            });
                        },
                        cardinality: 1
                    } ]
                },
                s: {
                    validator: "[0-5][0-9]",
                    cardinality: 2,
                    prevalidator: [ {
                        validator: function(a, b, c, d, e) {
                            var f = e.regex.mspre.test(a);
                            return d || f || !(f = e.regex.ms.test("0" + a)) ? f : (b.buffer[c] = "0", c++, 
                            {
                                pos: c
                            });
                        },
                        cardinality: 1
                    } ]
                },
                t: {
                    validator: function(a, b, c, d, e) {
                        return e.regex.ampm.test(a + "m");
                    },
                    casing: "lower",
                    cardinality: 1
                }
            },
            insertMode: !1,
            autoUnmask: !1
        },
        datetime12: {
            mask: "1/2/y h:s t\\m",
            placeholder: "dd/mm/yyyy hh:mm xm",
            alias: "datetime",
            hourFormat: "12"
        },
        "mm/dd/yyyy hh:mm xm": {
            mask: "1/2/y h:s t\\m",
            placeholder: "mm/dd/yyyy hh:mm xm",
            alias: "datetime12",
            regex: {
                val2pre: function(a) {
                    var c = b.escapeRegex.call(this, a);
                    return new RegExp("((0[13-9]|1[012])" + c + "[0-3])|(02" + c + "[0-2])");
                },
                val2: function(a) {
                    var c = b.escapeRegex.call(this, a);
                    return new RegExp("((0[1-9]|1[012])" + c + "(0[1-9]|[12][0-9]))|((0[13-9]|1[012])" + c + "30)|((0[13578]|1[02])" + c + "31)");
                },
                val1pre: new RegExp("[01]"),
                val1: new RegExp("0[1-9]|1[012]")
            },
            leapday: "02/29/",
            onKeyDown: function(c, d, e, f) {
                var g = a(this);
                if (c.ctrlKey && c.keyCode === b.keyCode.RIGHT) {
                    var h = new Date();
                    g.val((h.getMonth() + 1).toString() + h.getDate().toString() + h.getFullYear().toString()), 
                    g.trigger("setvalue");
                }
            }
        },
        "hh:mm t": {
            mask: "h:s t\\m",
            placeholder: "hh:mm xm",
            alias: "datetime",
            hourFormat: "12"
        },
        "h:s t": {
            mask: "h:s t\\m",
            placeholder: "hh:mm xm",
            alias: "datetime",
            hourFormat: "12"
        },
        "hh:mm:ss": {
            mask: "h:s:s",
            placeholder: "hh:mm:ss",
            alias: "datetime",
            autoUnmask: !1
        },
        "hh:mm": {
            mask: "h:s",
            placeholder: "hh:mm",
            alias: "datetime",
            autoUnmask: !1
        },
        date: {
            alias: "dd/mm/yyyy"
        },
        "mm/yyyy": {
            mask: "1/y",
            placeholder: "mm/yyyy",
            leapday: "donotuse",
            separator: "/",
            alias: "mm/dd/yyyy"
        },
        shamsi: {
            regex: {
                val2pre: function(a) {
                    var c = b.escapeRegex.call(this, a);
                    return new RegExp("((0[1-9]|1[012])" + c + "[0-3])");
                },
                val2: function(a) {
                    var c = b.escapeRegex.call(this, a);
                    return new RegExp("((0[1-9]|1[012])" + c + "(0[1-9]|[12][0-9]))|((0[1-9]|1[012])" + c + "30)|((0[1-6])" + c + "31)");
                },
                val1pre: new RegExp("[01]"),
                val1: new RegExp("0[1-9]|1[012]")
            },
            yearrange: {
                minyear: 1300,
                maxyear: 1499
            },
            mask: "y/1/2",
            leapday: "/12/30",
            placeholder: "yyyy/mm/dd",
            alias: "mm/dd/yyyy",
            clearIncomplete: !0
        }
    }), b;
}(jQuery, Inputmask), function(a, b) {
    return b.extendDefinitions({
        A: {
            validator: "[A-Za-zА-яЁёÀ-ÿµ]",
            cardinality: 1,
            casing: "upper"
        },
        "&": {
            validator: "[0-9A-Za-zА-яЁёÀ-ÿµ]",
            cardinality: 1,
            casing: "upper"
        },
        "#": {
            validator: "[0-9A-Fa-f]",
            cardinality: 1,
            casing: "upper"
        }
    }), b.extendAliases({
        url: {
            definitions: {
                i: {
                    validator: ".",
                    cardinality: 1
                }
            },
            mask: "(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)i{+}",
            insertMode: !1,
            autoUnmask: !1
        },
        ip: {
            mask: "i[i[i]].i[i[i]].i[i[i]].i[i[i]]",
            definitions: {
                i: {
                    validator: function(a, b, c, d, e) {
                        return c - 1 > -1 && "." !== b.buffer[c - 1] ? (a = b.buffer[c - 1] + a, a = c - 2 > -1 && "." !== b.buffer[c - 2] ? b.buffer[c - 2] + a : "0" + a) : a = "00" + a, 
                        new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(a);
                    },
                    cardinality: 1
                }
            },
            onUnMask: function(a, b, c) {
                return a;
            }
        },
        email: {
            mask: "*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",
            greedy: !1,
            onBeforePaste: function(a, b) {
                return a = a.toLowerCase(), a.replace("mailto:", "");
            },
            definitions: {
                "*": {
                    validator: "[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]",
                    cardinality: 1,
                    casing: "lower"
                },
                "-": {
                    validator: "[0-9A-Za-z-]",
                    cardinality: 1,
                    casing: "lower"
                }
            },
            onUnMask: function(a, b, c) {
                return a;
            }
        },
        mac: {
            mask: "##:##:##:##:##:##"
        },
        vin: {
            mask: "V{13}9{4}",
            definitions: {
                V: {
                    validator: "[A-HJ-NPR-Za-hj-npr-z\\d]",
                    cardinality: 1,
                    casing: "upper"
                }
            },
            clearIncomplete: !0,
            autoUnmask: !0
        }
    }), b;
}(jQuery, Inputmask), function(a, b) {
    return b.extendAliases({
        numeric: {
            mask: function(a) {
                function c(b) {
                    for (var c = "", d = 0; d < b.length; d++) c += a.definitions[b.charAt(d)] || a.optionalmarker.start === b.charAt(d) || a.optionalmarker.end === b.charAt(d) || a.quantifiermarker.start === b.charAt(d) || a.quantifiermarker.end === b.charAt(d) || a.groupmarker.start === b.charAt(d) || a.groupmarker.end === b.charAt(d) || a.alternatormarker === b.charAt(d) ? "\\" + b.charAt(d) : b.charAt(d);
                    return c;
                }
                if (0 !== a.repeat && isNaN(a.integerDigits) && (a.integerDigits = a.repeat), a.repeat = 0, 
                a.groupSeparator === a.radixPoint && ("." === a.radixPoint ? a.groupSeparator = "," : "," === a.radixPoint ? a.groupSeparator = "." : a.groupSeparator = ""), 
                " " === a.groupSeparator && (a.skipOptionalPartCharacter = void 0), a.autoGroup = a.autoGroup && "" !== a.groupSeparator, 
                a.autoGroup && ("string" == typeof a.groupSize && isFinite(a.groupSize) && (a.groupSize = parseInt(a.groupSize)), 
                isFinite(a.integerDigits))) {
                    var d = Math.floor(a.integerDigits / a.groupSize), e = a.integerDigits % a.groupSize;
                    a.integerDigits = parseInt(a.integerDigits) + (0 === e ? d - 1 : d), a.integerDigits < 1 && (a.integerDigits = "*");
                }
                a.placeholder.length > 1 && (a.placeholder = a.placeholder.charAt(0)), "radixFocus" === a.positionCaretOnClick && "" === a.placeholder && a.integerOptional === !1 && (a.positionCaretOnClick = "lvp"), 
                a.definitions[";"] = a.definitions["~"], a.definitions[";"].definitionSymbol = "~", 
                a.numericInput === !0 && (a.positionCaretOnClick = "radixFocus" === a.positionCaretOnClick ? "lvp" : a.positionCaretOnClick, 
                a.digitsOptional = !1, isNaN(a.digits) && (a.digits = 2), a.decimalProtect = !1);
                var f = c(a.prefix);
                return f += "[+]", f += a.integerOptional === !0 ? "~{1," + a.integerDigits + "}" : "~{" + a.integerDigits + "}", 
                void 0 !== a.digits && (isNaN(a.digits) || parseInt(a.digits) > 0) && (a.decimalProtect && (a.radixPointDefinitionSymbol = ":"), 
                f += a.digitsOptional ? "[" + (a.decimalProtect ? ":" : a.radixPoint) + ";{1," + a.digits + "}]" : (a.decimalProtect ? ":" : a.radixPoint) + ";{" + a.digits + "}"), 
                f += "[-]", f += c(a.suffix), a.greedy = !1, null !== a.min && (a.min = a.min.toString().replace(new RegExp(b.escapeRegex(a.groupSeparator), "g"), ""), 
                "," === a.radixPoint && (a.min = a.min.replace(a.radixPoint, "."))), null !== a.max && (a.max = a.max.toString().replace(new RegExp(b.escapeRegex(a.groupSeparator), "g"), ""), 
                "," === a.radixPoint && (a.max = a.max.replace(a.radixPoint, "."))), f;
            },
            placeholder: "",
            greedy: !1,
            digits: "*",
            digitsOptional: !0,
            radixPoint: ".",
            positionCaretOnClick: "radixFocus",
            groupSize: 3,
            groupSeparator: "",
            autoGroup: !1,
            allowPlus: !0,
            allowMinus: !0,
            negationSymbol: {
                front: "-",
                back: ""
            },
            integerDigits: "+",
            integerOptional: !0,
            prefix: "",
            suffix: "",
            rightAlign: !0,
            decimalProtect: !0,
            min: null,
            max: null,
            step: 1,
            insertMode: !0,
            autoUnmask: !1,
            unmaskAsNumber: !1,
            postFormat: function(c, d, e) {
                e.numericInput === !0 && (c = c.reverse(), isFinite(d) && (d = c.join("").length - d - 1));
                var f, g;
                d = d >= c.length ? c.length - 1 : d < e.prefix.length ? e.prefix.length : d;
                var h = c[d], i = c.slice();
                h === e.groupSeparator && (i.splice(d--, 1), h = i[d]), i[d] = "!";
                var j = i.join(""), k = j;
                if (j = j.replace(new RegExp(b.escapeRegex(e.suffix) + "$"), ""), j = j.replace(new RegExp("^" + b.escapeRegex(e.prefix)), ""), 
                j.length > 0 && e.autoGroup || j.indexOf(e.groupSeparator) !== -1) {
                    var l = b.escapeRegex(e.groupSeparator);
                    j = j.replace(new RegExp(l, "g"), "");
                    var m = j.split(h === e.radixPoint ? "!" : e.radixPoint);
                    if (j = "" === e.radixPoint ? j : m[0], h !== e.negationSymbol.front && (j = j.replace("!", "?")), 
                    j.length > e.groupSize) for (var n = new RegExp("([-+]?[\\d?]+)([\\d?]{" + e.groupSize + "})"); n.test(j) && "" !== e.groupSeparator; ) j = j.replace(n, "$1" + e.groupSeparator + "$2"), 
                    j = j.replace(e.groupSeparator + e.groupSeparator, e.groupSeparator);
                    j = j.replace("?", "!"), "" !== e.radixPoint && m.length > 1 && (j += (h === e.radixPoint ? "!" : e.radixPoint) + m[1]);
                }
                j = e.prefix + j + e.suffix;
                var o = k !== j;
                if (o) for (c.length = j.length, f = 0, g = j.length; f < g; f++) c[f] = j.charAt(f);
                var p = a.inArray("!", j);
                return c[p] = h, p = e.numericInput && isFinite(d) ? c.join("").length - p - 1 : p, 
                e.numericInput && (c = c.reverse(), a.inArray(e.radixPoint, c) < p && c.join("").length - e.suffix.length !== p && (p -= 1)), 
                {
                    pos: p,
                    refreshFromBuffer: o,
                    buffer: c
                };
            },
            onBeforeWrite: function(c, d, e, f) {
                var g;
                if (c && ("blur" === c.type || "checkval" === c.type || "keydown" === c.type)) {
                    var h = f.numericInput ? d.slice().reverse().join("") : d.join(""), i = h.replace(f.prefix, "");
                    i = i.replace(f.suffix, ""), i = i.replace(new RegExp(b.escapeRegex(f.groupSeparator), "g"), ""), 
                    "," === f.radixPoint && (i = i.replace(f.radixPoint, "."));
                    var j = i.match(new RegExp("[-" + b.escapeRegex(f.negationSymbol.front) + "]", "g"));
                    if (j = null !== j && 1 === j.length, i = i.replace(new RegExp("[-" + b.escapeRegex(f.negationSymbol.front) + "]", "g"), ""), 
                    i = i.replace(new RegExp(b.escapeRegex(f.negationSymbol.back) + "$"), ""), isNaN(f.placeholder) && (i = i.replace(new RegExp(b.escapeRegex(f.placeholder), "g"), "")), 
                    i = i === f.negationSymbol.front ? i + "0" : i, "" !== i && isFinite(i)) {
                        var k = parseFloat(i), l = j ? k * -1 : k;
                        if (null !== f.min && isFinite(f.min) && l < parseFloat(f.min) ? (k = Math.abs(f.min), 
                        j = f.min < 0, h = void 0) : null !== f.max && isFinite(f.max) && l > parseFloat(f.max) && (k = Math.abs(f.max), 
                        j = f.max < 0, h = void 0), i = k.toString().replace(".", f.radixPoint).split(""), 
                        isFinite(f.digits)) {
                            var m = a.inArray(f.radixPoint, i), n = a.inArray(f.radixPoint, h);
                            m === -1 && (i.push(f.radixPoint), m = i.length - 1);
                            for (var o = 1; o <= f.digits; o++) f.digitsOptional || void 0 !== i[m + o] && i[m + o] !== f.placeholder.charAt(0) ? n !== -1 && void 0 !== h[n + o] && (i[m + o] = i[m + o] || h[n + o]) : i[m + o] = "0";
                            i[i.length - 1] === f.radixPoint && delete i[i.length - 1];
                        }
                        if (k.toString() !== i && k.toString() + "." !== i || j) return !j || 0 === k && "blur" === c.type || (i.unshift(f.negationSymbol.front), 
                        i.push(f.negationSymbol.back)), i = (f.prefix + i.join("")).split(""), f.numericInput && (i = i.reverse()), 
                        g = f.postFormat(i, f.numericInput ? e : e - 1, f), g.buffer && (g.refreshFromBuffer = g.buffer.join("") !== d.join("")), 
                        g;
                    }
                }
                if (f.autoGroup) return g = f.postFormat(d, f.numericInput ? e : e - 1, f), g.caret = e <= f.prefix.length ? g.pos : g.pos + 1, 
                g;
            },
            regex: {
                integerPart: function(a) {
                    return new RegExp("[" + b.escapeRegex(a.negationSymbol.front) + "+]?\\d+");
                },
                integerNPart: function(a) {
                    return new RegExp("[\\d" + b.escapeRegex(a.groupSeparator) + b.escapeRegex(a.placeholder.charAt(0)) + "]+");
                }
            },
            signHandler: function(a, b, c, d, e) {
                if (!d && e.allowMinus && "-" === a || e.allowPlus && "+" === a) {
                    var f = b.buffer.join("").match(e.regex.integerPart(e));
                    if (f && f[0].length > 0) return b.buffer[f.index] === ("-" === a ? "+" : e.negationSymbol.front) ? "-" === a ? "" !== e.negationSymbol.back ? {
                        pos: f.index,
                        c: e.negationSymbol.front,
                        remove: f.index,
                        caret: c,
                        insert: {
                            pos: b.buffer.length - e.suffix.length - 1,
                            c: e.negationSymbol.back
                        }
                    } : {
                        pos: f.index,
                        c: e.negationSymbol.front,
                        remove: f.index,
                        caret: c
                    } : "" !== e.negationSymbol.back ? {
                        pos: f.index,
                        c: "+",
                        remove: [ f.index, b.buffer.length - e.suffix.length - 1 ],
                        caret: c
                    } : {
                        pos: f.index,
                        c: "+",
                        remove: f.index,
                        caret: c
                    } : b.buffer[f.index] === ("-" === a ? e.negationSymbol.front : "+") ? "-" === a && "" !== e.negationSymbol.back ? {
                        remove: [ f.index, b.buffer.length - e.suffix.length - 1 ],
                        caret: c - 1
                    } : {
                        remove: f.index,
                        caret: c - 1
                    } : "-" === a ? "" !== e.negationSymbol.back ? {
                        pos: f.index,
                        c: e.negationSymbol.front,
                        caret: c + 1,
                        insert: {
                            pos: b.buffer.length - e.suffix.length,
                            c: e.negationSymbol.back
                        }
                    } : {
                        pos: f.index,
                        c: e.negationSymbol.front,
                        caret: c + 1
                    } : {
                        pos: f.index,
                        c: a,
                        caret: c + 1
                    };
                }
                return !1;
            },
            radixHandler: function(b, c, d, e, f) {
                if (!e && f.numericInput !== !0 && b === f.radixPoint && void 0 !== f.digits && (isNaN(f.digits) || parseInt(f.digits) > 0)) {
                    var g = a.inArray(f.radixPoint, c.buffer), h = c.buffer.join("").match(f.regex.integerPart(f));
                    if (g !== -1 && c.validPositions[g]) return c.validPositions[g - 1] ? {
                        caret: g + 1
                    } : {
                        pos: h.index,
                        c: h[0],
                        caret: g + 1
                    };
                    if (!h || "0" === h[0] && h.index + 1 !== d) return c.buffer[h ? h.index : d] = "0", 
                    {
                        pos: (h ? h.index : d) + 1,
                        c: f.radixPoint
                    };
                }
                return !1;
            },
            leadingZeroHandler: function(b, c, d, e, f, g) {
                if (!e) {
                    var h = c.buffer.slice("");
                    if (h.splice(0, f.prefix.length), h.splice(h.length - f.suffix.length, f.suffix.length), 
                    f.numericInput === !0) {
                        var h = h.reverse(), i = h[0];
                        if ("0" === i && void 0 === c.validPositions[d - 1]) return {
                            pos: d,
                            remove: h.length - 1
                        };
                    } else {
                        d -= f.prefix.length;
                        var j = a.inArray(f.radixPoint, h), k = h.slice(0, j !== -1 ? j : void 0).join("").match(f.regex.integerNPart(f));
                        if (k && (j === -1 || d <= j)) {
                            var l = j === -1 ? 0 : parseInt(h.slice(j + 1).join(""));
                            if (0 === k[0].indexOf("" !== f.placeholder ? f.placeholder.charAt(0) : "0") && (k.index + 1 === d || g !== !0 && 0 === l)) return c.buffer.splice(k.index + f.prefix.length, 1), 
                            {
                                pos: k.index + f.prefix.length,
                                remove: k.index + f.prefix.length
                            };
                            if ("0" === b && d <= k.index && k[0] !== f.groupSeparator) return !1;
                        }
                    }
                }
                return !0;
            },
            definitions: {
                "~": {
                    validator: function(c, d, e, f, g, h) {
                        var i = g.signHandler(c, d, e, f, g);
                        if (!i && (i = g.radixHandler(c, d, e, f, g), !i && (i = f ? new RegExp("[0-9" + b.escapeRegex(g.groupSeparator) + "]").test(c) : new RegExp("[0-9]").test(c), 
                        i === !0 && (i = g.leadingZeroHandler(c, d, e, f, g, h), i === !0)))) {
                            var j = a.inArray(g.radixPoint, d.buffer);
                            i = j !== -1 && (g.digitsOptional === !1 || d.validPositions[e]) && g.numericInput !== !0 && e > j && !f ? {
                                pos: e,
                                remove: e
                            } : {
                                pos: e
                            };
                        }
                        return i;
                    },
                    cardinality: 1
                },
                "+": {
                    validator: function(a, b, c, d, e) {
                        var f = e.signHandler(a, b, c, d, e);
                        return !f && (d && e.allowMinus && a === e.negationSymbol.front || e.allowMinus && "-" === a || e.allowPlus && "+" === a) && (f = !(!d && "-" === a) || ("" !== e.negationSymbol.back ? {
                            pos: c,
                            c: "-" === a ? e.negationSymbol.front : "+",
                            caret: c + 1,
                            insert: {
                                pos: b.buffer.length,
                                c: e.negationSymbol.back
                            }
                        } : {
                            pos: c,
                            c: "-" === a ? e.negationSymbol.front : "+",
                            caret: c + 1
                        })), f;
                    },
                    cardinality: 1,
                    placeholder: ""
                },
                "-": {
                    validator: function(a, b, c, d, e) {
                        var f = e.signHandler(a, b, c, d, e);
                        return !f && d && e.allowMinus && a === e.negationSymbol.back && (f = !0), f;
                    },
                    cardinality: 1,
                    placeholder: ""
                },
                ":": {
                    validator: function(a, c, d, e, f) {
                        var g = f.signHandler(a, c, d, e, f);
                        if (!g) {
                            var h = "[" + b.escapeRegex(f.radixPoint) + "]";
                            g = new RegExp(h).test(a), g && c.validPositions[d] && c.validPositions[d].match.placeholder === f.radixPoint && (g = {
                                caret: d + 1
                            });
                        }
                        return g ? {
                            c: f.radixPoint
                        } : g;
                    },
                    cardinality: 1,
                    placeholder: function(a) {
                        return a.radixPoint;
                    }
                }
            },
            onUnMask: function(a, c, d) {
                if ("" === c && d.nullable === !0) return c;
                var e = a.replace(d.prefix, "");
                return e = e.replace(d.suffix, ""), e = e.replace(new RegExp(b.escapeRegex(d.groupSeparator), "g"), ""), 
                d.unmaskAsNumber ? ("" !== d.radixPoint && e.indexOf(d.radixPoint) !== -1 && (e = e.replace(b.escapeRegex.call(this, d.radixPoint), ".")), 
                Number(e)) : e;
            },
            isComplete: function(a, c) {
                var d = a.join(""), e = a.slice();
                if (c.postFormat(e, 0, c), e.join("") !== d) return !1;
                var f = d.replace(c.prefix, "");
                return f = f.replace(c.suffix, ""), f = f.replace(new RegExp(b.escapeRegex(c.groupSeparator), "g"), ""), 
                "," === c.radixPoint && (f = f.replace(b.escapeRegex(c.radixPoint), ".")), isFinite(f);
            },
            onBeforeMask: function(a, c) {
                if ("" !== c.radixPoint && isFinite(a)) a = a.toString().replace(".", c.radixPoint); else {
                    var d = a.match(/,/g), e = a.match(/\./g);
                    e && d ? e.length > d.length ? (a = a.replace(/\./g, ""), a = a.replace(",", c.radixPoint)) : d.length > e.length ? (a = a.replace(/,/g, ""), 
                    a = a.replace(".", c.radixPoint)) : a = a.indexOf(".") < a.indexOf(",") ? a.replace(/\./g, "") : a = a.replace(/,/g, "") : a = a.replace(new RegExp(b.escapeRegex(c.groupSeparator), "g"), "");
                }
                if (0 === c.digits && (a.indexOf(".") !== -1 ? a = a.substring(0, a.indexOf(".")) : a.indexOf(",") !== -1 && (a = a.substring(0, a.indexOf(",")))), 
                "" !== c.radixPoint && isFinite(c.digits) && a.indexOf(c.radixPoint) !== -1) {
                    var f = a.split(c.radixPoint), g = f[1].match(new RegExp("\\d*"))[0];
                    if (parseInt(c.digits) < g.toString().length) {
                        var h = Math.pow(10, parseInt(c.digits));
                        a = a.replace(b.escapeRegex(c.radixPoint), "."), a = Math.round(parseFloat(a) * h) / h, 
                        a = a.toString().replace(".", c.radixPoint);
                    }
                }
                return a.toString();
            },
            canClearPosition: function(a, b, c, d, e) {
                var f = a.validPositions[b].input, g = f !== e.radixPoint || null !== a.validPositions[b].match.fn && e.decimalProtect === !1 || isFinite(f) || b === c || f === e.groupSeparator || f === e.negationSymbol.front || f === e.negationSymbol.back;
                return g;
            },
            onKeyDown: function(c, d, e, f) {
                var g = a(this);
                if (c.ctrlKey) switch (c.keyCode) {
                  case b.keyCode.UP:
                    g.val(parseFloat(this.inputmask.unmaskedvalue()) + parseInt(f.step)), g.trigger("setvalue");
                    break;

                  case b.keyCode.DOWN:
                    g.val(parseFloat(this.inputmask.unmaskedvalue()) - parseInt(f.step)), g.trigger("setvalue");
                }
            }
        },
        currency: {
            prefix: "$ ",
            groupSeparator: ",",
            alias: "numeric",
            placeholder: "0",
            autoGroup: !0,
            digits: 2,
            digitsOptional: !1,
            clearMaskOnLostFocus: !1
        },
        decimal: {
            alias: "numeric"
        },
        integer: {
            alias: "numeric",
            digits: 0,
            radixPoint: ""
        },
        percentage: {
            alias: "numeric",
            digits: 2,
            radixPoint: ".",
            placeholder: "0",
            autoGroup: !1,
            min: 0,
            max: 100,
            suffix: " %",
            allowPlus: !1,
            allowMinus: !1
        }
    }), b;
}(jQuery, Inputmask), function(a, b) {
    return b.extendAliases({
        abstractphone: {
            countrycode: "",
            phoneCodes: [],
            mask: function(a) {
                a.definitions = {
                    "#": a.definitions[9]
                };
                var b = a.phoneCodes.sort(function(a, b) {
                    var c = (a.mask || a).replace(/#/g, "9").replace(/[\+\(\)#-]/g, ""), d = (b.mask || b).replace(/#/g, "9").replace(/[\+\(\)#-]/g, "");
                    return c < d ? -1 : 1;
                });
                return b;
            },
            keepStatic: !0,
            onBeforeMask: function(a, b) {
                var c = a.replace(/^0{1,2}/, "").replace(/[\s]/g, "");
                return (c.indexOf(b.countrycode) > 1 || c.indexOf(b.countrycode) === -1) && (c = "+" + b.countrycode + c), 
                c;
            },
            onUnMask: function(a, b, c) {
                return b;
            }
        }
    }), b;
}(jQuery, Inputmask), function(a, b) {
    return b.extendAliases({
        Regex: {
            mask: "r",
            greedy: !1,
            repeat: "*",
            regex: null,
            regexTokens: null,
            tokenizer: /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,
            quantifierFilter: /[0-9]+[^,]/,
            isComplete: function(a, b) {
                return new RegExp(b.regex).test(a.join(""));
            },
            definitions: {
                r: {
                    validator: function(b, c, d, e, f) {
                        function g(a, b) {
                            this.matches = [], this.isGroup = a || !1, this.isQuantifier = b || !1, this.quantifier = {
                                min: 1,
                                max: 1
                            }, this.repeaterPart = void 0;
                        }
                        function h() {
                            var a, b, c = new g(), d = [];
                            for (f.regexTokens = []; a = f.tokenizer.exec(f.regex); ) switch (b = a[0], b.charAt(0)) {
                              case "(":
                                d.push(new g((!0)));
                                break;

                              case ")":
                                k = d.pop(), d.length > 0 ? d[d.length - 1].matches.push(k) : c.matches.push(k);
                                break;

                              case "{":
                              case "+":
                              case "*":
                                var e = new g((!1), (!0));
                                b = b.replace(/[{}]/g, "");
                                var h = b.split(","), i = isNaN(h[0]) ? h[0] : parseInt(h[0]), j = 1 === h.length ? i : isNaN(h[1]) ? h[1] : parseInt(h[1]);
                                if (e.quantifier = {
                                    min: i,
                                    max: j
                                }, d.length > 0) {
                                    var l = d[d.length - 1].matches;
                                    a = l.pop(), a.isGroup || (k = new g((!0)), k.matches.push(a), a = k), l.push(a), 
                                    l.push(e);
                                } else a = c.matches.pop(), a.isGroup || (k = new g((!0)), k.matches.push(a), a = k), 
                                c.matches.push(a), c.matches.push(e);
                                break;

                              default:
                                d.length > 0 ? d[d.length - 1].matches.push(b) : c.matches.push(b);
                            }
                            c.matches.length > 0 && f.regexTokens.push(c);
                        }
                        function i(b, c) {
                            var d = !1;
                            c && (m += "(", o++);
                            for (var e = 0; e < b.matches.length; e++) {
                                var f = b.matches[e];
                                if (f.isGroup === !0) d = i(f, !0); else if (f.isQuantifier === !0) {
                                    var g = a.inArray(f, b.matches), h = b.matches[g - 1], k = m;
                                    if (isNaN(f.quantifier.max)) {
                                        for (;f.repeaterPart && f.repeaterPart !== m && f.repeaterPart.length > m.length && !(d = i(h, !0)); ) ;
                                        d = d || i(h, !0), d && (f.repeaterPart = m), m = k + f.quantifier.max;
                                    } else {
                                        for (var l = 0, n = f.quantifier.max - 1; l < n && !(d = i(h, !0)); l++) ;
                                        m = k + "{" + f.quantifier.min + "," + f.quantifier.max + "}";
                                    }
                                } else if (void 0 !== f.matches) for (var p = 0; p < f.length && !(d = i(f[p], c)); p++) ; else {
                                    var q;
                                    if ("[" == f.charAt(0)) {
                                        q = m, q += f;
                                        for (var r = 0; r < o; r++) q += ")";
                                        var s = new RegExp("^(" + q + ")$");
                                        d = s.test(j);
                                    } else for (var t = 0, u = f.length; t < u; t++) if ("\\" !== f.charAt(t)) {
                                        q = m, q += f.substr(0, t + 1), q = q.replace(/\|$/, "");
                                        for (var r = 0; r < o; r++) q += ")";
                                        var s = new RegExp("^(" + q + ")$");
                                        if (d = s.test(j)) break;
                                    }
                                    m += f;
                                }
                                if (d) break;
                            }
                            return c && (m += ")", o--), d;
                        }
                        var j, k, l = c.buffer.slice(), m = "", n = !1, o = 0;
                        null === f.regexTokens && h(), l.splice(d, 0, b), j = l.join("");
                        for (var p = 0; p < f.regexTokens.length; p++) {
                            var q = f.regexTokens[p];
                            if (n = i(q, q.isGroup)) break;
                        }
                        return n;
                    },
                    cardinality: 1
                }
            }
        }
    }), b;
}(jQuery, Inputmask), function(a) {
    function b() {}
    function c(a) {
        g = [ a ];
    }
    function d(a, b, c) {
        return a && a.apply(b.context || b, c);
    }
    function e(a) {
        return /\?/.test(a) ? "&" : "?";
    }
    function f(f) {
        function n(a) {
            X++ || (Y(), S && (A[U] = {
                s: [ a ]
            }), O && (a = O.apply(f, [ a ])), d(L, f, [ a, v, f ]), d(N, f, [ f, v ]));
        }
        function F(a) {
            X++ || (Y(), S && a != w && (A[U] = a), d(M, f, [ f, a ]), d(N, f, [ f, a ]));
        }
        f = a.extend({}, C, f);
        var G, H, I, J, K, L = f.success, M = f.error, N = f.complete, O = f.dataFilter, P = f.callbackParameter, Q = f.callback, R = f.cache, S = f.pageCache, T = f.charset, U = f.url, V = f.data, W = f.timeout, X = 0, Y = b;
        return y && y(function(a) {
            a.done(L).fail(M), L = a.resolve, M = a.reject;
        }).promise(f), f.abort = function() {
            !X++ && Y();
        }, d(f.beforeSend, f, [ f ]) === !1 || X ? f : (U = U || j, V = V ? "string" == typeof V ? V : a.param(V, f.traditional) : j, 
        U += V ? e(U) + V : j, P && (U += e(U) + encodeURIComponent(P) + "=?"), !R && !S && (U += e(U) + "_" + new Date().getTime() + "="), 
        U = U.replace(/=\?(&|$)/, "=" + Q + "$1"), S && (G = A[U]) ? G.s ? n(G.s[0]) : F(G) : (x[Q] = c, 
        I = a(u)[0], I.id = m + B++, T && (I[i] = T), D && D.version() < 11.6 ? (J = a(u)[0]).text = "document.getElementById('" + I.id + "')." + p + "()" : I[h] = h, 
        E && (I.htmlFor = I.id, I.event = o), I[q] = I[p] = I[r] = function(a) {
            if (!I[s] || !/i/.test(I[s])) {
                try {
                    I[o] && I[o]();
                } catch (b) {}
                a = g, g = 0, a ? n(a[0]) : F(k);
            }
        }, I.src = U, Y = function(a) {
            K && clearTimeout(K), I[r] = I[q] = I[p] = null, z[t](I), J && z[t](J);
        }, z[l](I, H = z.firstChild), J && z[l](J, H), K = W > 0 && setTimeout(function() {
            F(w);
        }, W)), f);
    }
    var g, h = "async", i = "charset", j = "", k = "error", l = "insertBefore", m = "_jqjsp", n = "on", o = n + "click", p = n + k, q = n + "load", r = n + "readystatechange", s = "readyState", t = "removeChild", u = "<script>", v = "success", w = "timeout", x = window, y = a.Deferred, z = a("head")[0] || document.documentElement, A = {}, B = 0, C = {
        callback: m,
        url: location.href
    }, D = x.opera, E = !!a("<div>").html("<!--[if IE]><i><![endif]-->").find("i").length;
    f.setup = function(b) {
        a.extend(C, b);
    }, a.jsonp = f;
}(jQuery), function(a) {
    a.fn.maxlength = function(b) {
        function c(a) {
            var c = a.value;
            return c == a.placeholder ? 0 : (b.words && (c = a.value.length ? c.split(/\s+/) : {
                length: 0
            }), c.length);
        }
        function d(a) {
            var b = null;
            return b = window.getSelection ? a.value.substr(a.selectionStart, a.selectionEnd - a.selectionStart) : document.selection.createRange().text, 
            b ? b.length : 0;
        }
        return "string" == typeof b && (b = {
            feedback: b
        }), b = a.extend({}, a.fn.maxlength.defaults, b), this.each(function() {
            function e(a) {
                var e = c(this), f = d(this), g = e - f >= i, h = a.keyCode;
                if (g) switch (h) {
                  case 8:
                  case 9:
                  case 17:
                  case 36:
                  case 35:
                  case 37:
                  case 38:
                  case 39:
                  case 40:
                  case 46:
                    return;

                  default:
                    return b.words && 32 != h && 13 != h && e == i;
                }
            }
            var f = this, g = a(f), h = a(f.form), i = b.useInput ? h.find("input[name=maxlength]").val() : g.attr("maxlength"), j = h.find(b.feedback), k = function() {
                var a = c(f), d = i - a;
                b.hardLimit && d < 0 && (f.value = b.words ? f.value.split(/(\s+)/, 2 * i - 1).join("") : f.value.substr(0, i)), 
                (!d || d < 0) && (d = 0), j.html(d), b.feedbackFun && b.feedbackFun(d);
            };
            g.keyup(k).change(k), b.hardLimit && g.keydown(e), k();
        });
    }, a.fn.maxlength.defaults = {
        useInput: !1,
        hardLimit: !0,
        feedback: ".charsLeft",
        feedbackFun: null,
        words: !1
    };
}(jQuery), function($) {
    $.extend({
        metadata: {
            defaults: {
                type: "attr",
                name: "validate",
                cre: /({.*})/,
                single: "metadata"
            },
            setType: function(a, b) {
                this.defaults.type = a, this.defaults.name = b;
            },
            get: function(elem, opts) {
                var settings = $.extend({}, this.defaults, opts);
                settings.single.length || (settings.single = "metadata");
                var data = $.data(elem, settings.single);
                if (data) return data;
                if (data = "{}", "class" == settings.type) {
                    var m = settings.cre.exec(elem.className);
                    m && (data = m[1]);
                } else if ("elem" == settings.type) {
                    if (!elem.getElementsByTagName) return;
                    var e = elem.getElementsByTagName(settings.name);
                    e.length && (data = $.trim(e[0].innerHTML));
                } else if (void 0 != elem.getAttribute) {
                    var attr = elem.getAttribute(settings.name);
                    attr && (data = attr);
                }
                return data.indexOf("{") < 0 && (data = "{" + data + "}"), data = eval("(" + data + ")"), 
                $.data(elem, settings.single, data), data;
            }
        }
    }), $.fn.metadata = function(a) {
        return $.metadata.get(this[0], a);
    };
}(jQuery), function(a, b, c, d) {
    function e(b, c) {
        this.element = a(b), this.settings = a.extend({}, g, c), this._defaults = g, this._name = f, 
        this.init();
    }
    var f = "metisMenu", g = {
        toggle: !0,
        doubleTapToGo: !1
    };
    e.prototype = {
        init: function() {
            var b = this.element, d = this.settings.toggle, e = this;
            this.isIE() <= 9 ? (b.find("li.active").has("ul").children("ul").collapse("show"), 
            b.find("li").not(".active").has("ul").children("ul").collapse("hide")) : (b.find("li.active").has("ul").children("ul").addClass("collapse in"), 
            b.find("li").not(".active").has("ul").children("ul").addClass("collapse")), e.settings.doubleTapToGo && b.find("li.active").has("ul").children("a").addClass("doubleTapToGo"), 
            b.find("li").has("ul").children("a").on("click." + f, function(b) {
                return b.preventDefault(), e.settings.doubleTapToGo && e.doubleTapToGo(a(this)) && "#" !== a(this).attr("href") && "" !== a(this).attr("href") ? (b.stopPropagation(), 
                void (c.location = a(this).attr("href"))) : (a(this).parent("li").toggleClass("active").children("ul").collapse("toggle"), 
                void (d && a(this).parent("li").siblings().removeClass("active").children("ul.in").collapse("hide")));
            });
        },
        isIE: function() {
            for (var a, b = 3, d = c.createElement("div"), e = d.getElementsByTagName("i"); d.innerHTML = "<!--[if gt IE " + ++b + "]><i></i><![endif]-->", 
            e[0]; ) return b > 4 ? b : a;
        },
        doubleTapToGo: function(a) {
            var b = this.element;
            return a.hasClass("doubleTapToGo") ? (a.removeClass("doubleTapToGo"), !0) : a.parent().children("ul").length ? (b.find(".doubleTapToGo").removeClass("doubleTapToGo"), 
            a.addClass("doubleTapToGo"), !1) : void 0;
        },
        remove: function() {
            this.element.off("." + f), this.element.removeData(f);
        }
    }, a.fn[f] = function(b) {
        return this.each(function() {
            var c = a(this);
            c.data(f) && c.data(f).remove(), c.data(f, new e(this, b));
        }), this;
    };
}(jQuery, window, document), function(a, b, c) {
    function d(a) {
        var b = {}, d = /^jQuery\d+$/;
        return c.each(a.attributes, function(a, c) {
            c.specified && !d.test(c.name) && (b[c.name] = c.value);
        }), b;
    }
    function e(a, b) {
        j && k && c(this).removeClass("gray");
        var d = this, e = c(d);
        if (d.value == e.attr("placeholder") && e.hasClass("placeholder")) if (e.data("placeholder-password")) {
            if (e = e.hide().next().show().attr("id", e.removeAttr("id").data("placeholder-id")), 
            a === !0) return e[0].value = b;
            e.focus();
        } else d.value = "", e.removeClass("placeholder"), d == g() && d.select();
    }
    function f() {
        j && k && "" == c(this).val() && c(this).addClass("gray");
        var a, b = this, f = c(b), g = this.id;
        if ("" == b.value) {
            if ("password" == b.type) {
                if (!f.data("placeholder-textinput")) {
                    try {
                        a = f.clone().attr({
                            type: "text"
                        });
                    } catch (h) {
                        a = c("<input>").attr(c.extend(d(this), {
                            type: "text"
                        }));
                    }
                    a.removeAttr("name").data({
                        "placeholder-password": f,
                        "placeholder-id": g
                    }).bind("focus.placeholder", e), f.data({
                        "placeholder-textinput": a,
                        "placeholder-id": g
                    }).before(a);
                }
                f = f.removeAttr("id").hide().prev().attr("id", g).show();
            }
            f.addClass("placeholder"), f[0].value = f.attr("placeholder");
        } else f.removeClass("placeholder");
    }
    function g() {
        try {
            return b.activeElement;
        } catch (a) {}
    }
    var h, i, j = !!a.ActiveXObject, k = (j && !a.XMLHttpRequest, j && !!b.documentMode), l = "[object OperaMini]" == Object.prototype.toString.call(a.operamini), m = "placeholder" in b.createElement("input") && !l, n = "placeholder" in b.createElement("textarea") && !l, o = c.fn, p = c.valHooks, q = c.propHooks;
    m && n ? (i = o.placeholder = function() {
        return this;
    }, i.input = i.textarea = !0) : (i = o.placeholder = function() {
        var a = this;
        return a.filter((m ? "textarea" : ":input") + "[placeholder]").not(".placeholder").bind({
            "focus.placeholder": e,
            "blur.placeholder": f
        }).data("placeholder-enabled", !0).trigger("blur.placeholder"), a;
    }, i.input = m, i.textarea = n, h = {
        get: function(a) {
            var b = c(a), d = b.data("placeholder-password");
            return d ? d[0].value : b.data("placeholder-enabled") && b.hasClass("placeholder") ? "" : a.value;
        },
        set: function(a, b) {
            var d = c(a), h = d.data("placeholder-password");
            return h ? h[0].value = b : d.data("placeholder-enabled") ? ("" == b ? (a.value = b, 
            a != g() && f.call(a)) : d.hasClass("placeholder") ? e.call(a, !0, b) || (a.value = b) : a.value = b, 
            d) : a.value = b;
        }
    }, m || (p.input = h, q.value = h), n || (p.textarea = h, q.value = h), c(function() {
        c(b).delegate("form", "submit.placeholder", function() {
            var a = c(".placeholder", this).each(e);
            setTimeout(function() {
                a.each(f);
            }, 10);
        });
    }), c(a).bind("beforeunload.placeholder", function() {
        c(".placeholder").each(function() {
            this.value = "";
        });
    }));
}(this, document, jQuery), function(a) {
    "undefined" == typeof a.fn.each2 && a.extend(a.fn, {
        each2: function(b) {
            for (var c = a([ 0 ]), d = -1, e = this.length; ++d < e && (c.context = c[0] = this[d]) && b.call(c[0], d, c) !== !1; ) ;
            return this;
        }
    });
}(jQuery), function(a, b) {
    "use strict";
    function c(b) {
        var c = a(document.createTextNode(""));
        b.before(c), c.before(b), c.remove();
    }
    function d(a) {
        function b(a) {
            return O[a] || a;
        }
        return a.replace(/[^\u0000-\u007E]/g, b);
    }
    function e(a, b) {
        for (var c = 0, d = b.length; c < d; c += 1) if (g(a, b[c])) return c;
        return -1;
    }
    function f() {
        var b = a(N);
        b.appendTo(document.body);
        var c = {
            width: b.width() - b[0].clientWidth,
            height: b.height() - b[0].clientHeight
        };
        return b.remove(), c;
    }
    function g(a, c) {
        return a === c || a !== b && c !== b && (null !== a && null !== c && (a.constructor === String ? a + "" == c + "" : c.constructor === String && c + "" == a + ""));
    }
    function h(a, b, c) {
        var d, e, f;
        if (null === a || a.length < 1) return [];
        for (d = a.split(b), e = 0, f = d.length; e < f; e += 1) d[e] = c(d[e]);
        return d;
    }
    function i(a) {
        return a.outerWidth(!1) - a.width();
    }
    function j(c) {
        var d = "keyup-change-value";
        c.on("keydown", function() {
            a.data(c, d) === b && a.data(c, d, c.val());
        }), c.on("keyup", function() {
            var e = a.data(c, d);
            e !== b && c.val() !== e && (a.removeData(c, d), c.trigger("keyup-change"));
        });
    }
    function k(c) {
        c.on("mousemove", function(c) {
            var d = L;
            d !== b && d.x === c.pageX && d.y === c.pageY || a(c.target).trigger("mousemove-filtered", c);
        });
    }
    function l(a, c, d) {
        d = d || b;
        var e;
        return function() {
            var b = arguments;
            window.clearTimeout(e), e = window.setTimeout(function() {
                c.apply(d, b);
            }, a);
        };
    }
    function m(a, b) {
        var c = l(a, function(a) {
            b.trigger("scroll-debounced", a);
        });
        b.on("scroll", function(a) {
            e(a.target, b.get()) >= 0 && c(a);
        });
    }
    function n(a) {
        a[0] !== document.activeElement && window.setTimeout(function() {
            var b, c = a[0], d = a.val().length;
            a.focus();
            var e = c.offsetWidth > 0 || c.offsetHeight > 0;
            e && c === document.activeElement && (c.setSelectionRange ? c.setSelectionRange(d, d) : c.createTextRange && (b = c.createTextRange(), 
            b.collapse(!1), b.select()));
        }, 0);
    }
    function o(b) {
        b = a(b)[0];
        var c = 0, d = 0;
        if ("selectionStart" in b) c = b.selectionStart, d = b.selectionEnd - c; else if ("selection" in document) {
            b.focus();
            var e = document.selection.createRange();
            d = document.selection.createRange().text.length, e.moveStart("character", -b.value.length), 
            c = e.text.length - d;
        }
        return {
            offset: c,
            length: d
        };
    }
    function p(a) {
        a.preventDefault(), a.stopPropagation();
    }
    function q(a) {
        a.preventDefault(), a.stopImmediatePropagation();
    }
    function r(b) {
        if (!I) {
            var c = b[0].currentStyle || window.getComputedStyle(b[0], null);
            I = a(document.createElement("div")).css({
                position: "absolute",
                left: "-10000px",
                top: "-10000px",
                display: "none",
                fontSize: c.fontSize,
                fontFamily: c.fontFamily,
                fontStyle: c.fontStyle,
                fontWeight: c.fontWeight,
                letterSpacing: c.letterSpacing,
                textTransform: c.textTransform,
                whiteSpace: "nowrap"
            }), I.attr("class", "select2-sizer"), a(document.body).append(I);
        }
        return I.text(b.val()), I.width();
    }
    function s(b, c, d) {
        var e, f, g = [];
        e = a.trim(b.attr("class")), e && (e = "" + e, a(e.split(/\s+/)).each2(function() {
            0 === this.indexOf("select2-") && g.push(this);
        })), e = a.trim(c.attr("class")), e && (e = "" + e, a(e.split(/\s+/)).each2(function() {
            0 !== this.indexOf("select2-") && (f = d(this), f && g.push(f));
        })), b.attr("class", g.join(" "));
    }
    function t(a, b, c, e) {
        var f = d(a.toUpperCase()).indexOf(d(b.toUpperCase())), g = b.length;
        return f < 0 ? void c.push(e(a)) : (c.push(e(a.substring(0, f))), c.push("<span class='select2-match'>"), 
        c.push(e(a.substring(f, f + g))), c.push("</span>"), void c.push(e(a.substring(f + g, a.length))));
    }
    function u(a) {
        var b = {
            "\\": "&#92;",
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#47;"
        };
        return String(a).replace(/[&<>"'\/\\]/g, function(a) {
            return b[a];
        });
    }
    function v(c) {
        var d, e = null, f = c.quietMillis || 100, g = c.url, h = this;
        return function(i) {
            window.clearTimeout(d), d = window.setTimeout(function() {
                var d = c.data, f = g, j = c.transport || a.fn.select2.ajaxDefaults.transport, k = {
                    type: c.type || "GET",
                    cache: c.cache || !1,
                    jsonpCallback: c.jsonpCallback || b,
                    dataType: c.dataType || "json"
                }, l = a.extend({}, a.fn.select2.ajaxDefaults.params, k);
                d = d ? d.call(h, i.term, i.page, i.context) : null, f = "function" == typeof f ? f.call(h, i.term, i.page, i.context) : f, 
                e && "function" == typeof e.abort && e.abort(), c.params && (a.isFunction(c.params) ? a.extend(l, c.params.call(h)) : a.extend(l, c.params)), 
                a.extend(l, {
                    url: f,
                    dataType: c.dataType,
                    data: d,
                    success: function(a) {
                        var b = c.results(a, i.page, i);
                        i.callback(b);
                    },
                    error: function(a, b, c) {
                        var d = {
                            hasError: !0,
                            jqXHR: a,
                            textStatus: b,
                            errorThrown: c
                        };
                        i.callback(d);
                    }
                }), e = j.call(h, l);
            }, f);
        };
    }
    function w(b) {
        var c, d, e = b, f = function(a) {
            return "" + a.text;
        };
        a.isArray(e) && (d = e, e = {
            results: d
        }), a.isFunction(e) === !1 && (d = e, e = function() {
            return d;
        });
        var g = e();
        return g.text && (f = g.text, a.isFunction(f) || (c = g.text, f = function(a) {
            return a[c];
        })), function(b) {
            var c, d = b.term, g = {
                results: []
            };
            return "" === d ? void b.callback(e()) : (c = function(e, g) {
                var h, i;
                if (e = e[0], e.children) {
                    h = {};
                    for (i in e) e.hasOwnProperty(i) && (h[i] = e[i]);
                    h.children = [], a(e.children).each2(function(a, b) {
                        c(b, h.children);
                    }), (h.children.length || b.matcher(d, f(h), e)) && g.push(h);
                } else b.matcher(d, f(e), e) && g.push(e);
            }, a(e().results).each2(function(a, b) {
                c(b, g.results);
            }), void b.callback(g));
        };
    }
    function x(c) {
        var d = a.isFunction(c);
        return function(e) {
            var f = e.term, g = {
                results: []
            }, h = d ? c(e) : c;
            a.isArray(h) && (a(h).each(function() {
                var a = this.text !== b, c = a ? this.text : this;
                ("" === f || e.matcher(f, c)) && g.results.push(a ? this : {
                    id: this,
                    text: this
                });
            }), e.callback(g));
        };
    }
    function y(b, c) {
        if (a.isFunction(b)) return !0;
        if (!b) return !1;
        if ("string" == typeof b) return !0;
        throw new Error(c + " must be a string, function, or falsy value");
    }
    function z(b, c) {
        if (a.isFunction(b)) {
            var d = Array.prototype.slice.call(arguments, 2);
            return b.apply(c, d);
        }
        return b;
    }
    function A(b) {
        var c = 0;
        return a.each(b, function(a, b) {
            b.children ? c += A(b.children) : c++;
        }), c;
    }
    function B(a, c, d, e) {
        var f, h, i, j, k, l = a, m = !1;
        if (!e.createSearchChoice || !e.tokenSeparators || e.tokenSeparators.length < 1) return b;
        for (;;) {
            for (h = -1, i = 0, j = e.tokenSeparators.length; i < j && (k = e.tokenSeparators[i], 
            h = a.indexOf(k), !(h >= 0)); i++) ;
            if (h < 0) break;
            if (f = a.substring(0, h), a = a.substring(h + k.length), f.length > 0 && (f = e.createSearchChoice.call(this, f, c), 
            f !== b && null !== f && e.id(f) !== b && null !== e.id(f))) {
                for (m = !1, i = 0, j = c.length; i < j; i++) if (g(e.id(f), e.id(c[i]))) {
                    m = !0;
                    break;
                }
                m || d(f);
            }
        }
        return l !== a ? a : void 0;
    }
    function C() {
        var b = this;
        a.each(arguments, function(a, c) {
            b[c].remove(), b[c] = null;
        });
    }
    function D(b, c) {
        var d = function() {};
        return d.prototype = new b(), d.prototype.constructor = d, d.prototype.parent = b.prototype, 
        d.prototype = a.extend(d.prototype, c), d;
    }
    if (window.Select2 === b) {
        var E, F, G, H, I, J, K, L = {
            x: 0,
            y: 0
        }, M = {
            TAB: 9,
            ENTER: 13,
            ESC: 27,
            SPACE: 32,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            SHIFT: 16,
            CTRL: 17,
            ALT: 18,
            PAGE_UP: 33,
            PAGE_DOWN: 34,
            HOME: 36,
            END: 35,
            BACKSPACE: 8,
            DELETE: 46,
            isArrow: function(a) {
                switch (a = a.which ? a.which : a) {
                  case M.LEFT:
                  case M.RIGHT:
                  case M.UP:
                  case M.DOWN:
                    return !0;
                }
                return !1;
            },
            isControl: function(a) {
                var b = a.which;
                switch (b) {
                  case M.SHIFT:
                  case M.CTRL:
                  case M.ALT:
                    return !0;
                }
                return !!a.metaKey;
            },
            isFunctionKey: function(a) {
                return a = a.which ? a.which : a, a >= 112 && a <= 123;
            }
        }, N = "<div class='select2-measure-scrollbar'></div>", O = {
            "Ⓐ": "A",
            "Ａ": "A",
            "À": "A",
            "Á": "A",
            "Â": "A",
            "Ầ": "A",
            "Ấ": "A",
            "Ẫ": "A",
            "Ẩ": "A",
            "Ã": "A",
            "Ā": "A",
            "Ă": "A",
            "Ằ": "A",
            "Ắ": "A",
            "Ẵ": "A",
            "Ẳ": "A",
            "Ȧ": "A",
            "Ǡ": "A",
            "Ä": "A",
            "Ǟ": "A",
            "Ả": "A",
            "Å": "A",
            "Ǻ": "A",
            "Ǎ": "A",
            "Ȁ": "A",
            "Ȃ": "A",
            "Ạ": "A",
            "Ậ": "A",
            "Ặ": "A",
            "Ḁ": "A",
            "Ą": "A",
            "Ⱥ": "A",
            "Ɐ": "A",
            "Ꜳ": "AA",
            "Æ": "AE",
            "Ǽ": "AE",
            "Ǣ": "AE",
            "Ꜵ": "AO",
            "Ꜷ": "AU",
            "Ꜹ": "AV",
            "Ꜻ": "AV",
            "Ꜽ": "AY",
            "Ⓑ": "B",
            "Ｂ": "B",
            "Ḃ": "B",
            "Ḅ": "B",
            "Ḇ": "B",
            "Ƀ": "B",
            "Ƃ": "B",
            "Ɓ": "B",
            "Ⓒ": "C",
            "Ｃ": "C",
            "Ć": "C",
            "Ĉ": "C",
            "Ċ": "C",
            "Č": "C",
            "Ç": "C",
            "Ḉ": "C",
            "Ƈ": "C",
            "Ȼ": "C",
            "Ꜿ": "C",
            "Ⓓ": "D",
            "Ｄ": "D",
            "Ḋ": "D",
            "Ď": "D",
            "Ḍ": "D",
            "Ḑ": "D",
            "Ḓ": "D",
            "Ḏ": "D",
            "Đ": "D",
            "Ƌ": "D",
            "Ɗ": "D",
            "Ɖ": "D",
            "Ꝺ": "D",
            "Ǳ": "DZ",
            "Ǆ": "DZ",
            "ǲ": "Dz",
            "ǅ": "Dz",
            "Ⓔ": "E",
            "Ｅ": "E",
            "È": "E",
            "É": "E",
            "Ê": "E",
            "Ề": "E",
            "Ế": "E",
            "Ễ": "E",
            "Ể": "E",
            "Ẽ": "E",
            "Ē": "E",
            "Ḕ": "E",
            "Ḗ": "E",
            "Ĕ": "E",
            "Ė": "E",
            "Ë": "E",
            "Ẻ": "E",
            "Ě": "E",
            "Ȅ": "E",
            "Ȇ": "E",
            "Ẹ": "E",
            "Ệ": "E",
            "Ȩ": "E",
            "Ḝ": "E",
            "Ę": "E",
            "Ḙ": "E",
            "Ḛ": "E",
            "Ɛ": "E",
            "Ǝ": "E",
            "Ⓕ": "F",
            "Ｆ": "F",
            "Ḟ": "F",
            "Ƒ": "F",
            "Ꝼ": "F",
            "Ⓖ": "G",
            "Ｇ": "G",
            "Ǵ": "G",
            "Ĝ": "G",
            "Ḡ": "G",
            "Ğ": "G",
            "Ġ": "G",
            "Ǧ": "G",
            "Ģ": "G",
            "Ǥ": "G",
            "Ɠ": "G",
            "Ꞡ": "G",
            "Ᵹ": "G",
            "Ꝿ": "G",
            "Ⓗ": "H",
            "Ｈ": "H",
            "Ĥ": "H",
            "Ḣ": "H",
            "Ḧ": "H",
            "Ȟ": "H",
            "Ḥ": "H",
            "Ḩ": "H",
            "Ḫ": "H",
            "Ħ": "H",
            "Ⱨ": "H",
            "Ⱶ": "H",
            "Ɥ": "H",
            "Ⓘ": "I",
            "Ｉ": "I",
            "Ì": "I",
            "Í": "I",
            "Î": "I",
            "Ĩ": "I",
            "Ī": "I",
            "Ĭ": "I",
            "İ": "I",
            "Ï": "I",
            "Ḯ": "I",
            "Ỉ": "I",
            "Ǐ": "I",
            "Ȉ": "I",
            "Ȋ": "I",
            "Ị": "I",
            "Į": "I",
            "Ḭ": "I",
            "Ɨ": "I",
            "Ⓙ": "J",
            "Ｊ": "J",
            "Ĵ": "J",
            "Ɉ": "J",
            "Ⓚ": "K",
            "Ｋ": "K",
            "Ḱ": "K",
            "Ǩ": "K",
            "Ḳ": "K",
            "Ķ": "K",
            "Ḵ": "K",
            "Ƙ": "K",
            "Ⱪ": "K",
            "Ꝁ": "K",
            "Ꝃ": "K",
            "Ꝅ": "K",
            "Ꞣ": "K",
            "Ⓛ": "L",
            "Ｌ": "L",
            "Ŀ": "L",
            "Ĺ": "L",
            "Ľ": "L",
            "Ḷ": "L",
            "Ḹ": "L",
            "Ļ": "L",
            "Ḽ": "L",
            "Ḻ": "L",
            "Ł": "L",
            "Ƚ": "L",
            "Ɫ": "L",
            "Ⱡ": "L",
            "Ꝉ": "L",
            "Ꝇ": "L",
            "Ꞁ": "L",
            "Ǉ": "LJ",
            "ǈ": "Lj",
            "Ⓜ": "M",
            "Ｍ": "M",
            "Ḿ": "M",
            "Ṁ": "M",
            "Ṃ": "M",
            "Ɱ": "M",
            "Ɯ": "M",
            "Ⓝ": "N",
            "Ｎ": "N",
            "Ǹ": "N",
            "Ń": "N",
            "Ñ": "N",
            "Ṅ": "N",
            "Ň": "N",
            "Ṇ": "N",
            "Ņ": "N",
            "Ṋ": "N",
            "Ṉ": "N",
            "Ƞ": "N",
            "Ɲ": "N",
            "Ꞑ": "N",
            "Ꞥ": "N",
            "Ǌ": "NJ",
            "ǋ": "Nj",
            "Ⓞ": "O",
            "Ｏ": "O",
            "Ò": "O",
            "Ó": "O",
            "Ô": "O",
            "Ồ": "O",
            "Ố": "O",
            "Ỗ": "O",
            "Ổ": "O",
            "Õ": "O",
            "Ṍ": "O",
            "Ȭ": "O",
            "Ṏ": "O",
            "Ō": "O",
            "Ṑ": "O",
            "Ṓ": "O",
            "Ŏ": "O",
            "Ȯ": "O",
            "Ȱ": "O",
            "Ö": "O",
            "Ȫ": "O",
            "Ỏ": "O",
            "Ő": "O",
            "Ǒ": "O",
            "Ȍ": "O",
            "Ȏ": "O",
            "Ơ": "O",
            "Ờ": "O",
            "Ớ": "O",
            "Ỡ": "O",
            "Ở": "O",
            "Ợ": "O",
            "Ọ": "O",
            "Ộ": "O",
            "Ǫ": "O",
            "Ǭ": "O",
            "Ø": "O",
            "Ǿ": "O",
            "Ɔ": "O",
            "Ɵ": "O",
            "Ꝋ": "O",
            "Ꝍ": "O",
            "Ƣ": "OI",
            "Ꝏ": "OO",
            "Ȣ": "OU",
            "Ⓟ": "P",
            "Ｐ": "P",
            "Ṕ": "P",
            "Ṗ": "P",
            "Ƥ": "P",
            "Ᵽ": "P",
            "Ꝑ": "P",
            "Ꝓ": "P",
            "Ꝕ": "P",
            "Ⓠ": "Q",
            "Ｑ": "Q",
            "Ꝗ": "Q",
            "Ꝙ": "Q",
            "Ɋ": "Q",
            "Ⓡ": "R",
            "Ｒ": "R",
            "Ŕ": "R",
            "Ṙ": "R",
            "Ř": "R",
            "Ȑ": "R",
            "Ȓ": "R",
            "Ṛ": "R",
            "Ṝ": "R",
            "Ŗ": "R",
            "Ṟ": "R",
            "Ɍ": "R",
            "Ɽ": "R",
            "Ꝛ": "R",
            "Ꞧ": "R",
            "Ꞃ": "R",
            "Ⓢ": "S",
            "Ｓ": "S",
            "ẞ": "S",
            "Ś": "S",
            "Ṥ": "S",
            "Ŝ": "S",
            "Ṡ": "S",
            "Š": "S",
            "Ṧ": "S",
            "Ṣ": "S",
            "Ṩ": "S",
            "Ș": "S",
            "Ş": "S",
            "Ȿ": "S",
            "Ꞩ": "S",
            "Ꞅ": "S",
            "Ⓣ": "T",
            "Ｔ": "T",
            "Ṫ": "T",
            "Ť": "T",
            "Ṭ": "T",
            "Ț": "T",
            "Ţ": "T",
            "Ṱ": "T",
            "Ṯ": "T",
            "Ŧ": "T",
            "Ƭ": "T",
            "Ʈ": "T",
            "Ⱦ": "T",
            "Ꞇ": "T",
            "Ꜩ": "TZ",
            "Ⓤ": "U",
            "Ｕ": "U",
            "Ù": "U",
            "Ú": "U",
            "Û": "U",
            "Ũ": "U",
            "Ṹ": "U",
            "Ū": "U",
            "Ṻ": "U",
            "Ŭ": "U",
            "Ü": "U",
            "Ǜ": "U",
            "Ǘ": "U",
            "Ǖ": "U",
            "Ǚ": "U",
            "Ủ": "U",
            "Ů": "U",
            "Ű": "U",
            "Ǔ": "U",
            "Ȕ": "U",
            "Ȗ": "U",
            "Ư": "U",
            "Ừ": "U",
            "Ứ": "U",
            "Ữ": "U",
            "Ử": "U",
            "Ự": "U",
            "Ụ": "U",
            "Ṳ": "U",
            "Ų": "U",
            "Ṷ": "U",
            "Ṵ": "U",
            "Ʉ": "U",
            "Ⓥ": "V",
            "Ｖ": "V",
            "Ṽ": "V",
            "Ṿ": "V",
            "Ʋ": "V",
            "Ꝟ": "V",
            "Ʌ": "V",
            "Ꝡ": "VY",
            "Ⓦ": "W",
            "Ｗ": "W",
            "Ẁ": "W",
            "Ẃ": "W",
            "Ŵ": "W",
            "Ẇ": "W",
            "Ẅ": "W",
            "Ẉ": "W",
            "Ⱳ": "W",
            "Ⓧ": "X",
            "Ｘ": "X",
            "Ẋ": "X",
            "Ẍ": "X",
            "Ⓨ": "Y",
            "Ｙ": "Y",
            "Ỳ": "Y",
            "Ý": "Y",
            "Ŷ": "Y",
            "Ỹ": "Y",
            "Ȳ": "Y",
            "Ẏ": "Y",
            "Ÿ": "Y",
            "Ỷ": "Y",
            "Ỵ": "Y",
            "Ƴ": "Y",
            "Ɏ": "Y",
            "Ỿ": "Y",
            "Ⓩ": "Z",
            "Ｚ": "Z",
            "Ź": "Z",
            "Ẑ": "Z",
            "Ż": "Z",
            "Ž": "Z",
            "Ẓ": "Z",
            "Ẕ": "Z",
            "Ƶ": "Z",
            "Ȥ": "Z",
            "Ɀ": "Z",
            "Ⱬ": "Z",
            "Ꝣ": "Z",
            "ⓐ": "a",
            "ａ": "a",
            "ẚ": "a",
            "à": "a",
            "á": "a",
            "â": "a",
            "ầ": "a",
            "ấ": "a",
            "ẫ": "a",
            "ẩ": "a",
            "ã": "a",
            "ā": "a",
            "ă": "a",
            "ằ": "a",
            "ắ": "a",
            "ẵ": "a",
            "ẳ": "a",
            "ȧ": "a",
            "ǡ": "a",
            "ä": "a",
            "ǟ": "a",
            "ả": "a",
            "å": "a",
            "ǻ": "a",
            "ǎ": "a",
            "ȁ": "a",
            "ȃ": "a",
            "ạ": "a",
            "ậ": "a",
            "ặ": "a",
            "ḁ": "a",
            "ą": "a",
            "ⱥ": "a",
            "ɐ": "a",
            "ꜳ": "aa",
            "æ": "ae",
            "ǽ": "ae",
            "ǣ": "ae",
            "ꜵ": "ao",
            "ꜷ": "au",
            "ꜹ": "av",
            "ꜻ": "av",
            "ꜽ": "ay",
            "ⓑ": "b",
            "ｂ": "b",
            "ḃ": "b",
            "ḅ": "b",
            "ḇ": "b",
            "ƀ": "b",
            "ƃ": "b",
            "ɓ": "b",
            "ⓒ": "c",
            "ｃ": "c",
            "ć": "c",
            "ĉ": "c",
            "ċ": "c",
            "č": "c",
            "ç": "c",
            "ḉ": "c",
            "ƈ": "c",
            "ȼ": "c",
            "ꜿ": "c",
            "ↄ": "c",
            "ⓓ": "d",
            "ｄ": "d",
            "ḋ": "d",
            "ď": "d",
            "ḍ": "d",
            "ḑ": "d",
            "ḓ": "d",
            "ḏ": "d",
            "đ": "d",
            "ƌ": "d",
            "ɖ": "d",
            "ɗ": "d",
            "ꝺ": "d",
            "ǳ": "dz",
            "ǆ": "dz",
            "ⓔ": "e",
            "ｅ": "e",
            "è": "e",
            "é": "e",
            "ê": "e",
            "ề": "e",
            "ế": "e",
            "ễ": "e",
            "ể": "e",
            "ẽ": "e",
            "ē": "e",
            "ḕ": "e",
            "ḗ": "e",
            "ĕ": "e",
            "ė": "e",
            "ë": "e",
            "ẻ": "e",
            "ě": "e",
            "ȅ": "e",
            "ȇ": "e",
            "ẹ": "e",
            "ệ": "e",
            "ȩ": "e",
            "ḝ": "e",
            "ę": "e",
            "ḙ": "e",
            "ḛ": "e",
            "ɇ": "e",
            "ɛ": "e",
            "ǝ": "e",
            "ⓕ": "f",
            "ｆ": "f",
            "ḟ": "f",
            "ƒ": "f",
            "ꝼ": "f",
            "ⓖ": "g",
            "ｇ": "g",
            "ǵ": "g",
            "ĝ": "g",
            "ḡ": "g",
            "ğ": "g",
            "ġ": "g",
            "ǧ": "g",
            "ģ": "g",
            "ǥ": "g",
            "ɠ": "g",
            "ꞡ": "g",
            "ᵹ": "g",
            "ꝿ": "g",
            "ⓗ": "h",
            "ｈ": "h",
            "ĥ": "h",
            "ḣ": "h",
            "ḧ": "h",
            "ȟ": "h",
            "ḥ": "h",
            "ḩ": "h",
            "ḫ": "h",
            "ẖ": "h",
            "ħ": "h",
            "ⱨ": "h",
            "ⱶ": "h",
            "ɥ": "h",
            "ƕ": "hv",
            "ⓘ": "i",
            "ｉ": "i",
            "ì": "i",
            "í": "i",
            "î": "i",
            "ĩ": "i",
            "ī": "i",
            "ĭ": "i",
            "ï": "i",
            "ḯ": "i",
            "ỉ": "i",
            "ǐ": "i",
            "ȉ": "i",
            "ȋ": "i",
            "ị": "i",
            "į": "i",
            "ḭ": "i",
            "ɨ": "i",
            "ı": "i",
            "ⓙ": "j",
            "ｊ": "j",
            "ĵ": "j",
            "ǰ": "j",
            "ɉ": "j",
            "ⓚ": "k",
            "ｋ": "k",
            "ḱ": "k",
            "ǩ": "k",
            "ḳ": "k",
            "ķ": "k",
            "ḵ": "k",
            "ƙ": "k",
            "ⱪ": "k",
            "ꝁ": "k",
            "ꝃ": "k",
            "ꝅ": "k",
            "ꞣ": "k",
            "ⓛ": "l",
            "ｌ": "l",
            "ŀ": "l",
            "ĺ": "l",
            "ľ": "l",
            "ḷ": "l",
            "ḹ": "l",
            "ļ": "l",
            "ḽ": "l",
            "ḻ": "l",
            "ſ": "l",
            "ł": "l",
            "ƚ": "l",
            "ɫ": "l",
            "ⱡ": "l",
            "ꝉ": "l",
            "ꞁ": "l",
            "ꝇ": "l",
            "ǉ": "lj",
            "ⓜ": "m",
            "ｍ": "m",
            "ḿ": "m",
            "ṁ": "m",
            "ṃ": "m",
            "ɱ": "m",
            "ɯ": "m",
            "ⓝ": "n",
            "ｎ": "n",
            "ǹ": "n",
            "ń": "n",
            "ñ": "n",
            "ṅ": "n",
            "ň": "n",
            "ṇ": "n",
            "ņ": "n",
            "ṋ": "n",
            "ṉ": "n",
            "ƞ": "n",
            "ɲ": "n",
            "ŉ": "n",
            "ꞑ": "n",
            "ꞥ": "n",
            "ǌ": "nj",
            "ⓞ": "o",
            "ｏ": "o",
            "ò": "o",
            "ó": "o",
            "ô": "o",
            "ồ": "o",
            "ố": "o",
            "ỗ": "o",
            "ổ": "o",
            "õ": "o",
            "ṍ": "o",
            "ȭ": "o",
            "ṏ": "o",
            "ō": "o",
            "ṑ": "o",
            "ṓ": "o",
            "ŏ": "o",
            "ȯ": "o",
            "ȱ": "o",
            "ö": "o",
            "ȫ": "o",
            "ỏ": "o",
            "ő": "o",
            "ǒ": "o",
            "ȍ": "o",
            "ȏ": "o",
            "ơ": "o",
            "ờ": "o",
            "ớ": "o",
            "ỡ": "o",
            "ở": "o",
            "ợ": "o",
            "ọ": "o",
            "ộ": "o",
            "ǫ": "o",
            "ǭ": "o",
            "ø": "o",
            "ǿ": "o",
            "ɔ": "o",
            "ꝋ": "o",
            "ꝍ": "o",
            "ɵ": "o",
            "ƣ": "oi",
            "ȣ": "ou",
            "ꝏ": "oo",
            "ⓟ": "p",
            "ｐ": "p",
            "ṕ": "p",
            "ṗ": "p",
            "ƥ": "p",
            "ᵽ": "p",
            "ꝑ": "p",
            "ꝓ": "p",
            "ꝕ": "p",
            "ⓠ": "q",
            "ｑ": "q",
            "ɋ": "q",
            "ꝗ": "q",
            "ꝙ": "q",
            "ⓡ": "r",
            "ｒ": "r",
            "ŕ": "r",
            "ṙ": "r",
            "ř": "r",
            "ȑ": "r",
            "ȓ": "r",
            "ṛ": "r",
            "ṝ": "r",
            "ŗ": "r",
            "ṟ": "r",
            "ɍ": "r",
            "ɽ": "r",
            "ꝛ": "r",
            "ꞧ": "r",
            "ꞃ": "r",
            "ⓢ": "s",
            "ｓ": "s",
            "ß": "s",
            "ś": "s",
            "ṥ": "s",
            "ŝ": "s",
            "ṡ": "s",
            "š": "s",
            "ṧ": "s",
            "ṣ": "s",
            "ṩ": "s",
            "ș": "s",
            "ş": "s",
            "ȿ": "s",
            "ꞩ": "s",
            "ꞅ": "s",
            "ẛ": "s",
            "ⓣ": "t",
            "ｔ": "t",
            "ṫ": "t",
            "ẗ": "t",
            "ť": "t",
            "ṭ": "t",
            "ț": "t",
            "ţ": "t",
            "ṱ": "t",
            "ṯ": "t",
            "ŧ": "t",
            "ƭ": "t",
            "ʈ": "t",
            "ⱦ": "t",
            "ꞇ": "t",
            "ꜩ": "tz",
            "ⓤ": "u",
            "ｕ": "u",
            "ù": "u",
            "ú": "u",
            "û": "u",
            "ũ": "u",
            "ṹ": "u",
            "ū": "u",
            "ṻ": "u",
            "ŭ": "u",
            "ü": "u",
            "ǜ": "u",
            "ǘ": "u",
            "ǖ": "u",
            "ǚ": "u",
            "ủ": "u",
            "ů": "u",
            "ű": "u",
            "ǔ": "u",
            "ȕ": "u",
            "ȗ": "u",
            "ư": "u",
            "ừ": "u",
            "ứ": "u",
            "ữ": "u",
            "ử": "u",
            "ự": "u",
            "ụ": "u",
            "ṳ": "u",
            "ų": "u",
            "ṷ": "u",
            "ṵ": "u",
            "ʉ": "u",
            "ⓥ": "v",
            "ｖ": "v",
            "ṽ": "v",
            "ṿ": "v",
            "ʋ": "v",
            "ꝟ": "v",
            "ʌ": "v",
            "ꝡ": "vy",
            "ⓦ": "w",
            "ｗ": "w",
            "ẁ": "w",
            "ẃ": "w",
            "ŵ": "w",
            "ẇ": "w",
            "ẅ": "w",
            "ẘ": "w",
            "ẉ": "w",
            "ⱳ": "w",
            "ⓧ": "x",
            "ｘ": "x",
            "ẋ": "x",
            "ẍ": "x",
            "ⓨ": "y",
            "ｙ": "y",
            "ỳ": "y",
            "ý": "y",
            "ŷ": "y",
            "ỹ": "y",
            "ȳ": "y",
            "ẏ": "y",
            "ÿ": "y",
            "ỷ": "y",
            "ẙ": "y",
            "ỵ": "y",
            "ƴ": "y",
            "ɏ": "y",
            "ỿ": "y",
            "ⓩ": "z",
            "ｚ": "z",
            "ź": "z",
            "ẑ": "z",
            "ż": "z",
            "ž": "z",
            "ẓ": "z",
            "ẕ": "z",
            "ƶ": "z",
            "ȥ": "z",
            "ɀ": "z",
            "ⱬ": "z",
            "ꝣ": "z",
            "Ά": "Α",
            "Έ": "Ε",
            "Ή": "Η",
            "Ί": "Ι",
            "Ϊ": "Ι",
            "Ό": "Ο",
            "Ύ": "Υ",
            "Ϋ": "Υ",
            "Ώ": "Ω",
            "ά": "α",
            "έ": "ε",
            "ή": "η",
            "ί": "ι",
            "ϊ": "ι",
            "ΐ": "ι",
            "ό": "ο",
            "ύ": "υ",
            "ϋ": "υ",
            "ΰ": "υ",
            "ω": "ω",
            "ς": "σ"
        };
        J = a(document), H = function() {
            var a = 1;
            return function() {
                return a++;
            };
        }(), E = D(Object, {
            bind: function(a) {
                var b = this;
                return function() {
                    a.apply(b, arguments);
                };
            },
            init: function(c) {
                var d, e, g = ".select2-results";
                this.opts = c = this.prepareOpts(c), this.id = c.id, c.element.data("select2") !== b && null !== c.element.data("select2") && c.element.data("select2").destroy(), 
                this.container = this.createContainer(), this.liveRegion = a(".select2-hidden-accessible"), 
                0 == this.liveRegion.length && (this.liveRegion = a("<span>", {
                    role: "status",
                    "aria-live": "polite"
                }).addClass("select2-hidden-accessible").appendTo(document.body)), this.containerId = "s2id_" + (c.element.attr("id") || "autogen" + H()), 
                this.containerEventName = this.containerId.replace(/([.])/g, "_").replace(/([;&,\-\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, "\\$1"), 
                this.container.attr("id", this.containerId), this.container.attr("title", c.element.attr("title")), 
                this.body = a(document.body), s(this.container, this.opts.element, this.opts.adaptContainerCssClass), 
                this.container.attr("style", c.element.attr("style")), this.container.css(z(c.containerCss, this.opts.element)), 
                this.container.addClass(z(c.containerCssClass, this.opts.element)), this.elementTabIndex = this.opts.element.attr("tabindex"), 
                this.opts.element.data("select2", this).attr("tabindex", "-1").before(this.container).on("click.select2", p), 
                this.container.data("select2", this), this.dropdown = this.container.find(".select2-drop"), 
                s(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass), this.dropdown.addClass(z(c.dropdownCssClass, this.opts.element)), 
                this.dropdown.data("select2", this), this.dropdown.on("click", p), this.results = d = this.container.find(g), 
                this.search = e = this.container.find("input.select2-input"), this.queryCount = 0, 
                this.resultsPage = 0, this.context = null, this.initContainer(), this.container.on("click", p), 
                k(this.results), this.dropdown.on("mousemove-filtered", g, this.bind(this.highlightUnderEvent)), 
                this.dropdown.on("touchstart touchmove touchend", g, this.bind(function(a) {
                    this._touchEvent = !0, this.highlightUnderEvent(a);
                })), this.dropdown.on("touchmove", g, this.bind(this.touchMoved)), this.dropdown.on("touchstart touchend", g, this.bind(this.clearTouchMoved)), 
                this.dropdown.on("click", this.bind(function(a) {
                    this._touchEvent && (this._touchEvent = !1, this.selectHighlighted());
                })), m(80, this.results), this.dropdown.on("scroll-debounced", g, this.bind(this.loadMoreIfNeeded)), 
                a(this.container).on("change", ".select2-input", function(a) {
                    a.stopPropagation();
                }), a(this.dropdown).on("change", ".select2-input", function(a) {
                    a.stopPropagation();
                }), a.fn.mousewheel && d.mousewheel(function(a, b, c, e) {
                    var f = d.scrollTop();
                    e > 0 && f - e <= 0 ? (d.scrollTop(0), p(a)) : e < 0 && d.get(0).scrollHeight - d.scrollTop() + e <= d.height() && (d.scrollTop(d.get(0).scrollHeight - d.height()), 
                    p(a));
                }), j(e), e.on("keyup-change input paste", this.bind(this.updateResults)), e.on("focus", function() {
                    e.addClass("select2-focused");
                }), e.on("blur", function() {
                    e.removeClass("select2-focused");
                }), this.dropdown.on("mouseup", g, this.bind(function(b) {
                    a(b.target).closest(".select2-result-selectable").length > 0 && (this.highlightUnderEvent(b), 
                    this.selectHighlighted(b));
                })), this.dropdown.on("click mouseup mousedown touchstart touchend focusin", function(a) {
                    a.stopPropagation();
                }), this.nextSearchTerm = b, a.isFunction(this.opts.initSelection) && (this.initSelection(), 
                this.monitorSource()), null !== c.maximumInputLength && this.search.attr("maxlength", c.maximumInputLength);
                var h = c.element.prop("disabled");
                h === b && (h = !1), this.enable(!h);
                var i = c.element.prop("readonly");
                i === b && (i = !1), this.readonly(i), K = K || f(), this.autofocus = c.element.prop("autofocus"), 
                c.element.prop("autofocus", !1), this.autofocus && this.focus(), this.search.attr("placeholder", c.searchInputPlaceholder);
            },
            destroy: function() {
                var a = this.opts.element, c = a.data("select2"), d = this;
                this.close(), a.length && a[0].detachEvent && d._sync && a.each(function() {
                    d._sync && this.detachEvent("onpropertychange", d._sync);
                }), this.propertyObserver && (this.propertyObserver.disconnect(), this.propertyObserver = null), 
                this._sync = null, c !== b && (c.container.remove(), c.liveRegion.remove(), c.dropdown.remove(), 
                a.show().removeData("select2").off(".select2").prop("autofocus", this.autofocus || !1), 
                this.elementTabIndex ? a.attr({
                    tabindex: this.elementTabIndex
                }) : a.removeAttr("tabindex"), a.show()), C.call(this, "container", "liveRegion", "dropdown", "results", "search");
            },
            optionToData: function(a) {
                return a.is("option") ? {
                    id: a.prop("value"),
                    text: a.text(),
                    element: a.get(),
                    css: a.attr("class"),
                    disabled: a.prop("disabled"),
                    locked: g(a.attr("locked"), "locked") || g(a.data("locked"), !0)
                } : a.is("optgroup") ? {
                    text: a.attr("label"),
                    children: [],
                    element: a.get(),
                    css: a.attr("class")
                } : void 0;
            },
            prepareOpts: function(c) {
                var d, e, f, i, j = this;
                if (d = c.element, "select" === d.get(0).tagName.toLowerCase() && (this.select = e = c.element), 
                e && a.each([ "id", "multiple", "ajax", "query", "createSearchChoice", "initSelection", "data", "tags" ], function() {
                    if (this in c) throw new Error("Option '" + this + "' is not allowed for Select2 when attached to a <select> element.");
                }), c = a.extend({}, {
                    populateResults: function(d, e, f) {
                        var g, h = this.opts.id, i = this.liveRegion;
                        (g = function(d, e, k) {
                            var l, m, n, o, p, q, r, s, t, u;
                            d = c.sortResults(d, e, f);
                            var v = [];
                            for (l = 0, m = d.length; l < m; l += 1) n = d[l], p = n.disabled === !0, o = !p && h(n) !== b, 
                            q = n.children && n.children.length > 0, r = a("<li></li>"), r.addClass("select2-results-dept-" + k), 
                            r.addClass("select2-result"), r.addClass(o ? "select2-result-selectable" : "select2-result-unselectable"), 
                            p && r.addClass("select2-disabled"), q && r.addClass("select2-result-with-children"), 
                            r.addClass(j.opts.formatResultCssClass(n)), r.attr("role", "presentation"), s = a(document.createElement("div")), 
                            s.addClass("select2-result-label"), s.attr("id", "select2-result-label-" + H()), 
                            s.attr("role", "option"), u = c.formatResult(n, s, f, j.opts.escapeMarkup), u !== b && (s.html(u), 
                            r.append(s)), q && (t = a("<ul></ul>"), t.addClass("select2-result-sub"), g(n.children, t, k + 1), 
                            r.append(t)), r.data("select2-data", n), v.push(r[0]);
                            e.append(v), i.text(c.formatMatches(d.length));
                        })(e, d, 0);
                    }
                }, a.fn.select2.defaults, c), "function" != typeof c.id && (f = c.id, c.id = function(a) {
                    return a[f];
                }), a.isArray(c.element.data("select2Tags"))) {
                    if ("tags" in c) throw "tags specified as both an attribute 'data-select2-tags' and in options of Select2 " + c.element.attr("id");
                    c.tags = c.element.data("select2Tags");
                }
                if (e ? (c.query = this.bind(function(a) {
                    var c, e, f, g = {
                        results: [],
                        more: !1
                    }, h = a.term;
                    f = function(b, c) {
                        var d;
                        b.is("option") ? a.matcher(h, b.text(), b) && c.push(j.optionToData(b)) : b.is("optgroup") && (d = j.optionToData(b), 
                        b.children().each2(function(a, b) {
                            f(b, d.children);
                        }), d.children.length > 0 && c.push(d));
                    }, c = d.children(), this.getPlaceholder() !== b && c.length > 0 && (e = this.getPlaceholderOption(), 
                    e && (c = c.not(e))), c.each2(function(a, b) {
                        f(b, g.results);
                    }), a.callback(g);
                }), c.id = function(a) {
                    return a.id;
                }) : "query" in c || ("ajax" in c ? (i = c.element.data("ajax-url"), i && i.length > 0 && (c.ajax.url = i), 
                c.query = v.call(c.element, c.ajax)) : "data" in c ? c.query = w(c.data) : "tags" in c && (c.query = x(c.tags), 
                c.createSearchChoice === b && (c.createSearchChoice = function(b) {
                    return {
                        id: a.trim(b),
                        text: a.trim(b)
                    };
                }), c.initSelection === b && (c.initSelection = function(b, d) {
                    var e = [];
                    a(h(b.val(), c.separator, c.transformVal)).each(function() {
                        var b = {
                            id: this,
                            text: this
                        }, d = c.tags;
                        a.isFunction(d) && (d = d()), a(d).each(function() {
                            if (g(this.id, b.id)) return b = this, !1;
                        }), e.push(b);
                    }), d(e);
                }))), "function" != typeof c.query) throw "query function not defined for Select2 " + c.element.attr("id");
                if ("top" === c.createSearchChoicePosition) c.createSearchChoicePosition = function(a, b) {
                    a.unshift(b);
                }; else if ("bottom" === c.createSearchChoicePosition) c.createSearchChoicePosition = function(a, b) {
                    a.push(b);
                }; else if ("function" != typeof c.createSearchChoicePosition) throw "invalid createSearchChoicePosition option must be 'top', 'bottom' or a custom function";
                return c;
            },
            monitorSource: function() {
                var c, d = this.opts.element, e = this;
                d.on("change.select2", this.bind(function(a) {
                    this.opts.element.data("select2-change-triggered") !== !0 && this.initSelection();
                })), this._sync = this.bind(function() {
                    var a = d.prop("disabled");
                    a === b && (a = !1), this.enable(!a);
                    var c = d.prop("readonly");
                    c === b && (c = !1), this.readonly(c), this.container && (s(this.container, this.opts.element, this.opts.adaptContainerCssClass), 
                    this.container.addClass(z(this.opts.containerCssClass, this.opts.element))), this.dropdown && (s(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass), 
                    this.dropdown.addClass(z(this.opts.dropdownCssClass, this.opts.element)));
                }), d.length && d[0].attachEvent && d.each(function() {
                    this.attachEvent("onpropertychange", e._sync);
                }), c = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver, 
                c !== b && (this.propertyObserver && (delete this.propertyObserver, this.propertyObserver = null), 
                this.propertyObserver = new c(function(b) {
                    a.each(b, e._sync);
                }), this.propertyObserver.observe(d.get(0), {
                    attributes: !0,
                    subtree: !1
                }));
            },
            triggerSelect: function(b) {
                var c = a.Event("select2-selecting", {
                    val: this.id(b),
                    object: b,
                    choice: b
                });
                return this.opts.element.trigger(c), !c.isDefaultPrevented();
            },
            triggerChange: function(b) {
                b = b || {}, b = a.extend({}, b, {
                    type: "change",
                    val: this.val()
                }), this.opts.element.data("select2-change-triggered", !0), this.opts.element.trigger(b), 
                this.opts.element.data("select2-change-triggered", !1), this.opts.element.click(), 
                this.opts.blurOnChange && this.opts.element.blur();
            },
            isInterfaceEnabled: function() {
                return this.enabledInterface === !0;
            },
            enableInterface: function() {
                var a = this._enabled && !this._readonly, b = !a;
                return a !== this.enabledInterface && (this.container.toggleClass("select2-container-disabled", b), 
                this.close(), this.enabledInterface = a, !0);
            },
            enable: function(a) {
                a === b && (a = !0), this._enabled !== a && (this._enabled = a, this.opts.element.prop("disabled", !a), 
                this.enableInterface());
            },
            disable: function() {
                this.enable(!1);
            },
            readonly: function(a) {
                a === b && (a = !1), this._readonly !== a && (this._readonly = a, this.opts.element.prop("readonly", a), 
                this.enableInterface());
            },
            opened: function() {
                return !!this.container && this.container.hasClass("select2-dropdown-open");
            },
            positionDropdown: function() {
                var b, c, d, e, f, g = this.dropdown, h = this.container, i = h.offset(), j = h.outerHeight(!1), k = h.outerWidth(!1), l = g.outerHeight(!1), m = a(window), n = m.width(), o = m.height(), p = m.scrollLeft() + n, q = m.scrollTop() + o, r = i.top + j, s = i.left, t = r + l <= q, u = i.top - l >= m.scrollTop(), v = g.outerWidth(!1), w = function() {
                    return s + v <= p;
                }, x = function() {
                    return i.left + p + h.outerWidth(!1) > v;
                }, y = g.hasClass("select2-drop-above");
                y ? (c = !0, !u && t && (d = !0, c = !1)) : (c = !1, !t && u && (d = !0, c = !0)), 
                d && (g.hide(), i = this.container.offset(), j = this.container.outerHeight(!1), 
                k = this.container.outerWidth(!1), l = g.outerHeight(!1), p = m.scrollLeft() + n, 
                q = m.scrollTop() + o, r = i.top + j, s = i.left, v = g.outerWidth(!1), g.show(), 
                this.focusSearch()), this.opts.dropdownAutoWidth ? (f = a(".select2-results", g)[0], 
                g.addClass("select2-drop-auto-width"), g.css("width", ""), v = g.outerWidth(!1) + (f.scrollHeight === f.clientHeight ? 0 : K.width), 
                v > k ? k = v : v = k, l = g.outerHeight(!1)) : this.container.removeClass("select2-drop-auto-width"), 
                "static" !== this.body.css("position") && (b = this.body.offset(), r -= b.top, s -= b.left), 
                !w() && x() && (s = i.left + this.container.outerWidth(!1) - v), e = {
                    left: s,
                    width: k
                }, c ? (e.top = i.top - l, e.bottom = "auto", this.container.addClass("select2-drop-above"), 
                g.addClass("select2-drop-above")) : (e.top = r, e.bottom = "auto", this.container.removeClass("select2-drop-above"), 
                g.removeClass("select2-drop-above")), e = a.extend(e, z(this.opts.dropdownCss, this.opts.element)), 
                g.css(e);
            },
            shouldOpen: function() {
                var b;
                return !this.opened() && (this._enabled !== !1 && this._readonly !== !0 && (b = a.Event("select2-opening"), 
                this.opts.element.trigger(b), !b.isDefaultPrevented()));
            },
            clearDropdownAlignmentPreference: function() {
                this.container.removeClass("select2-drop-above"), this.dropdown.removeClass("select2-drop-above");
            },
            open: function() {
                return !!this.shouldOpen() && (this.opening(), J.on("mousemove.select2Event", function(a) {
                    L.x = a.pageX, L.y = a.pageY;
                }), !0);
            },
            opening: function() {
                var b, d = this.containerEventName, e = "scroll." + d, f = "resize." + d, g = "orientationchange." + d;
                this.container.addClass("select2-dropdown-open").addClass("select2-container-active"), 
                this.clearDropdownAlignmentPreference(), this.dropdown[0] !== this.body.children().last()[0] && this.dropdown.detach().appendTo(this.body), 
                b = a("#select2-drop-mask"), 0 === b.length && (b = a(document.createElement("div")), 
                b.attr("id", "select2-drop-mask").attr("class", "select2-drop-mask"), b.hide(), 
                b.appendTo(this.body), b.on("mousedown touchstart click", function(d) {
                    c(b);
                    var e, f = a("#select2-drop");
                    f.length > 0 && (e = f.data("select2"), e.opts.selectOnBlur && e.selectHighlighted({
                        noFocus: !0
                    }), e.close(), d.preventDefault(), d.stopPropagation());
                })), this.dropdown.prev()[0] !== b[0] && this.dropdown.before(b), a("#select2-drop").removeAttr("id"), 
                this.dropdown.attr("id", "select2-drop"), b.show(), this.positionDropdown(), this.dropdown.show(), 
                this.positionDropdown(), this.dropdown.addClass("select2-drop-active");
                var h = this;
                this.container.parents().add(window).each(function() {
                    a(this).on(f + " " + e + " " + g, function(a) {
                        h.opened() && h.positionDropdown();
                    });
                });
            },
            close: function() {
                if (this.opened()) {
                    var b = this.containerEventName, c = "scroll." + b, d = "resize." + b, e = "orientationchange." + b;
                    this.container.parents().add(window).each(function() {
                        a(this).off(c).off(d).off(e);
                    }), this.clearDropdownAlignmentPreference(), a("#select2-drop-mask").hide(), this.dropdown.removeAttr("id"), 
                    this.dropdown.hide(), this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active"), 
                    this.results.empty(), J.off("mousemove.select2Event"), this.clearSearch(), this.search.removeClass("select2-active"), 
                    this.opts.element.trigger(a.Event("select2-close"));
                }
            },
            externalSearch: function(a) {
                this.open(), this.search.val(a), this.updateResults(!1);
            },
            clearSearch: function() {},
            getMaximumSelectionSize: function() {
                return z(this.opts.maximumSelectionSize, this.opts.element);
            },
            ensureHighlightVisible: function() {
                var b, c, d, e, f, g, h, i, j = this.results;
                if (c = this.highlight(), !(c < 0)) {
                    if (0 == c) return void j.scrollTop(0);
                    b = this.findHighlightableChoices().find(".select2-result-label"), d = a(b[c]), 
                    i = (d.offset() || {}).top || 0, e = i + d.outerHeight(!0), c === b.length - 1 && (h = j.find("li.select2-more-results"), 
                    h.length > 0 && (e = h.offset().top + h.outerHeight(!0))), f = j.offset().top + j.outerHeight(!1), 
                    e > f && j.scrollTop(j.scrollTop() + (e - f)), g = i - j.offset().top, g < 0 && "none" != d.css("display") && j.scrollTop(j.scrollTop() + g);
                }
            },
            findHighlightableChoices: function() {
                return this.results.find(".select2-result-selectable:not(.select2-disabled):not(.select2-selected)");
            },
            moveHighlight: function(b) {
                for (var c = this.findHighlightableChoices(), d = this.highlight(); d > -1 && d < c.length; ) {
                    d += b;
                    var e = a(c[d]);
                    if (e.hasClass("select2-result-selectable") && !e.hasClass("select2-disabled") && !e.hasClass("select2-selected")) {
                        this.highlight(d);
                        break;
                    }
                }
            },
            highlight: function(b) {
                var c, d, f = this.findHighlightableChoices();
                return 0 === arguments.length ? e(f.filter(".select2-highlighted")[0], f.get()) : (b >= f.length && (b = f.length - 1), 
                b < 0 && (b = 0), this.removeHighlight(), c = a(f[b]), c.addClass("select2-highlighted"), 
                this.search.attr("aria-activedescendant", c.find(".select2-result-label").attr("id")), 
                this.ensureHighlightVisible(), this.liveRegion.text(c.text()), d = c.data("select2-data"), 
                void (d && this.opts.element.trigger({
                    type: "select2-highlight",
                    val: this.id(d),
                    choice: d
                })));
            },
            removeHighlight: function() {
                this.results.find(".select2-highlighted").removeClass("select2-highlighted");
            },
            touchMoved: function() {
                this._touchMoved = !0;
            },
            clearTouchMoved: function() {
                this._touchMoved = !1;
            },
            countSelectableResults: function() {
                return this.findHighlightableChoices().length;
            },
            highlightUnderEvent: function(b) {
                var c = a(b.target).closest(".select2-result-selectable");
                if (c.length > 0 && !c.is(".select2-highlighted")) {
                    var d = this.findHighlightableChoices();
                    this.highlight(d.index(c));
                } else 0 == c.length && this.removeHighlight();
            },
            loadMoreIfNeeded: function() {
                var a, b = this.results, c = b.find("li.select2-more-results"), d = this.resultsPage + 1, e = this, f = this.search.val(), g = this.context;
                0 !== c.length && (a = c.offset().top - b.offset().top - b.height(), a <= this.opts.loadMorePadding && (c.addClass("select2-active"), 
                this.opts.query({
                    element: this.opts.element,
                    term: f,
                    page: d,
                    context: g,
                    matcher: this.opts.matcher,
                    callback: this.bind(function(a) {
                        e.opened() && (e.opts.populateResults.call(this, b, a.results, {
                            term: f,
                            page: d,
                            context: g
                        }), e.postprocessResults(a, !1, !1), a.more === !0 ? (c.detach().appendTo(b).html(e.opts.escapeMarkup(z(e.opts.formatLoadMore, e.opts.element, d + 1))), 
                        window.setTimeout(function() {
                            e.loadMoreIfNeeded();
                        }, 10)) : c.remove(), e.positionDropdown(), e.resultsPage = d, e.context = a.context, 
                        this.opts.element.trigger({
                            type: "select2-loaded",
                            items: a
                        }));
                    })
                })));
            },
            tokenize: function() {},
            updateResults: function(c) {
                function d() {
                    j.removeClass("select2-active"), m.positionDropdown(), k.find(".select2-no-results,.select2-selection-limit,.select2-searching").length ? m.liveRegion.text(k.text()) : m.liveRegion.text(m.opts.formatMatches(k.find('.select2-result-selectable:not(".select2-selected")').length));
                }
                function e(a) {
                    k.html(a), d();
                }
                var f, h, i, j = this.search, k = this.results, l = this.opts, m = this, n = j.val(), o = a.data(this.container, "select2-last-term");
                if ((c === !0 || !o || !g(n, o)) && (a.data(this.container, "select2-last-term", n), 
                c === !0 || this.showSearchInput !== !1 && this.opened())) {
                    i = ++this.queryCount;
                    var p = this.getMaximumSelectionSize();
                    if (p >= 1 && (f = this.data(), a.isArray(f) && f.length >= p && y(l.formatSelectionTooBig, "formatSelectionTooBig"))) return void e("<li class='select2-selection-limit'>" + z(l.formatSelectionTooBig, l.element, p) + "</li>");
                    if (j.val().length < l.minimumInputLength) return e(y(l.formatInputTooShort, "formatInputTooShort") ? "<li class='select2-no-results'>" + z(l.formatInputTooShort, l.element, j.val(), l.minimumInputLength) + "</li>" : ""), 
                    void (c && this.showSearch && this.showSearch(!0));
                    if (l.maximumInputLength && j.val().length > l.maximumInputLength) return void e(y(l.formatInputTooLong, "formatInputTooLong") ? "<li class='select2-no-results'>" + z(l.formatInputTooLong, l.element, j.val(), l.maximumInputLength) + "</li>" : "");
                    l.formatSearching && 0 === this.findHighlightableChoices().length && e("<li class='select2-searching'>" + z(l.formatSearching, l.element) + "</li>"), 
                    j.addClass("select2-active"), this.removeHighlight(), h = this.tokenize(), h != b && null != h && j.val(h), 
                    this.resultsPage = 1, l.query({
                        element: l.element,
                        term: j.val(),
                        page: this.resultsPage,
                        context: null,
                        matcher: l.matcher,
                        callback: this.bind(function(f) {
                            var h;
                            if (i == this.queryCount) {
                                if (!this.opened()) return void this.search.removeClass("select2-active");
                                if (f.hasError !== b && y(l.formatAjaxError, "formatAjaxError")) return void e("<li class='select2-ajax-error'>" + z(l.formatAjaxError, l.element, f.jqXHR, f.textStatus, f.errorThrown) + "</li>");
                                if (this.context = f.context === b ? null : f.context, this.opts.createSearchChoice && "" !== j.val() && (h = this.opts.createSearchChoice.call(m, j.val(), f.results), 
                                h !== b && null !== h && m.id(h) !== b && null !== m.id(h) && 0 === a(f.results).filter(function() {
                                    return g(m.id(this), m.id(h));
                                }).length && this.opts.createSearchChoicePosition(f.results, h)), 0 === f.results.length && y(l.formatNoMatches, "formatNoMatches")) return void e("<li class='select2-no-results'>" + z(l.formatNoMatches, l.element, j.val()) + "</li>");
                                k.empty(), m.opts.populateResults.call(this, k, f.results, {
                                    term: j.val(),
                                    page: this.resultsPage,
                                    context: null
                                }), f.more === !0 && y(l.formatLoadMore, "formatLoadMore") && (k.append("<li class='select2-more-results'>" + l.escapeMarkup(z(l.formatLoadMore, l.element, this.resultsPage)) + "</li>"), 
                                window.setTimeout(function() {
                                    m.loadMoreIfNeeded();
                                }, 10)), this.postprocessResults(f, c), d(), this.opts.element.trigger({
                                    type: "select2-loaded",
                                    items: f
                                });
                            }
                        })
                    });
                }
            },
            cancel: function() {
                this.close();
            },
            blur: function() {
                this.opts.selectOnBlur && this.selectHighlighted({
                    noFocus: !0
                }), this.close(), this.container.removeClass("select2-container-active"), this.search[0] === document.activeElement && this.search.blur(), 
                this.clearSearch(), this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");
            },
            focusSearch: function() {
                n(this.search);
            },
            selectHighlighted: function(a) {
                if (this._touchMoved) return void this.clearTouchMoved();
                var b = this.highlight(), c = this.results.find(".select2-highlighted"), d = c.closest(".select2-result").data("select2-data");
                d ? (this.highlight(b), this.onSelect(d, a)) : a && a.noFocus && this.close();
            },
            getPlaceholder: function() {
                var a;
                return this.opts.element.attr("placeholder") || this.opts.element.attr("data-placeholder") || this.opts.element.data("placeholder") || this.opts.placeholder || ((a = this.getPlaceholderOption()) !== b ? a.text() : b);
            },
            getPlaceholderOption: function() {
                if (this.select) {
                    var c = this.select.children("option").first();
                    if (this.opts.placeholderOption !== b) return "first" === this.opts.placeholderOption && c || "function" == typeof this.opts.placeholderOption && this.opts.placeholderOption(this.select);
                    if ("" === a.trim(c.text()) && "" === c.val()) return c;
                }
            },
            initContainerWidth: function() {
                function c() {
                    var c, d, e, f, g, h;
                    if ("off" === this.opts.width) return null;
                    if ("element" === this.opts.width) return 0 === this.opts.element.outerWidth(!1) ? "auto" : this.opts.element.outerWidth(!1) + "px";
                    if ("copy" === this.opts.width || "resolve" === this.opts.width) {
                        if (c = this.opts.element.attr("style"), c !== b) for (d = c.split(";"), f = 0, 
                        g = d.length; f < g; f += 1) if (h = d[f].replace(/\s/g, ""), e = h.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i), 
                        null !== e && e.length >= 1) return e[1];
                        return "resolve" === this.opts.width ? (c = this.opts.element.css("width"), c.indexOf("%") > 0 ? c : 0 === this.opts.element.outerWidth(!1) ? "auto" : this.opts.element.outerWidth(!1) + "px") : null;
                    }
                    return a.isFunction(this.opts.width) ? this.opts.width() : this.opts.width;
                }
                var d = c.call(this);
                null !== d && this.container.css("width", d);
            }
        }), F = D(E, {
            createContainer: function() {
                var b = a(document.createElement("div")).attr({
                    class: "select2-container"
                }).html([ "<a href='javascript:void(0)' class='select2-choice' tabindex='-1'>", "   <span class='select2-chosen'>&#160;</span><abbr class='select2-search-choice-close'></abbr>", "   <span class='select2-arrow' role='presentation'><b role='presentation'></b></span>", "</a>", "<label for='' class='select2-offscreen'></label>", "<input class='select2-focusser select2-offscreen' type='text' aria-haspopup='true' role='button' />", "<div class='select2-drop select2-display-none'>", "   <div class='select2-search'>", "       <label for='' class='select2-offscreen'></label>", "       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input' role='combobox' aria-expanded='true'", "       aria-autocomplete='list' />", "   </div>", "   <ul class='select2-results' role='listbox'>", "   </ul>", "</div>" ].join(""));
                return b;
            },
            enableInterface: function() {
                this.parent.enableInterface.apply(this, arguments) && this.focusser.prop("disabled", !this.isInterfaceEnabled());
            },
            opening: function() {
                var c, d, e;
                this.opts.minimumResultsForSearch >= 0 && this.showSearch(!0), this.parent.opening.apply(this, arguments), 
                this.showSearchInput !== !1 && this.search.val(this.focusser.val()), this.opts.shouldFocusInput(this) && (this.search.focus(), 
                c = this.search.get(0), c.createTextRange ? (d = c.createTextRange(), d.collapse(!1), 
                d.select()) : c.setSelectionRange && (e = this.search.val().length, c.setSelectionRange(e, e))), 
                "" === this.search.val() && this.nextSearchTerm != b && (this.search.val(this.nextSearchTerm), 
                this.search.select()), this.focusser.prop("disabled", !0).val(""), this.updateResults(!0), 
                this.opts.element.trigger(a.Event("select2-open"));
            },
            close: function() {
                this.opened() && (this.parent.close.apply(this, arguments), this.focusser.prop("disabled", !1), 
                this.opts.shouldFocusInput(this) && this.focusser.focus());
            },
            focus: function() {
                this.opened() ? this.close() : (this.focusser.prop("disabled", !1), this.opts.shouldFocusInput(this) && this.focusser.focus());
            },
            isFocused: function() {
                return this.container.hasClass("select2-container-active");
            },
            cancel: function() {
                this.parent.cancel.apply(this, arguments), this.focusser.prop("disabled", !1), this.opts.shouldFocusInput(this) && this.focusser.focus();
            },
            destroy: function() {
                a("label[for='" + this.focusser.attr("id") + "']").attr("for", this.opts.element.attr("id")), 
                this.parent.destroy.apply(this, arguments), C.call(this, "selection", "focusser");
            },
            initContainer: function() {
                var b, d, e = this.container, f = this.dropdown, g = H();
                this.opts.minimumResultsForSearch < 0 ? this.showSearch(!1) : this.showSearch(!0), 
                this.selection = b = e.find(".select2-choice"), this.focusser = e.find(".select2-focusser"), 
                b.find(".select2-chosen").attr("id", "select2-chosen-" + g), this.focusser.attr("aria-labelledby", "select2-chosen-" + g), 
                this.results.attr("id", "select2-results-" + g), this.search.attr("aria-owns", "select2-results-" + g), 
                this.focusser.attr("id", "s2id_autogen" + g), d = a("label[for='" + this.opts.element.attr("id") + "']"), 
                this.opts.element.focus(this.bind(function() {
                    this.focus();
                })), this.focusser.prev().text(d.text()).attr("for", this.focusser.attr("id"));
                var h = this.opts.element.attr("title");
                this.opts.element.attr("title", h || d.text()), this.focusser.attr("tabindex", this.elementTabIndex), 
                this.search.attr("id", this.focusser.attr("id") + "_search"), this.search.prev().text(a("label[for='" + this.focusser.attr("id") + "']").text()).attr("for", this.search.attr("id")), 
                this.search.on("keydown", this.bind(function(a) {
                    if (this.isInterfaceEnabled() && 229 != a.keyCode) {
                        if (a.which === M.PAGE_UP || a.which === M.PAGE_DOWN) return void p(a);
                        switch (a.which) {
                          case M.UP:
                          case M.DOWN:
                            return this.moveHighlight(a.which === M.UP ? -1 : 1), void p(a);

                          case M.ENTER:
                            return this.selectHighlighted(), void p(a);

                          case M.TAB:
                            return void this.selectHighlighted({
                                noFocus: !0
                            });

                          case M.ESC:
                            return this.cancel(a), void p(a);
                        }
                    }
                })), this.search.on("blur", this.bind(function(a) {
                    document.activeElement === this.body.get(0) && window.setTimeout(this.bind(function() {
                        this.opened() && this.search.focus();
                    }), 0);
                })), this.focusser.on("keydown", this.bind(function(a) {
                    if (this.isInterfaceEnabled() && a.which !== M.TAB && !M.isControl(a) && !M.isFunctionKey(a) && a.which !== M.ESC) {
                        if (this.opts.openOnEnter === !1 && a.which === M.ENTER) return void p(a);
                        if (a.which == M.DOWN || a.which == M.UP || a.which == M.ENTER && this.opts.openOnEnter) {
                            if (a.altKey || a.ctrlKey || a.shiftKey || a.metaKey) return;
                            return this.open(), void p(a);
                        }
                        return a.which == M.DELETE || a.which == M.BACKSPACE ? (this.opts.allowClear && this.clear(), 
                        void p(a)) : void 0;
                    }
                })), j(this.focusser), this.focusser.on("keyup-change input", this.bind(function(a) {
                    if (this.opts.minimumResultsForSearch >= 0) {
                        if (a.stopPropagation(), this.opened()) return;
                        this.open();
                    }
                })), b.on("mousedown touchstart", "abbr", this.bind(function(a) {
                    this.isInterfaceEnabled() && (this.clear(), q(a), this.close(), this.selection && this.selection.focus());
                })), b.on("mousedown touchstart", this.bind(function(d) {
                    c(b), this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")), 
                    this.opened() ? this.close() : this.isInterfaceEnabled() && this.open(), p(d);
                })), f.on("mousedown touchstart", this.bind(function() {
                    this.opts.shouldFocusInput(this) && this.search.focus();
                })), b.on("focus", this.bind(function(a) {
                    p(a);
                })), this.focusser.on("focus", this.bind(function() {
                    this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")), 
                    this.container.addClass("select2-container-active");
                })).on("blur", this.bind(function() {
                    this.opened() || (this.container.removeClass("select2-container-active"), this.opts.element.trigger(a.Event("select2-blur")));
                })), this.search.on("focus", this.bind(function() {
                    this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")), 
                    this.container.addClass("select2-container-active");
                })), this.initContainerWidth(), this.opts.element.hide(), this.setPlaceholder();
            },
            clear: function(b) {
                var c = this.selection.data("select2-data");
                if (c) {
                    var d = a.Event("select2-clearing");
                    if (this.opts.element.trigger(d), d.isDefaultPrevented()) return;
                    var e = this.getPlaceholderOption();
                    this.opts.element.val(e ? e.val() : ""), this.selection.find(".select2-chosen").empty(), 
                    this.selection.removeData("select2-data"), this.setPlaceholder(), b !== !1 && (this.opts.element.trigger({
                        type: "select2-removed",
                        val: this.id(c),
                        choice: c
                    }), this.triggerChange({
                        removed: c
                    }));
                }
            },
            initSelection: function() {
                if (this.isPlaceholderOptionSelected()) this.updateSelection(null), this.close(), 
                this.setPlaceholder(); else {
                    var a = this;
                    this.opts.initSelection.call(null, this.opts.element, function(c) {
                        c !== b && null !== c && (a.updateSelection(c), a.close(), a.setPlaceholder(), a.nextSearchTerm = a.opts.nextSearchTerm(c, a.search.val()));
                    });
                }
            },
            isPlaceholderOptionSelected: function() {
                var a;
                return this.getPlaceholder() !== b && ((a = this.getPlaceholderOption()) !== b && a.prop("selected") || "" === this.opts.element.val() || this.opts.element.val() === b || null === this.opts.element.val());
            },
            prepareOpts: function() {
                var b = this.parent.prepareOpts.apply(this, arguments), c = this;
                return "select" === b.element.get(0).tagName.toLowerCase() ? b.initSelection = function(a, b) {
                    var d = a.find("option").filter(function() {
                        return this.selected && !this.disabled;
                    });
                    b(c.optionToData(d));
                } : "data" in b && (b.initSelection = b.initSelection || function(c, d) {
                    var e = c.val(), f = null;
                    b.query({
                        matcher: function(a, c, d) {
                            var h = g(e, b.id(d));
                            return h && (f = d), h;
                        },
                        callback: a.isFunction(d) ? function() {
                            d(f);
                        } : a.noop
                    });
                }), b;
            },
            getPlaceholder: function() {
                return this.select && this.getPlaceholderOption() === b ? b : this.parent.getPlaceholder.apply(this, arguments);
            },
            setPlaceholder: function() {
                var a = this.getPlaceholder();
                if (this.isPlaceholderOptionSelected() && a !== b) {
                    if (this.select && this.getPlaceholderOption() === b) return;
                    this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(a)), this.selection.addClass("select2-default"), 
                    this.container.removeClass("select2-allowclear");
                }
            },
            postprocessResults: function(a, b, c) {
                var d = 0, e = this;
                if (this.findHighlightableChoices().each2(function(a, b) {
                    if (g(e.id(b.data("select2-data")), e.opts.element.val())) return d = a, !1;
                }), c !== !1 && (b === !0 && d >= 0 ? this.highlight(d) : this.highlight(0)), b === !0) {
                    var f = this.opts.minimumResultsForSearch;
                    f >= 0 && this.showSearch(A(a.results) >= f);
                }
            },
            showSearch: function(b) {
                this.showSearchInput !== b && (this.showSearchInput = b, this.dropdown.find(".select2-search").toggleClass("select2-search-hidden", !b), 
                this.dropdown.find(".select2-search").toggleClass("select2-offscreen", !b), a(this.dropdown, this.container).toggleClass("select2-with-searchbox", b));
            },
            onSelect: function(a, b) {
                if (this.triggerSelect(a)) {
                    var c = this.opts.element.val(), d = this.data();
                    this.opts.element.val(this.id(a)), this.updateSelection(a), this.opts.element.trigger({
                        type: "select2-selected",
                        val: this.id(a),
                        choice: a
                    }), this.nextSearchTerm = this.opts.nextSearchTerm(a, this.search.val()), this.close(), 
                    b && b.noFocus || !this.opts.shouldFocusInput(this) || this.focusser.focus(), g(c, this.id(a)) || this.triggerChange({
                        added: a,
                        removed: d
                    });
                }
            },
            updateSelection: function(a) {
                var c, d, e = this.selection.find(".select2-chosen");
                this.selection.data("select2-data", a), e.empty(), null !== a && (c = this.opts.formatSelection(a, e, this.opts.escapeMarkup)), 
                c !== b && e.append(c), d = this.opts.formatSelectionCssClass(a, e), d !== b && e.addClass(d), 
                this.selection.removeClass("select2-default"), this.opts.allowClear && this.getPlaceholder() !== b && this.container.addClass("select2-allowclear");
            },
            val: function() {
                var a, c = !1, d = null, e = this, f = this.data();
                if (0 === arguments.length) return this.opts.element.val();
                if (a = arguments[0], arguments.length > 1 && (c = arguments[1]), this.select) this.select.val(a).find("option").filter(function() {
                    return this.selected;
                }).each2(function(a, b) {
                    return d = e.optionToData(b), !1;
                }), this.updateSelection(d), this.setPlaceholder(), c && this.triggerChange({
                    added: d,
                    removed: f
                }); else {
                    if (!a && 0 !== a) return void this.clear(c);
                    if (this.opts.initSelection === b) throw new Error("cannot call val() if initSelection() is not defined");
                    this.opts.element.val(a), this.opts.initSelection(this.opts.element, function(a) {
                        e.opts.element.val(a ? e.id(a) : ""), e.updateSelection(a), e.setPlaceholder(), 
                        c && e.triggerChange({
                            added: a,
                            removed: f
                        });
                    });
                }
            },
            clearSearch: function() {
                this.search.val(""), this.focusser.val("");
            },
            data: function(a) {
                var c, d = !1;
                return 0 === arguments.length ? (c = this.selection.data("select2-data"), c == b && (c = null), 
                c) : (arguments.length > 1 && (d = arguments[1]), void (a ? (c = this.data(), this.opts.element.val(a ? this.id(a) : ""), 
                this.updateSelection(a), d && this.triggerChange({
                    added: a,
                    removed: c
                })) : this.clear(d)));
            }
        }), G = D(E, {
            createContainer: function() {
                var b = a(document.createElement("div")).attr({
                    class: "select2-container select2-container-multi"
                }).html([ "<ul class='select2-choices'>", "  <li class='select2-search-field'>", "    <label for='' class='select2-offscreen'></label>", "    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>", "  </li>", "</ul>", "<div class='select2-drop select2-drop-multi select2-display-none'>", "   <ul class='select2-results'>", "   </ul>", "</div>" ].join(""));
                return b;
            },
            prepareOpts: function() {
                var b = this.parent.prepareOpts.apply(this, arguments), c = this;
                return "select" === b.element.get(0).tagName.toLowerCase() ? b.initSelection = function(a, b) {
                    var d = [];
                    a.find("option").filter(function() {
                        return this.selected && !this.disabled;
                    }).each2(function(a, b) {
                        d.push(c.optionToData(b));
                    }), b(d);
                } : "data" in b && (b.initSelection = b.initSelection || function(c, d) {
                    var e = h(c.val(), b.separator, b.transformVal), f = [];
                    b.query({
                        matcher: function(c, d, h) {
                            var i = a.grep(e, function(a) {
                                return g(a, b.id(h));
                            }).length;
                            return i && f.push(h), i;
                        },
                        callback: a.isFunction(d) ? function() {
                            for (var a = [], c = 0; c < e.length; c++) for (var h = e[c], i = 0; i < f.length; i++) {
                                var j = f[i];
                                if (g(h, b.id(j))) {
                                    a.push(j), f.splice(i, 1);
                                    break;
                                }
                            }
                            d(a);
                        } : a.noop
                    });
                }), b;
            },
            selectChoice: function(a) {
                var b = this.container.find(".select2-search-choice-focus");
                b.length && a && a[0] == b[0] || (b.length && this.opts.element.trigger("choice-deselected", b), 
                b.removeClass("select2-search-choice-focus"), a && a.length && (this.close(), a.addClass("select2-search-choice-focus"), 
                this.opts.element.trigger("choice-selected", a)));
            },
            destroy: function() {
                a("label[for='" + this.search.attr("id") + "']").attr("for", this.opts.element.attr("id")), 
                this.parent.destroy.apply(this, arguments), C.call(this, "searchContainer", "selection");
            },
            initContainer: function() {
                var b, c = ".select2-choices";
                this.searchContainer = this.container.find(".select2-search-field"), this.selection = b = this.container.find(c);
                var d = this;
                this.selection.on("click", ".select2-container:not(.select2-container-disabled) .select2-search-choice:not(.select2-locked)", function(b) {
                    d.search[0].focus(), d.selectChoice(a(this));
                }), this.search.attr("id", "s2id_autogen" + H()), this.search.prev().text(a("label[for='" + this.opts.element.attr("id") + "']").text()).attr("for", this.search.attr("id")), 
                this.opts.element.focus(this.bind(function() {
                    this.focus();
                })), this.search.on("input paste", this.bind(function() {
                    this.search.attr("placeholder") && 0 == this.search.val().length || this.isInterfaceEnabled() && (this.opened() || this.open());
                })), this.search.attr("tabindex", this.elementTabIndex), this.keydowns = 0, this.search.on("keydown", this.bind(function(a) {
                    if (this.isInterfaceEnabled()) {
                        ++this.keydowns;
                        var c = b.find(".select2-search-choice-focus"), d = c.prev(".select2-search-choice:not(.select2-locked)"), e = c.next(".select2-search-choice:not(.select2-locked)"), f = o(this.search);
                        if (c.length && (a.which == M.LEFT || a.which == M.RIGHT || a.which == M.BACKSPACE || a.which == M.DELETE || a.which == M.ENTER)) {
                            var g = c;
                            return a.which == M.LEFT && d.length ? g = d : a.which == M.RIGHT ? g = e.length ? e : null : a.which === M.BACKSPACE ? this.unselect(c.first()) && (this.search.width(10), 
                            g = d.length ? d : e) : a.which == M.DELETE ? this.unselect(c.first()) && (this.search.width(10), 
                            g = e.length ? e : null) : a.which == M.ENTER && (g = null), this.selectChoice(g), 
                            p(a), void (g && g.length || this.open());
                        }
                        if ((a.which === M.BACKSPACE && 1 == this.keydowns || a.which == M.LEFT) && 0 == f.offset && !f.length) return this.selectChoice(b.find(".select2-search-choice:not(.select2-locked)").last()), 
                        void p(a);
                        if (this.selectChoice(null), this.opened()) switch (a.which) {
                          case M.UP:
                          case M.DOWN:
                            return this.moveHighlight(a.which === M.UP ? -1 : 1), void p(a);

                          case M.ENTER:
                            return this.selectHighlighted(), void p(a);

                          case M.TAB:
                            return this.selectHighlighted({
                                noFocus: !0
                            }), void this.close();

                          case M.ESC:
                            return this.cancel(a), void p(a);
                        }
                        if (a.which !== M.TAB && !M.isControl(a) && !M.isFunctionKey(a) && a.which !== M.BACKSPACE && a.which !== M.ESC) {
                            if (a.which === M.ENTER) {
                                if (this.opts.openOnEnter === !1) return;
                                if (a.altKey || a.ctrlKey || a.shiftKey || a.metaKey) return;
                            }
                            this.open(), a.which !== M.PAGE_UP && a.which !== M.PAGE_DOWN || p(a), a.which === M.ENTER && p(a);
                        }
                    }
                })), this.search.on("keyup", this.bind(function(a) {
                    this.keydowns = 0, this.resizeSearch();
                })), this.search.on("blur", this.bind(function(b) {
                    this.container.removeClass("select2-container-active"), this.search.removeClass("select2-focused"), 
                    this.selectChoice(null), this.opened() || this.clearSearch(), b.stopImmediatePropagation(), 
                    this.opts.element.trigger(a.Event("select2-blur"));
                })), this.container.on("click", c, this.bind(function(b) {
                    this.isInterfaceEnabled() && (a(b.target).closest(".select2-search-choice").length > 0 || (this.selectChoice(null), 
                    this.clearPlaceholder(), this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")), 
                    this.open(), this.focusSearch(), b.preventDefault()));
                })), this.container.on("focus", c, this.bind(function() {
                    this.isInterfaceEnabled() && (this.container.hasClass("select2-container-active") || this.opts.element.trigger(a.Event("select2-focus")), 
                    this.container.addClass("select2-container-active"), this.dropdown.addClass("select2-drop-active"), 
                    this.clearPlaceholder());
                })), this.initContainerWidth(), this.opts.element.hide(), this.clearSearch();
            },
            enableInterface: function() {
                this.parent.enableInterface.apply(this, arguments) && this.search.prop("disabled", !this.isInterfaceEnabled());
            },
            initSelection: function() {
                if ("" === this.opts.element.val() && "" === this.opts.element.text() && (this.updateSelection([]), 
                this.close(), this.clearSearch()), this.select || "" !== this.opts.element.val()) {
                    var a = this;
                    this.opts.initSelection.call(null, this.opts.element, function(c) {
                        c !== b && null !== c && (a.updateSelection(c), a.close(), a.clearSearch());
                    });
                }
            },
            clearSearch: function() {
                var a = this.getPlaceholder(), c = this.getMaxSearchWidth();
                a !== b && 0 === this.getVal().length && this.search.hasClass("select2-focused") === !1 ? (this.search.val(a).addClass("select2-default"), 
                this.search.width(c > 0 ? c : this.container.css("width"))) : this.search.val("").width(10);
            },
            clearPlaceholder: function() {
                this.search.hasClass("select2-default") && this.search.val("").removeClass("select2-default");
            },
            opening: function() {
                this.clearPlaceholder(), this.resizeSearch(), this.parent.opening.apply(this, arguments), 
                this.focusSearch(), "" === this.search.val() && this.nextSearchTerm != b && (this.search.val(this.nextSearchTerm), 
                this.search.select()), this.updateResults(!0), this.opts.shouldFocusInput(this) && this.search.focus(), 
                this.opts.element.trigger(a.Event("select2-open"));
            },
            close: function() {
                this.opened() && this.parent.close.apply(this, arguments);
            },
            focus: function() {
                this.close(), this.search.focus();
            },
            isFocused: function() {
                return this.search.hasClass("select2-focused");
            },
            updateSelection: function(b) {
                var c = [], d = [], f = this;
                a(b).each(function() {
                    e(f.id(this), c) < 0 && (c.push(f.id(this)), d.push(this));
                }), b = d, this.selection.find(".select2-search-choice").remove(), a(b).each(function() {
                    f.addSelectedChoice(this);
                }), f.postprocessResults();
            },
            tokenize: function() {
                var a = this.search.val();
                a = this.opts.tokenizer.call(this, a, this.data(), this.bind(this.onSelect), this.opts), 
                null != a && a != b && (this.search.val(a), a.length > 0 && this.open());
            },
            onSelect: function(a, c) {
                this.triggerSelect(a) && "" !== a.text && (this.addSelectedChoice(a), this.opts.element.trigger({
                    type: "selected",
                    val: this.id(a),
                    choice: a
                }), this.nextSearchTerm = this.opts.nextSearchTerm(a, this.search.val()), this.clearSearch(), 
                this.updateResults(), !this.select && this.opts.closeOnSelect || this.postprocessResults(a, !1, this.opts.closeOnSelect === !0), 
                this.opts.closeOnSelect ? (this.close(), this.search.width(10)) : this.countSelectableResults() > 0 ? (this.search.width(10), 
                this.resizeSearch(), this.getMaximumSelectionSize() > 0 && this.val().length >= this.getMaximumSelectionSize() ? this.updateResults(!0) : this.nextSearchTerm != b && (this.search.val(this.nextSearchTerm), 
                this.updateResults(), this.search.select()), this.positionDropdown()) : (this.close(), 
                this.search.width(10)), this.triggerChange({
                    added: a
                }), c && c.noFocus || this.focusSearch());
            },
            cancel: function() {
                this.close(), this.focusSearch();
            },
            addSelectedChoice: function(c) {
                var d, e, f = !c.locked, g = a("<li class='select2-search-choice'>    <div></div>    <a href='#' class='select2-search-choice-close' tabindex='-1'></a></li>"), h = a("<li class='select2-search-choice select2-locked'><div></div></li>"), i = f ? g : h, j = this.id(c), k = this.getVal();
                d = this.opts.formatSelection(c, i.find("div"), this.opts.escapeMarkup), d != b && i.find("div").replaceWith(a("<div></div>").html(d)), 
                e = this.opts.formatSelectionCssClass(c, i.find("div")), e != b && i.addClass(e), 
                f && i.find(".select2-search-choice-close").on("mousedown", p).on("click dblclick", this.bind(function(b) {
                    this.isInterfaceEnabled() && (this.unselect(a(b.target)), this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus"), 
                    p(b), this.close(), this.focusSearch());
                })).on("focus", this.bind(function() {
                    this.isInterfaceEnabled() && (this.container.addClass("select2-container-active"), 
                    this.dropdown.addClass("select2-drop-active"));
                })), i.data("select2-data", c), i.insertBefore(this.searchContainer), k.push(j), 
                this.setVal(k);
            },
            unselect: function(b) {
                var c, d, f = this.getVal();
                if (b = b.closest(".select2-search-choice"), 0 === b.length) throw "Invalid argument: " + b + ". Must be .select2-search-choice";
                if (c = b.data("select2-data")) {
                    var g = a.Event("select2-removing");
                    if (g.val = this.id(c), g.choice = c, this.opts.element.trigger(g), g.isDefaultPrevented()) return !1;
                    for (;(d = e(this.id(c), f)) >= 0; ) f.splice(d, 1), this.setVal(f), this.select && this.postprocessResults();
                    return b.remove(), this.opts.element.trigger({
                        type: "select2-removed",
                        val: this.id(c),
                        choice: c
                    }), this.triggerChange({
                        removed: c
                    }), !0;
                }
            },
            postprocessResults: function(a, b, c) {
                var d = this.getVal(), f = this.results.find(".select2-result"), g = this.results.find(".select2-result-with-children"), h = this;
                f.each2(function(a, b) {
                    var c = h.id(b.data("select2-data"));
                    e(c, d) >= 0 && (b.addClass("select2-selected"), b.find(".select2-result-selectable").addClass("select2-selected"));
                }), g.each2(function(a, b) {
                    b.is(".select2-result-selectable") || 0 !== b.find(".select2-result-selectable:not(.select2-selected)").length || b.addClass("select2-selected");
                }), this.highlight() == -1 && c !== !1 && this.opts.closeOnSelect === !0 && h.highlight(0), 
                !this.opts.createSearchChoice && !f.filter(".select2-result:not(.select2-selected)").length > 0 && (!a || a && !a.more && 0 === this.results.find(".select2-no-results").length) && y(h.opts.formatNoMatches, "formatNoMatches") && this.results.append("<li class='select2-no-results'>" + z(h.opts.formatNoMatches, h.opts.element, h.search.val()) + "</li>");
            },
            getMaxSearchWidth: function() {
                return this.selection.width() - i(this.search);
            },
            resizeSearch: function() {
                var a, b, c, d, e, f = i(this.search);
                a = r(this.search) + 10, b = this.search.offset().left, c = this.selection.width(), 
                d = this.selection.offset().left, e = c - (b - d) - f, e < a && (e = c - f), e < 40 && (e = c - f), 
                e <= 0 && (e = a), this.search.width(Math.floor(e));
            },
            getVal: function() {
                var a;
                return this.select ? (a = this.select.val(), null === a ? [] : a) : (a = this.opts.element.val(), 
                h(a, this.opts.separator, this.opts.transformVal));
            },
            setVal: function(b) {
                var c;
                this.select ? this.select.val(b) : (c = [], a(b).each(function() {
                    e(this, c) < 0 && c.push(this);
                }), this.opts.element.val(0 === c.length ? "" : c.join(this.opts.separator)));
            },
            buildChangeDetails: function(a, b) {
                for (var b = b.slice(0), a = a.slice(0), c = 0; c < b.length; c++) for (var d = 0; d < a.length; d++) g(this.opts.id(b[c]), this.opts.id(a[d])) && (b.splice(c, 1), 
                c > 0 && c--, a.splice(d, 1), d--);
                return {
                    added: b,
                    removed: a
                };
            },
            val: function(c, d) {
                var e, f = this;
                if (0 === arguments.length) return this.getVal();
                if (e = this.data(), e.length || (e = []), !c && 0 !== c) return this.opts.element.val(""), 
                this.updateSelection([]), this.clearSearch(), void (d && this.triggerChange({
                    added: this.data(),
                    removed: e
                }));
                if (this.setVal(c), this.select) this.opts.initSelection(this.select, this.bind(this.updateSelection)), 
                d && this.triggerChange(this.buildChangeDetails(e, this.data())); else {
                    if (this.opts.initSelection === b) throw new Error("val() cannot be called if initSelection() is not defined");
                    this.opts.initSelection(this.opts.element, function(b) {
                        var c = a.map(b, f.id);
                        f.setVal(c), f.updateSelection(b), f.clearSearch(), d && f.triggerChange(f.buildChangeDetails(e, f.data()));
                    });
                }
                this.clearSearch();
            },
            onSortStart: function() {
                if (this.select) throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");
                this.search.width(0), this.searchContainer.hide();
            },
            onSortEnd: function() {
                var b = [], c = this;
                this.searchContainer.show(), this.searchContainer.appendTo(this.searchContainer.parent()), 
                this.resizeSearch(), this.selection.find(".select2-search-choice").each(function() {
                    b.push(c.opts.id(a(this).data("select2-data")));
                }), this.setVal(b), this.triggerChange();
            },
            data: function(b, c) {
                var d, e, f = this;
                return 0 === arguments.length ? this.selection.children(".select2-search-choice").map(function() {
                    return a(this).data("select2-data");
                }).get() : (e = this.data(), b || (b = []), d = a.map(b, function(a) {
                    return f.opts.id(a);
                }), this.setVal(d), this.updateSelection(b), this.clearSearch(), c && this.triggerChange(this.buildChangeDetails(e, this.data())), 
                void 0);
            }
        }), a.fn.select2 = function() {
            var c, d, f, g, h, i = Array.prototype.slice.call(arguments, 0), j = [ "val", "destroy", "opened", "open", "close", "focus", "isFocused", "container", "dropdown", "onSortStart", "onSortEnd", "enable", "disable", "readonly", "positionDropdown", "data", "search" ], k = [ "opened", "isFocused", "container", "dropdown" ], l = [ "val", "data" ], m = {
                search: "externalSearch"
            };
            return this.each(function() {
                if (0 === i.length || "object" == typeof i[0]) c = 0 === i.length ? {} : a.extend({}, i[0]), 
                c.element = a(this), "select" === c.element.get(0).tagName.toLowerCase() ? h = c.element.prop("multiple") : (h = c.multiple || !1, 
                "tags" in c && (c.multiple = h = !0)), d = h ? new window.Select2.class.multi() : new window.Select2.class.single(), 
                d.init(c); else {
                    if ("string" != typeof i[0]) throw "Invalid arguments to select2 plugin: " + i;
                    if (e(i[0], j) < 0) throw "Unknown method: " + i[0];
                    if (g = b, d = a(this).data("select2"), d === b) return;
                    if (f = i[0], "container" === f ? g = d.container : "dropdown" === f ? g = d.dropdown : (m[f] && (f = m[f]), 
                    g = d[f].apply(d, i.slice(1))), e(i[0], k) >= 0 || e(i[0], l) >= 0 && 1 == i.length) return !1;
                }
            }), g === b ? this : g;
        }, a.fn.select2.defaults = {
            width: "copy",
            loadMorePadding: 0,
            closeOnSelect: !0,
            openOnEnter: !0,
            containerCss: {},
            dropdownCss: {},
            containerCssClass: "",
            dropdownCssClass: "",
            formatResult: function(a, b, c, d) {
                var e = [];
                return t(this.text(a), c.term, e, d), e.join("");
            },
            transformVal: function(b) {
                return a.trim(b);
            },
            formatSelection: function(a, c, d) {
                return a ? d(this.text(a)) : b;
            },
            sortResults: function(a, b, c) {
                return a;
            },
            formatResultCssClass: function(a) {
                return a.css;
            },
            formatSelectionCssClass: function(a, c) {
                return b;
            },
            minimumResultsForSearch: 0,
            minimumInputLength: 0,
            maximumInputLength: null,
            maximumSelectionSize: 0,
            id: function(a) {
                return a == b ? null : a.id;
            },
            text: function(b) {
                return b && this.data && this.data.text ? a.isFunction(this.data.text) ? this.data.text(b) : b[this.data.text] : b.text;
            },
            matcher: function(a, b) {
                return d("" + b).toUpperCase().indexOf(d("" + a).toUpperCase()) >= 0;
            },
            separator: ",",
            tokenSeparators: [],
            tokenizer: B,
            escapeMarkup: u,
            blurOnChange: !1,
            selectOnBlur: !1,
            adaptContainerCssClass: function(a) {
                return a;
            },
            adaptDropdownCssClass: function(a) {
                return null;
            },
            nextSearchTerm: function(a, c) {
                return b;
            },
            searchInputPlaceholder: "",
            createSearchChoicePosition: "top",
            shouldFocusInput: function(a) {
                var b = "ontouchstart" in window || navigator.msMaxTouchPoints > 0;
                return !b || !(a.opts.minimumResultsForSearch < 0);
            }
        }, a.fn.select2.locales = [], a.fn.select2.locales.en = {
            formatMatches: function(a) {
                return 1 === a ? "One result is available, press enter to select it." : a + " results are available, use up and down arrow keys to navigate.";
            },
            formatNoMatches: function() {
                return "No matches found";
            },
            formatAjaxError: function(a, b, c) {
                return "Loading failed";
            },
            formatInputTooShort: function(a, b) {
                var c = b - a.length;
                return "Please enter " + c + " or more character" + (1 == c ? "" : "s");
            },
            formatInputTooLong: function(a, b) {
                var c = a.length - b;
                return "Please delete " + c + " character" + (1 == c ? "" : "s");
            },
            formatSelectionTooBig: function(a) {
                return "You can only select " + a + " item" + (1 == a ? "" : "s");
            },
            formatLoadMore: function(a) {
                return "Loading more results…";
            },
            formatSearching: function() {
                return "Searching…";
            }
        }, a.extend(a.fn.select2.defaults, a.fn.select2.locales.en), a.fn.select2.ajaxDefaults = {
            transport: a.ajax,
            params: {
                type: "GET",
                cache: !1,
                dataType: "json"
            }
        }, window.Select2 = {
            query: {
                ajax: v,
                local: w,
                tags: x
            },
            util: {
                debounce: l,
                markMatch: t,
                escapeMarkup: u,
                stripDiacritics: d
            },
            class: {
                abstract: E,
                single: F,
                multi: G
            }
        };
    }
}(jQuery), function(a) {
    "use strict";
    a.fn.select2.locales["zh-CN"] = {
        formatNoMatches: function() {
            return "没有找到匹配项";
        },
        formatInputTooShort: function(a, b) {
            var c = b - a.length;
            return "请再输入" + c + "个字符";
        },
        formatInputTooLong: function(a, b) {
            var c = a.length - b;
            return "请删掉" + c + "个字符";
        },
        formatSelectionTooBig: function(a) {
            return "你只能选择最多" + a + "项";
        },
        formatLoadMore: function(a) {
            return "加载结果中…";
        },
        formatSearching: function() {
            return "搜索中…";
        }
    }, a.extend(a.fn.select2.defaults, a.fn.select2.locales["zh-CN"]);
}(jQuery), function(a) {
    a.fn.splitter = function(b) {
        return b = b || {}, this.each(function() {
            function c(b) {
                b.target == this && (g = g || r.clone(!1).insertAfter(o), m._initPos = r.position(), 
                m._initPos[l.moving] -= r[l.sizing](), g.addClass(l.ghostClass).css("position", "absolute").css("z-index", "250").css("-webkit-user-select", "none").width(r.width()).height(r.height()).css(l.moving, m._initPos[l.moving]), 
                n.css("-webkit-user-select", "none"), o._posSplit = b[l.eventPos], a(document).bind("mousemove", d).bind("mouseup", e));
            }
            function d(a) {
                if (g && o) {
                    var b = a[l.eventPos] - o._posSplit;
                    g.css(l.moving, m._initPos[l.moving] + b);
                }
            }
            function e(b) {
                var c = g.position();
                g.remove(), g = null, n.css("-webkit-user-select", "text"), a(document).unbind("mousemove", d).unbind("mouseup", e);
                var h = ((c[l.moving] - m.offset()[l.moving]) / m[l.sizing]() * 100).toFixed(1);
                f(h, m._initPos[l.moving] > c[l.moving], !1), m._initPos = 0;
            }
            function f(b, c, d) {
                if (!j && void 0 != b) {
                    j = !0, h && h > 10 && h < 90 && (i = h), h = b;
                    var e = r[l.sizing]() + 2 * parseInt(r.css("border-" + l.moving + "-width")), f = m[l.sizing]();
                    if (l.closeableto != b) {
                        var g = Math.max(parseInt(f / 100 * b), l.minAsize);
                        l.maxAsize && (g = Math.min(g, l.maxAsize));
                    } else var g = parseInt(f / 100 * b, 0);
                    l.maxBsize && f - g > l.maxBsize && (g = f - l.maxBsize), l.minBsize && f - g < l.minBsize && (g = f - l.minBsize);
                    var k = Math.max(0, g - e), t = Math.max(0, f - g);
                    if (f -= e, d) return o.show().css(l.sizing, k + "px"), p.show().css(l.sizing, t + "px"), 
                    s.show(), a.browser.msie || (n.trigger("resize"), q && q.trigger("resize")), j = !1, 
                    !0;
                    if (c) {
                        var u = {};
                        u[l.sizing] = k + "px", o.show().animate(u, l.animSpeed, function() {
                            s.fadeIn("fast"), a(this)[l.sizing]() < 2 && (this.style.display = "none", p.stop(!0, !0), 
                            p[l.sizing](f + "px"));
                        });
                        var v = {};
                        v[l.sizing] = t + "px", p.show().animate(v, l.animSpeed, function() {
                            s.fadeIn("fast"), a(this)[l.sizing]() < 2 && (this.style.display = "none", o.stop(!0, !0), 
                            o[l.sizing](f + "px"));
                        });
                    } else {
                        var u = {};
                        u[l.sizing] = t + "px", p.show().animate(u, l.animSpeed, function() {
                            s.fadeIn("fast"), a(this)[l.sizing]() < 2 && (this.style.display = "none", o.stop(!0, !0), 
                            o[l.sizing](f + "px"));
                        });
                        var u = {};
                        u[l.sizing] = k + "px", o.show().animate(u, l.animSpeed, function() {
                            s.fadeIn("fast"), a(this)[l.sizing]() < 2 && (this.style.display = "none", p.stop(!0, !0), 
                            p[l.sizing](f + "px"));
                        });
                    }
                    m.queue(function() {
                        setTimeout(function() {
                            m.dequeue(), j = !1, n.trigger("resize"), q && q.trigger("resize");
                        }, l.animSpeed + 5);
                    });
                }
            }
            var g, h, i, j = !1, k = b.splitHorizontal ? "h" : "v", l = a.extend({
                minAsize: 0,
                maxAsize: 0,
                minBsize: 0,
                maxBsize: 0,
                ghostClass: "working",
                invertClass: "invert",
                animSpeed: 250
            }, {
                v: {
                    moving: "left",
                    sizing: "width",
                    eventPos: "pageX",
                    splitbarClass: "splitbarV",
                    buttonClass: "splitbuttonV",
                    cursor: "e-resize"
                },
                h: {
                    moving: "top",
                    sizing: "height",
                    eventPos: "pageY",
                    splitbarClass: "splitbarH",
                    buttonClass: "splitbuttonH",
                    cursor: "n-resize"
                }
            }[k], b), m = a(this), n = m.children(), o = b.A, p = b.B, q = b.slave, r = a("<div><span></span></div>");
            if (o.after(r), r.attr({
                class: l.splitbarClass,
                unselectable: "on"
            }).css({
                cursor: l.cursor,
                "user-select": "none",
                "-webkit-user-select": "none",
                "-khtml-user-select": "none",
                "-moz-user-select": "none"
            }).bind("mousedown", c), void 0 != l.closeableto) {
                var s = a("<div></div>").css("cursor", "pointer");
                r.append(s), s.attr({
                    class: l.buttonClass,
                    unselectable: "on"
                }), s.hover(function() {
                    a(this).addClass(l.ghostClass);
                }, function() {
                    a(this).removeClass(l.ghostClass);
                }), s.mousedown(function(a) {
                    if (a.target == this) return s.toggleClass(l.invertClass).hide(), f(h == l.closeableto ? i : l.closeableto, !0), 
                    !1;
                });
            }
            var t = ((r.position()[l.moving] - m.offset()[l.moving]) / m[l.sizing]() * 100).toFixed(1);
            f(t, !1, !0), m.bind("resize", function(a, b) {
                a.target == this && f(h, !1, !0);
            }), a(window).bind("resize", function() {
                f(h, !1, !0);
            });
        });
    };
}(jQuery), function(a, b) {
    function c(b, c, d, e) {
        var f = {
            data: e || 0 === e || e === !1 ? e : c ? c.data : {},
            _wrap: c ? c._wrap : null,
            tmpl: null,
            parent: c || null,
            nodes: [],
            calls: k,
            nest: l,
            wrap: m,
            html: n,
            update: o
        };
        return b && a.extend(f, b, {
            nodes: [],
            parent: c
        }), d && (f.tmpl = d, f._ctnt = f._ctnt || f.tmpl(a, f), f.key = ++w, (y.length ? u : t)[w] = f), 
        f;
    }
    function d(b, c, f) {
        var g, h = f ? a.map(f, function(a) {
            return "string" == typeof a ? b.key ? a.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g, "$1 " + r + '="' + b.key + '" $2') : a : d(a, b, a._ctnt);
        }) : b;
        return c ? h : (h = h.join(""), h.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/, function(b, c, d, f) {
            g = a(d).get(), j(g), c && (g = e(c).concat(g)), f && (g = g.concat(e(f)));
        }), g ? g : e(h));
    }
    function e(b) {
        var c = document.createElement("div");
        return c.innerHTML = b, a.makeArray(c.childNodes);
    }
    function f(b) {
        return new Function("jQuery", "$item", "var $=jQuery,call,__=[],$data=$item.data;with($data){__.push('" + a.trim(b).replace(/([\\'])/g, "\\$1").replace(/[\r\t\n]/g, " ").replace(/\$\{([^\}]*)\}/g, "{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g, function(b, c, d, e, f, g, i) {
            var j, k, l, m = a.tmpl.tag[d];
            if (!m) throw "Unknown template tag: " + d;
            return j = m._default || [], g && !/\w$/.test(f) && (f += g, g = ""), f ? (f = h(f), 
            i = i ? "," + h(i) + ")" : g ? ")" : "", k = g ? f.indexOf(".") > -1 ? f + h(g) : "(" + f + ").call($item" + i : f, 
            l = g ? k : "(typeof(" + f + ")==='function'?(" + f + ").call($item):(" + f + "))") : l = k = j.$1 || "null", 
            e = h(e), "');" + m[c ? "close" : "open"].split("$notnull_1").join(f ? "typeof(" + f + ")!=='undefined' && (" + f + ")!=null" : "true").split("$1a").join(l).split("$1").join(k).split("$2").join(e || j.$2 || "") + "__.push('";
        }) + "');}return __;");
    }
    function g(b, c) {
        b._wrap = d(b, !0, a.isArray(c) ? c : [ s.test(c) ? c : a(c).html() ]).join("");
    }
    function h(a) {
        return a ? a.replace(/\\'/g, "'").replace(/\\\\/g, "\\") : null;
    }
    function i(a) {
        var b = document.createElement("div");
        return b.appendChild(a.cloneNode(!0)), b.innerHTML;
    }
    function j(b) {
        function d(b) {
            function d(a) {
                a += j, g = k[a] = k[a] || c(g, t[g.parent.key + j] || g.parent);
            }
            var e, f, g, h, i = b;
            if (h = b.getAttribute(r)) {
                for (;i.parentNode && 1 === (i = i.parentNode).nodeType && !(e = i.getAttribute(r)); ) ;
                e !== h && (i = i.parentNode ? 11 === i.nodeType ? 0 : i.getAttribute(r) || 0 : 0, 
                (g = t[h]) || (g = u[h], g = c(g, t[i] || u[i]), g.key = ++w, t[w] = g), x && d(h)), 
                b.removeAttribute(r);
            } else x && (g = a.data(b, "tmplItem")) && (d(g.key), t[g.key] = g, i = a.data(b.parentNode, "tmplItem"), 
            i = i ? i.key : 0);
            if (g) {
                for (f = g; f && f.key != i; ) f.nodes.push(b), f = f.parent;
                delete g._ctnt, delete g._wrap, a.data(b, "tmplItem", g);
            }
        }
        var e, f, g, h, i, j = "_" + x, k = {};
        for (g = 0, h = b.length; g < h; g++) if (1 === (e = b[g]).nodeType) {
            for (f = e.getElementsByTagName("*"), i = f.length - 1; i >= 0; i--) d(f[i]);
            d(e);
        }
    }
    function k(a, b, c, d) {
        return a ? void y.push({
            _: a,
            tmpl: b,
            item: this,
            data: c,
            options: d
        }) : y.pop();
    }
    function l(b, c, d) {
        return a.tmpl(a.template(b), c, d, this);
    }
    function m(b, c) {
        var d = b.options || {};
        return d.wrapped = c, a.tmpl(a.template(b.tmpl), b.data, d, b.item);
    }
    function n(b, c) {
        var d = this._wrap;
        return a.map(a(a.isArray(d) ? d.join("") : d).filter(b || "*"), function(a) {
            return c ? a.innerText || a.textContent : a.outerHTML || i(a);
        });
    }
    function o() {
        var b = this.nodes;
        a.tmpl(null, null, null, this).insertBefore(b[0]), a(b).remove();
    }
    var p, q = a.fn.domManip, r = "_tmplitem", s = /^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /, t = {}, u = {}, v = {
        key: 0,
        data: {}
    }, w = 0, x = 0, y = [];
    a.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(b, c) {
        a.fn[b] = function(d) {
            var e, f, g, h, i = [], j = a(d), k = 1 === this.length && this[0].parentNode;
            if (p = t || {}, k && 11 === k.nodeType && 1 === k.childNodes.length && 1 === j.length) j[c](this[0]), 
            i = this; else {
                for (f = 0, g = j.length; f < g; f++) x = f, e = (f > 0 ? this.clone(!0) : this).get(), 
                a(j[f])[c](e), i = i.concat(e);
                x = 0, i = this.pushStack(i, b, j.selector);
            }
            return h = p, p = null, a.tmpl.complete(h), i;
        };
    }), a.fn.extend({
        tmpl: function(b, c, d) {
            return a.tmpl(this[0], b, c, d);
        },
        tmplItem: function() {
            return a.tmplItem(this[0]);
        },
        template: function(b) {
            return a.template(b, this[0]);
        },
        domManip: function(b, c, d, e) {
            if (b[0] && a.isArray(b[0])) {
                for (var f, g = a.makeArray(arguments), h = b[0], i = h.length, j = 0; j < i && !(f = a.data(h[j++], "tmplItem")); ) ;
                f && x && (g[2] = function(b) {
                    a.tmpl.afterManip(this, b, d);
                }), q.apply(this, g);
            } else q.apply(this, arguments);
            return x = 0, p || a.tmpl.complete(t), this;
        }
    }), a.extend({
        tmpl: function(b, e, f, h) {
            var i, j = !h;
            if (j) h = v, b = a.template[b] || a.template(null, b), u = {}; else if (!b) return b = h.tmpl, 
            t[h.key] = h, h.nodes = [], h.wrapped && g(h, h.wrapped), a(d(h, null, h.tmpl(a, h)));
            return b ? ("function" == typeof e && (e = e.call(h || {})), f && f.wrapped && g(f, f.wrapped), 
            i = a.isArray(e) ? a.map(e, function(a) {
                return a ? c(f, h, b, a) : null;
            }) : [ c(f, h, b, e) ], j ? a(d(h, null, i)) : i) : [];
        },
        tmplItem: function(b) {
            var c;
            for (b instanceof a && (b = b[0]); b && 1 === b.nodeType && !(c = a.data(b, "tmplItem")) && (b = b.parentNode); ) ;
            return c || v;
        },
        template: function(b, c) {
            return c ? ("string" == typeof c ? c = f(c) : c instanceof a && (c = c[0] || {}), 
            c.nodeType && (c = a.data(c, "tmpl") || a.data(c, "tmpl", f(c.innerHTML))), "string" == typeof b ? a.template[b] = c : c) : b ? "string" != typeof b ? a.template(null, b) : a.template[b] || a.template(null, s.test(b) ? b : a(b)) : null;
        },
        encode: function(a) {
            return ("" + a).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;");
        }
    }), a.extend(a.tmpl, {
        tag: {
            tmpl: {
                _default: {
                    $2: "null"
                },
                open: "if($notnull_1){__=__.concat($item.nest($1,$2));}"
            },
            wrap: {
                _default: {
                    $2: "null"
                },
                open: "$item.calls(__,$1,$2);__=[];",
                close: "call=$item.calls();__=call._.concat($item.wrap(call,__));"
            },
            each: {
                _default: {
                    $2: "$index, $value"
                },
                open: "if($notnull_1){$.each($1a,function($2){with(this){",
                close: "}});}"
            },
            if: {
                open: "if(($notnull_1) && $1a){",
                close: "}"
            },
            else: {
                _default: {
                    $1: "true"
                },
                open: "}else if(($notnull_1) && $1a){"
            },
            html: {
                open: "if($notnull_1){__.push($1a);}"
            },
            "=": {
                _default: {
                    $1: "$data"
                },
                open: "if($notnull_1){__.push($.encode($1a));}"
            },
            "!": {
                open: ""
            }
        },
        complete: function(a) {
            t = {};
        },
        afterManip: function(b, c, d) {
            var e = 11 === c.nodeType ? a.makeArray(c.childNodes) : 1 === c.nodeType ? [ c ] : [];
            d.call(b, c), j(e), x++;
        }
    });
}(jQuery), function(a) {
    a.extend(a.fn, {
        validate: function(b) {
            if (!this.length) return void (b && b.debug && window.console && console.warn("nothing selected, can't validate, returning nothing"));
            var c = a.data(this[0], "validator");
            return c ? c : (c = new a.validator(b, this[0]), a.data(this[0], "validator", c), 
            c.settings.onsubmit && (this.find("input, button").filter(".cancel").click(function() {
                c.cancelSubmit = !0;
            }), c.settings.submitHandler && this.find("input, button").filter(":submit").click(function() {
                c.submitButton = this;
            }), this.submit(function(b) {
                function d() {
                    if (c.settings.submitHandler) {
                        if (c.submitButton) var b = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(c.submitButton.value).appendTo(c.currentForm);
                        return c.settings.submitHandler.call(c, c.currentForm), c.submitButton && b.remove(), 
                        !1;
                    }
                    return !0;
                }
                return c.settings.debug && b.preventDefault(), c.cancelSubmit ? (c.cancelSubmit = !1, 
                d()) : c.form() ? c.pendingRequest ? (c.formSubmitted = !0, !1) : d() : (c.focusInvalid(), 
                !1);
            })), c);
        },
        valid: function() {
            if (a(this[0]).is("form")) return this.validate().form();
            var b = !0, c = a(this[0].form).validate();
            return this.each(function() {
                b &= c.element(this);
            }), b;
        },
        removeAttrs: function(b) {
            var c = {}, d = this;
            return a.each(b.split(/\s/), function(a, b) {
                c[b] = d.attr(b), d.removeAttr(b);
            }), c;
        },
        rules: function(b, c) {
            var d = this[0];
            if (b) {
                var e = a.data(d.form, "validator").settings, f = e.rules, g = a.validator.staticRules(d);
                switch (b) {
                  case "add":
                    a.extend(g, a.validator.normalizeRule(c)), f[d.name] = g, c.messages && (e.messages[d.name] = a.extend(e.messages[d.name], c.messages));
                    break;

                  case "remove":
                    if (!c) return delete f[d.name], g;
                    var h = {};
                    return a.each(c.split(/\s/), function(a, b) {
                        h[b] = g[b], delete g[b];
                    }), h;
                }
            }
            var i = a.validator.normalizeRules(a.extend({}, a.validator.metadataRules(d), a.validator.classRules(d), a.validator.attributeRules(d), a.validator.staticRules(d)), d);
            if (i.required) {
                var j = i.required;
                delete i.required, i = a.extend({
                    required: j
                }, i);
            }
            return i;
        }
    }), a.extend(a.expr[":"], {
        blank: function(b) {
            return !a.trim("" + b.value);
        },
        filled: function(b) {
            return !!a.trim("" + b.value);
        },
        unchecked: function(a) {
            return !a.checked;
        }
    }), a.validator = function(b, c) {
        this.settings = a.extend(!0, {}, a.validator.defaults, b), this.currentForm = c, 
        this.init();
    }, a.validator.format = function(b, c) {
        return 1 == arguments.length ? function() {
            var c = a.makeArray(arguments);
            return c.unshift(b), a.validator.format.apply(this, c);
        } : (arguments.length > 2 && c.constructor != Array && (c = a.makeArray(arguments).slice(1)), 
        c.constructor != Array && (c = [ c ]), a.each(c, function(a, c) {
            b = b.replace(new RegExp("\\{" + a + "\\}", "g"), c);
        }), b);
    }, a.extend(a.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            validClass: "valid",
            errorElement: "label",
            focusInvalid: !0,
            errorContainer: a([]),
            errorLabelContainer: a([]),
            onsubmit: !0,
            ignore: [],
            ignoreTitle: !1,
            onfocusin: function(a) {
                this.lastActive = a, this.settings.focusCleanup && !this.blockFocusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass), 
                this.addWrapper(this.errorsFor(a)).hide());
            },
            onfocusout: function(a) {
                this.checkable(a) || !(a.name in this.submitted) && this.optional(a) || this.element(a);
            },
            onkeyup: function(a) {
                (a.name in this.submitted || a == this.lastElement) && this.element(a);
            },
            onclick: function(a) {
                a.name in this.submitted ? this.element(a) : a.parentNode.name in this.submitted && this.element(a.parentNode);
            },
            highlight: function(b, c, d) {
                a(b).addClass(c).removeClass(d);
            },
            unhighlight: function(b, c, d) {
                a(b).removeClass(c).addClass(d);
            }
        },
        setDefaults: function(b) {
            a.extend(a.validator.defaults, b);
        },
        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date (ISO).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            creditcard: "Please enter a valid credit card number.",
            equalTo: "Please enter the same value again.",
            accept: "Please enter a value with a valid extension.",
            maxlength: a.validator.format("Please enter no more than {0} characters."),
            minlength: a.validator.format("Please enter at least {0} characters."),
            rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."),
            range: a.validator.format("Please enter a value between {0} and {1}."),
            max: a.validator.format("Please enter a value less than or equal to {0}."),
            min: a.validator.format("Please enter a value greater than or equal to {0}.")
        },
        autoCreateRanges: !1,
        prototype: {
            init: function() {
                function b(b) {
                    var c = a.data(this[0].form, "validator"), d = "on" + b.type.replace(/^validate/, "");
                    c.settings[d] && c.settings[d].call(c, this[0]);
                }
                this.labelContainer = a(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm), 
                this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer), 
                this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, 
                this.invalid = {}, this.reset();
                var c = this.groups = {};
                a.each(this.settings.groups, function(b, d) {
                    a.each(d.split(/\s/), function(a, d) {
                        c[d] = b;
                    });
                });
                var d = this.settings.rules;
                a.each(d, function(b, c) {
                    d[b] = a.validator.normalizeRule(c);
                }), a(this.currentForm).validateDelegate(":text, :password, :file, select, textarea", "focusin focusout keyup", b).validateDelegate(":radio, :checkbox, select, option", "click", b), 
                this.settings.invalidHandler && a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);
            },
            form: function() {
                return this.checkForm(), a.extend(this.submitted, this.errorMap), this.invalid = a.extend({}, this.errorMap), 
                this.valid() || a(this.currentForm).triggerHandler("invalid-form", [ this ]), this.showErrors(), 
                this.valid();
            },
            checkForm: function() {
                this.prepareForm();
                for (var a = 0, b = this.currentElements = this.elements(); b[a]; a++) this.check(b[a]);
                return this.valid();
            },
            element: function(b) {
                b = this.clean(b), this.lastElement = b, this.prepareElement(b), this.currentElements = a(b);
                var c = this.check(b);
                return c ? delete this.invalid[b.name] : this.invalid[b.name] = !0, this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), 
                this.showErrors(), c;
            },
            showErrors: function(b) {
                if (b) {
                    a.extend(this.errorMap, b), this.errorList = [];
                    for (var c in b) this.errorList.push({
                        message: b[c],
                        element: this.findByName(c)[0]
                    });
                    this.successList = a.grep(this.successList, function(a) {
                        return !(a.name in b);
                    });
                }
                this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors();
            },
            resetForm: function() {
                a.fn.resetForm && a(this.currentForm).resetForm(), this.submitted = {}, this.prepareForm(), 
                this.hideErrors(), this.elements().removeClass(this.settings.errorClass);
            },
            numberOfInvalids: function() {
                return this.objectLength(this.invalid);
            },
            objectLength: function(a) {
                var b = 0;
                for (var c in a) b++;
                return b;
            },
            hideErrors: function() {
                this.addWrapper(this.toHide).hide();
            },
            valid: function() {
                return 0 == this.size();
            },
            size: function() {
                return this.errorList.length;
            },
            focusInvalid: function() {
                if (this.settings.focusInvalid) try {
                    a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin");
                } catch (b) {}
            },
            findLastActive: function() {
                var b = this.lastActive;
                return b && 1 == a.grep(this.errorList, function(a) {
                    return a.element.name == b.name;
                }).length && b;
            },
            elements: function() {
                var b = this, c = {};
                return a([]).add(this.currentForm.elements).filter(":input").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function() {
                    return !this.name && b.settings.debug && window.console && console.error("%o has no name assigned", this), 
                    !(this.name in c || !b.objectLength(a(this).rules())) && (c[this.name] = !0, !0);
                });
            },
            clean: function(b) {
                return a(b)[0];
            },
            errors: function() {
                return a(this.settings.errorElement + "." + this.settings.errorClass, this.errorContext);
            },
            reset: function() {
                this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = a([]), 
                this.toHide = a([]), this.currentElements = a([]);
            },
            prepareForm: function() {
                this.reset(), this.toHide = this.errors().add(this.containers);
            },
            prepareElement: function(a) {
                this.reset(), this.toHide = this.errorsFor(a);
            },
            check: function(b) {
                b = this.clean(b), this.checkable(b) && (b = this.findByName(b.name).not(this.settings.ignore)[0]);
                var c = a(b).rules(), d = !1;
                for (var e in c) {
                    var f = {
                        method: e,
                        parameters: c[e]
                    };
                    try {
                        var g = a.validator.methods[e].call(this, b.value.replace(/\r/g, ""), b, f.parameters);
                        if ("dependency-mismatch" == g) {
                            d = !0;
                            continue;
                        }
                        if (d = !1, "pending" == g) return void (this.toHide = this.toHide.not(this.errorsFor(b)));
                        if (!g) return this.formatAndAdd(b, f), !1;
                    } catch (h) {
                        throw this.settings.debug && window.console && console.log("exception occured when checking element " + b.id + ", check the '" + f.method + "' method", h), 
                        h;
                    }
                }
                if (!d) return this.objectLength(c) && this.successList.push(b), !0;
            },
            customMetaMessage: function(b, c) {
                if (a.metadata) {
                    var d = this.settings.meta ? a(b).metadata()[this.settings.meta] : a(b).metadata();
                    return d && d.messages && d.messages[c];
                }
            },
            customMessage: function(a, b) {
                var c = this.settings.messages[a];
                return c && (c.constructor == String ? c : c[b]);
            },
            findDefined: function() {
                for (var a = 0; a < arguments.length; a++) if (void 0 !== arguments[a]) return arguments[a];
            },
            defaultMessage: function(b, c) {
                return this.findDefined(this.customMessage(b.name, c), this.customMetaMessage(b, c), !this.settings.ignoreTitle && b.title || void 0, a.validator.messages[c], "<strong>Warning: No message defined for " + b.name + "</strong>");
            },
            formatAndAdd: function(a, b) {
                var c = this.defaultMessage(a, b.method), d = /\$?\{(\d+)\}/g;
                "function" == typeof c ? c = c.call(this, b.parameters, a) : d.test(c) && (c = jQuery.format(c.replace(d, "{$1}"), b.parameters)), 
                this.errorList.push({
                    message: c,
                    element: a
                }), this.errorMap[a.name] = c, this.submitted[a.name] = c;
            },
            addWrapper: function(a) {
                return this.settings.wrapper && (a = a.add(a.parent(this.settings.wrapper))), a;
            },
            defaultShowErrors: function() {
                for (var a = 0; this.errorList[a]; a++) {
                    var b = this.errorList[a];
                    this.settings.highlight && this.settings.highlight.call(this, b.element, this.settings.errorClass, this.settings.validClass), 
                    this.showLabel(b.element, b.message);
                }
                if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (var a = 0; this.successList[a]; a++) this.showLabel(this.successList[a]);
                if (this.settings.unhighlight) for (var a = 0, c = this.validElements(); c[a]; a++) this.settings.unhighlight.call(this, c[a], this.settings.errorClass, this.settings.validClass);
                this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show();
            },
            validElements: function() {
                return this.currentElements.not(this.invalidElements());
            },
            invalidElements: function() {
                return a(this.errorList).map(function() {
                    return this.element;
                });
            },
            showLabel: function(b, c) {
                var d = this.errorsFor(b);
                d.length ? (d.removeClass().addClass(this.settings.errorClass), d.attr("generated") && d.html(c)) : (d = a("<" + this.settings.errorElement + "/>").attr({
                    for: this.idOrName(b),
                    generated: !0
                }).addClass(this.settings.errorClass).html(c || ""), this.settings.wrapper && (d = d.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), 
                this.labelContainer.append(d).length || (this.settings.errorPlacement ? this.settings.errorPlacement(d, a(b)) : d.insertAfter(b))), 
                !c && this.settings.success && (d.text(""), "string" == typeof this.settings.success ? d.addClass(this.settings.success) : this.settings.success(d)), 
                this.toShow = this.toShow.add(d);
            },
            errorsFor: function(b) {
                var c = this.idOrName(b);
                return this.errors().filter(function() {
                    return a(this).attr("for") == c;
                });
            },
            idOrName: function(a) {
                return this.groups[a.name] || (this.checkable(a) ? a.name : a.id || a.name);
            },
            checkable: function(a) {
                return /radio|checkbox/i.test(a.type);
            },
            findByName: function(b) {
                var c = this.currentForm;
                return a(document.getElementsByName(b)).map(function(a, d) {
                    return d.form == c && d.name == b && d || null;
                });
            },
            getLength: function(b, c) {
                switch (c.nodeName.toLowerCase()) {
                  case "select":
                    return a("option:selected", c).length;

                  case "input":
                    if (this.checkable(c)) return this.findByName(c.name).filter(":checked").length;
                }
                return b.length;
            },
            depend: function(a, b) {
                return !this.dependTypes[typeof a] || this.dependTypes[typeof a](a, b);
            },
            dependTypes: {
                boolean: function(a, b) {
                    return a;
                },
                string: function(b, c) {
                    return !!a(b, c.form).length;
                },
                function: function(a, b) {
                    return a(b);
                }
            },
            optional: function(b) {
                return !a.validator.methods.required.call(this, a.trim(b.value), b) && "dependency-mismatch";
            },
            startRequest: function(a) {
                this.pending[a.name] || (this.pendingRequest++, this.pending[a.name] = !0);
            },
            stopRequest: function(b, c) {
                this.pendingRequest--, this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[b.name], 
                c && 0 == this.pendingRequest && this.formSubmitted && this.form() ? (a(this.currentForm).submit(), 
                this.formSubmitted = !1) : !c && 0 == this.pendingRequest && this.formSubmitted && (a(this.currentForm).triggerHandler("invalid-form", [ this ]), 
                this.formSubmitted = !1);
            },
            previousValue: function(b) {
                return a.data(b, "previousValue") || a.data(b, "previousValue", {
                    old: null,
                    valid: !0,
                    message: this.defaultMessage(b, "remote")
                });
            }
        },
        classRuleSettings: {
            required: {
                required: !0
            },
            email: {
                email: !0
            },
            url: {
                url: !0
            },
            date: {
                date: !0
            },
            dateISO: {
                dateISO: !0
            },
            dateDE: {
                dateDE: !0
            },
            number: {
                number: !0
            },
            numberDE: {
                numberDE: !0
            },
            digits: {
                digits: !0
            },
            creditcard: {
                creditcard: !0
            }
        },
        addClassRules: function(b, c) {
            b.constructor == String ? this.classRuleSettings[b] = c : a.extend(this.classRuleSettings, b);
        },
        classRules: function(b) {
            var c = {}, d = a(b).attr("class");
            return d && a.each(d.split(" "), function() {
                this in a.validator.classRuleSettings && a.extend(c, a.validator.classRuleSettings[this]);
            }), c;
        },
        attributeRules: function(b) {
            var c = {}, d = a(b);
            for (var e in a.validator.methods) {
                var f = d.attr(e);
                f && (c[e] = f);
            }
            return c.maxlength && /-1|2147483647|524288/.test(c.maxlength) && delete c.maxlength, 
            c;
        },
        metadataRules: function(b) {
            if (!a.metadata) return {};
            var c = a.data(b.form, "validator").settings.meta;
            return c ? a(b).metadata()[c] : a(b).metadata();
        },
        staticRules: function(b) {
            var c = {}, d = a.data(b.form, "validator");
            return d.settings.rules && (c = a.validator.normalizeRule(d.settings.rules[b.name]) || {}), 
            c;
        },
        normalizeRules: function(b, c) {
            return a.each(b, function(d, e) {
                if (e === !1) return void delete b[d];
                if (e.param || e.depends) {
                    var f = !0;
                    switch (typeof e.depends) {
                      case "string":
                        f = !!a(e.depends, c.form).length;
                        break;

                      case "function":
                        f = e.depends.call(c, c);
                    }
                    f ? b[d] = void 0 === e.param || e.param : delete b[d];
                }
            }), a.each(b, function(d, e) {
                b[d] = a.isFunction(e) ? e(c) : e;
            }), a.each([ "minlength", "maxlength", "min", "max" ], function() {
                b[this] && (b[this] = Number(b[this]));
            }), a.each([ "rangelength", "range" ], function() {
                b[this] && (b[this] = [ Number(b[this][0]), Number(b[this][1]) ]);
            }), a.validator.autoCreateRanges && (b.min && b.max && (b.range = [ b.min, b.max ], 
            delete b.min, delete b.max), b.minlength && b.maxlength && (b.rangelength = [ b.minlength, b.maxlength ], 
            delete b.minlength, delete b.maxlength)), b.messages && delete b.messages, b;
        },
        normalizeRule: function(b) {
            if ("string" == typeof b) {
                var c = {};
                a.each(b.split(/\s/), function() {
                    c[this] = !0;
                }), b = c;
            }
            return b;
        },
        addMethod: function(b, c, d) {
            a.validator.methods[b] = c, a.validator.messages[b] = void 0 != d ? d : a.validator.messages[b], 
            c.length < 3 && a.validator.addClassRules(b, a.validator.normalizeRule(b));
        },
        methods: {
            required: function(b, c, d) {
                if (!this.depend(d, c)) return "dependency-mismatch";
                switch (c.nodeName.toLowerCase()) {
                  case "select":
                    var e = a(c).val();
                    return e && e.length > 0;

                  case "input":
                    if (this.checkable(c)) return this.getLength(b, c) > 0;

                  default:
                    return a.trim(b).length > 0;
                }
            },
            remote: function(b, c, d) {
                if (this.optional(c)) return "dependency-mismatch";
                var e = this.previousValue(c);
                if (this.settings.messages[c.name] || (this.settings.messages[c.name] = {}), e.originalMessage = this.settings.messages[c.name].remote, 
                this.settings.messages[c.name].remote = e.message, d = "string" == typeof d && {
                    url: d
                } || d, this.pending[c.name]) return "pending";
                if (e.old === b) return e.valid;
                e.old = b;
                var f = this;
                this.startRequest(c);
                var g = {};
                return g[c.name] = b, a.ajax(a.extend(!0, {
                    url: d,
                    mode: "abort",
                    port: "validate" + c.name,
                    dataType: "json",
                    data: g,
                    success: function(d) {
                        f.settings.messages[c.name].remote = e.originalMessage;
                        var g = d === !0;
                        if (g) {
                            var h = f.formSubmitted;
                            f.prepareElement(c), f.formSubmitted = h, f.successList.push(c), f.showErrors();
                        } else {
                            var i = {}, j = d || f.defaultMessage(c, "remote");
                            i[c.name] = e.message = a.isFunction(j) ? j(b) : j, f.showErrors(i);
                        }
                        e.valid = g, f.stopRequest(c, g);
                    }
                }, d)), "pending";
            },
            minlength: function(b, c, d) {
                return this.optional(c) || this.getLength(a.trim(b), c) >= d;
            },
            maxlength: function(b, c, d) {
                return this.optional(c) || this.getLength(a.trim(b), c) <= d;
            },
            rangelength: function(b, c, d) {
                var e = this.getLength(a.trim(b), c);
                return this.optional(c) || e >= d[0] && e <= d[1];
            },
            min: function(a, b, c) {
                return this.optional(b) || a >= c;
            },
            max: function(a, b, c) {
                return this.optional(b) || a <= c;
            },
            range: function(a, b, c) {
                return this.optional(b) || a >= c[0] && a <= c[1];
            },
            email: function(a, b) {
                return this.optional(b) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(a);
            },
            url: function(a, b) {
                return this.optional(b) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a);
            },
            date: function(a, b) {
                return this.optional(b) || !/Invalid|NaN/.test(new Date(a));
            },
            dateISO: function(a, b) {
                return this.optional(b) || /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(a);
            },
            number: function(a, b) {
                return this.optional(b) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(a);
            },
            digits: function(a, b) {
                return this.optional(b) || /^\d+$/.test(a);
            },
            creditcard: function(a, b) {
                if (this.optional(b)) return "dependency-mismatch";
                if (/[^0-9-]+/.test(a)) return !1;
                var c = 0, d = 0, e = !1;
                a = a.replace(/\D/g, "");
                for (var f = a.length - 1; f >= 0; f--) {
                    var g = a.charAt(f), d = parseInt(g, 10);
                    e && (d *= 2) > 9 && (d -= 9), c += d, e = !e;
                }
                return c % 10 == 0;
            },
            accept: function(a, b, c) {
                return c = "string" == typeof c ? c.replace(/,/g, "|") : "png|jpe?g|gif", this.optional(b) || a.match(new RegExp(".(" + c + ")$", "i"));
            },
            equalTo: function(b, c, d) {
                var e = a(d).unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
                    a(c).valid();
                });
                return b == e.val();
            }
        }
    }), a.format = a.validator.format;
}(jQuery), function(a) {
    var b = {};
    if (a.ajaxPrefilter) a.ajaxPrefilter(function(a, c, d) {
        var e = a.port;
        "abort" == a.mode && (b[e] && b[e].abort(), b[e] = d);
    }); else {
        var c = a.ajax;
        a.ajax = function(d) {
            var e = ("mode" in d ? d : a.ajaxSettings).mode, f = ("port" in d ? d : a.ajaxSettings).port;
            return "abort" == e ? (b[f] && b[f].abort(), b[f] = c.apply(this, arguments)) : c.apply(this, arguments);
        };
    }
}(jQuery), function(a) {
    jQuery.event.special.focusin || jQuery.event.special.focusout || !document.addEventListener || a.each({
        focus: "focusin",
        blur: "focusout"
    }, function(b, c) {
        function d(b) {
            return b = a.event.fix(b), b.type = c, a.event.handle.call(this, b);
        }
        a.event.special[c] = {
            setup: function() {
                this.addEventListener(b, d, !0);
            },
            teardown: function() {
                this.removeEventListener(b, d, !0);
            },
            handler: function(b) {
                return arguments[0] = a.event.fix(b), arguments[0].type = c, a.event.handle.apply(this, arguments);
            }
        };
    }), a.extend(a.fn, {
        validateDelegate: function(b, c, d) {
            return this.bind(c, function(c) {
                var e = a(c.target);
                if (e.is(b)) return d.apply(e, arguments);
            });
        }
    });
}(jQuery), function(a) {
    a.extend(a.fn, {
        validate: function(b) {
            if (!this.length) return void (b && b.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing."));
            var c = a.data(this[0], "validator");
            return c ? c : (this.attr("novalidate", "novalidate"), c = new a.validator(b, this[0]), 
            a.data(this[0], "validator", c), c.settings.onsubmit && (this.validateDelegate(":submit", "click", function(b) {
                c.settings.submitHandler && (c.submitButton = b.target), a(b.target).hasClass("cancel") && (c.cancelSubmit = !0), 
                void 0 !== a(b.target).attr("formnovalidate") && (c.cancelSubmit = !0);
            }), this.submit(function(b) {
                function d() {
                    var d;
                    return !c.settings.submitHandler || (c.submitButton && (d = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)), 
                    c.settings.submitHandler.call(c, c.currentForm, b), c.submitButton && d.remove(), 
                    !1);
                }
                return c.settings.debug && b.preventDefault(), c.cancelSubmit ? (c.cancelSubmit = !1, 
                d()) : c.form() ? c.pendingRequest ? (c.formSubmitted = !0, !1) : d() : (c.focusInvalid(), 
                !1);
            })), c);
        },
        valid: function() {
            if (a(this[0]).is("form")) return this.validate().form();
            var b = !0, c = a(this[0].form).validate();
            return this.each(function() {
                b = b && c.element(this);
            }), b;
        },
        removeAttrs: function(b) {
            var c = {}, d = this;
            return a.each(b.split(/\s/), function(a, b) {
                c[b] = d.attr(b), d.removeAttr(b);
            }), c;
        },
        rules: function(b, c) {
            var d = this[0];
            if (b) {
                var e = a.data(d.form, "validator").settings, f = e.rules, g = a.validator.staticRules(d);
                switch (b) {
                  case "add":
                    a.extend(g, a.validator.normalizeRule(c)), delete g.messages, f[d.name] = g, c.messages && (e.messages[d.name] = a.extend(e.messages[d.name], c.messages));
                    break;

                  case "remove":
                    if (!c) return delete f[d.name], g;
                    var h = {};
                    return a.each(c.split(/\s/), function(a, b) {
                        h[b] = g[b], delete g[b];
                    }), h;
                }
            }
            var i = a.validator.normalizeRules(a.extend({}, a.validator.metadataRules(d), a.validator.classRules(d), a.validator.attributeRules(d), a.validator.dataRules(d), a.validator.staticRules(d)), d);
            if (i.required) {
                var j = i.required;
                delete i.required, i = a.extend({
                    required: j
                }, i);
            }
            return i;
        }
    }), a.extend(a.expr[":"], {
        blank: function(b) {
            return !a.trim("" + a(b).val());
        },
        filled: function(b) {
            return !!a.trim("" + a(b).val());
        },
        unchecked: function(b) {
            return !a(b).prop("checked");
        }
    }), a.validator = function(b, c) {
        this.settings = a.extend(!0, {}, a.validator.defaults, b), this.currentForm = c, 
        this.init();
    }, a.validator.format = function(b, c) {
        return 1 === arguments.length ? function() {
            var c = a.makeArray(arguments);
            return c.unshift(b), a.validator.format.apply(this, c);
        } : (arguments.length > 2 && c.constructor !== Array && (c = a.makeArray(arguments).slice(1)), 
        c.constructor !== Array && (c = [ c ]), a.each(c, function(a, c) {
            b = b.replace(new RegExp("\\{" + a + "\\}", "g"), function() {
                return c;
            });
        }), b);
    }, a.extend(a.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            validClass: "valid",
            errorElement: "label",
            focusInvalid: !0,
            errorContainer: a([]),
            errorLabelContainer: a([]),
            onsubmit: !0,
            ignore: ":hidden",
            ignoreTitle: !1,
            onfocusin: function(a, b) {
                this.lastActive = a, this.settings.focusCleanup && !this.blockFocusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass), 
                this.addWrapper(this.errorsFor(a)).hide());
            },
            onfocusout: function(a, b) {
                this.checkable(a) || !(a.name in this.submitted) && this.optional(a) || this.element(a);
            },
            onkeyup: function(a, b) {
                9 === b.which && "" === this.elementValue(a) || (a.name in this.submitted || a === this.lastElement) && this.element(a);
            },
            onclick: function(a, b) {
                a.name in this.submitted ? this.element(a) : a.parentNode.name in this.submitted && this.element(a.parentNode);
            },
            highlight: function(b, c, d) {
                "radio" === b.type ? this.findByName(b.name).addClass(c).removeClass(d) : a(b).addClass(c).removeClass(d);
            },
            unhighlight: function(b, c, d) {
                "radio" === b.type ? this.findByName(b.name).removeClass(c).addClass(d) : a(b).removeClass(c).addClass(d);
            }
        },
        setDefaults: function(b) {
            a.extend(a.validator.defaults, b);
        },
        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date (ISO).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            creditcard: "Please enter a valid credit card number.",
            equalTo: "Please enter the same value again.",
            maxlength: a.validator.format("Please enter no more than {0} characters."),
            minlength: a.validator.format("Please enter at least {0} characters."),
            rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."),
            range: a.validator.format("Please enter a value between {0} and {1}."),
            max: a.validator.format("Please enter a value less than or equal to {0}."),
            min: a.validator.format("Please enter a value greater than or equal to {0}.")
        },
        autoCreateRanges: !1,
        prototype: {
            init: function() {
                function b(b) {
                    var c = a.data(this[0].form, "validator"), d = "on" + b.type.replace(/^validate/, "");
                    c.settings[d] && c.settings[d].call(c, this[0], b);
                }
                this.labelContainer = a(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm), 
                this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer), 
                this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, 
                this.invalid = {}, this.reset();
                var c = this.groups = {};
                a.each(this.settings.groups, function(b, d) {
                    "string" == typeof d && (d = d.split(/\s/)), a.each(d, function(a, d) {
                        c[d] = b;
                    });
                });
                var d = this.settings.rules;
                a.each(d, function(b, c) {
                    d[b] = a.validator.normalizeRule(c);
                }), a(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'] ", "focusin focusout keyup", b).validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", b), 
                this.settings.invalidHandler && a(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);
            },
            form: function() {
                return this.checkForm(), a.extend(this.submitted, this.errorMap), this.invalid = a.extend({}, this.errorMap), 
                this.valid() || a(this.currentForm).triggerHandler("invalid-form", [ this ]), this.showErrors(), 
                this.valid();
            },
            checkForm: function() {
                this.prepareForm();
                for (var a = 0, b = this.currentElements = this.elements(); b[a]; a++) this.check(b[a]);
                return this.valid();
            },
            element: function(b) {
                b = this.validationTargetFor(this.clean(b)), this.lastElement = b, this.prepareElement(b), 
                this.currentElements = a(b);
                var c = this.check(b) !== !1;
                return c ? delete this.invalid[b.name] : this.invalid[b.name] = !0, this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), 
                this.showErrors(), c;
            },
            showErrors: function(b) {
                if (b) {
                    a.extend(this.errorMap, b), this.errorList = [];
                    for (var c in b) this.errorList.push({
                        message: b[c],
                        element: this.findByName(c)[0]
                    });
                    this.successList = a.grep(this.successList, function(a) {
                        return !(a.name in b);
                    });
                }
                this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors();
            },
            resetForm: function() {
                a.fn.resetForm && a(this.currentForm).resetForm(), this.submitted = {}, this.lastElement = null, 
                this.prepareForm(), this.hideErrors(), this.elements().removeClass(this.settings.errorClass).removeData("previousValue");
            },
            numberOfInvalids: function() {
                return this.objectLength(this.invalid);
            },
            objectLength: function(a) {
                var b = 0;
                for (var c in a) b++;
                return b;
            },
            hideErrors: function() {
                this.addWrapper(this.toHide).hide();
            },
            valid: function() {
                return 0 === this.size();
            },
            size: function() {
                return this.errorList.length;
            },
            focusInvalid: function() {
                if (this.settings.focusInvalid) try {
                    a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin");
                } catch (b) {}
            },
            findLastActive: function() {
                var b = this.lastActive;
                return b && 1 === a.grep(this.errorList, function(a) {
                    return a.element.name === b.name;
                }).length && b;
            },
            elements: function() {
                var b = this, c = {};
                return a(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function() {
                    return !this.name && b.settings.debug && window.console && console.error("%o has no name assigned", this), 
                    !(this.name in c || !b.objectLength(a(this).rules())) && (c[this.name] = !0, !0);
                });
            },
            clean: function(b) {
                return a(b)[0];
            },
            errors: function() {
                var b = this.settings.errorClass.replace(" ", ".");
                return a(this.settings.errorElement + "." + b, this.errorContext);
            },
            reset: function() {
                this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = a([]), 
                this.toHide = a([]), this.currentElements = a([]);
            },
            prepareForm: function() {
                this.reset(), this.toHide = this.errors().add(this.containers);
            },
            prepareElement: function(a) {
                this.reset(), this.toHide = this.errorsFor(a);
            },
            elementValue: function(b) {
                var c = a(b).attr("type"), d = a(b).val();
                return "radio" === c || "checkbox" === c ? a("input[name='" + a(b).attr("name") + "']:checked").val() : "string" == typeof d ? d.replace(/\r/g, "") : d;
            },
            check: function(b) {
                b = this.validationTargetFor(this.clean(b));
                var c, d = a(b).rules(), e = !1, f = this.elementValue(b);
                for (var g in d) {
                    var h = {
                        method: g,
                        parameters: d[g]
                    };
                    try {
                        if (a.validator.methods[g] && (c = a.validator.methods[g].call(this, f, b, h.parameters)), 
                        "dependency-mismatch" === c) {
                            e = !0;
                            continue;
                        }
                        if (e = !1, "pending" === c) return void (this.toHide = this.toHide.not(this.errorsFor(b)));
                        if (!c) return this.formatAndAdd(b, h), !1;
                    } catch (i) {
                        throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + b.id + ", check the '" + h.method + "' method.", i), 
                        i;
                    }
                }
                if (!e) return this.objectLength(d) && this.successList.push(b), !0;
            },
            customDataMessage: function(b, c) {
                return a(b).data("msg-" + c.toLowerCase()) || b.attributes && a(b).attr("data-msg-" + c.toLowerCase());
            },
            customMessage: function(a, b) {
                var c = this.settings.messages[a];
                return c && (c.constructor === String ? c : c[b]);
            },
            customMetaMessage: function(b, c) {
                if (a.metadata) {
                    var d = this.settings.meta ? a(b).metadata()[this.settings.meta] : a(b).metadata();
                    return d && d.messages && d.messages[c];
                }
            },
            findDefined: function() {
                for (var a = 0; a < arguments.length; a++) if (void 0 !== arguments[a]) return arguments[a];
            },
            defaultMessage: function(b, c) {
                return this.findDefined(this.customMetaMessage(b, c), this.customMessage(b.name, c), this.customDataMessage(b, c), !this.settings.ignoreTitle && b.title || void 0, a.validator.messages[c], "<strong>Warning: No message defined for " + b.name + "</strong>");
            },
            formatAndAdd: function(b, c) {
                var d = this.defaultMessage(b, c.method), e = /\$?\{(\d+)\}/g;
                "function" == typeof d ? d = d.call(this, c.parameters, b) : e.test(d) && (d = a.validator.format(d.replace(e, "{$1}"), c.parameters)), 
                this.errorList.push({
                    message: d,
                    element: b
                }), this.errorMap[b.name] = d, this.submitted[b.name] = d;
            },
            addWrapper: function(a) {
                return this.settings.wrapper && (a = a.add(a.parent(this.settings.wrapper))), a;
            },
            defaultShowErrors: function() {
                var a, b;
                for (a = 0; this.errorList[a]; a++) {
                    var c = this.errorList[a];
                    this.settings.highlight && this.settings.highlight.call(this, c.element, this.settings.errorClass, this.settings.validClass), 
                    this.showLabel(c.element, c.message);
                }
                if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (a = 0; this.successList[a]; a++) this.showLabel(this.successList[a]);
                if (this.settings.unhighlight) for (a = 0, b = this.validElements(); b[a]; a++) this.settings.unhighlight.call(this, b[a], this.settings.errorClass, this.settings.validClass);
                this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show();
            },
            validElements: function() {
                return this.currentElements.not(this.invalidElements());
            },
            invalidElements: function() {
                return a(this.errorList).map(function() {
                    return this.element;
                });
            },
            showLabel: function(b, c) {
                var d = this.errorsFor(b);
                d.length ? (d.removeClass(this.settings.validClass).addClass(this.settings.errorClass), 
                d.html(c)) : (d = a("<" + this.settings.errorElement + ">").attr("for", this.idOrName(b)).addClass(this.settings.errorClass).html(c || ""), 
                this.settings.wrapper && (d = d.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), 
                this.labelContainer.append(d).length || (this.settings.errorPlacement ? this.settings.errorPlacement(d, a(b)) : d.insertAfter(b))), 
                !c && this.settings.success && (d.text(""), "string" == typeof this.settings.success ? d.addClass(this.settings.success) : this.settings.success(d, b)), 
                this.toShow = this.toShow.add(d);
            },
            errorsFor: function(b) {
                var c = this.idOrName(b);
                return this.errors().filter(function() {
                    return a(this).attr("for") === c;
                });
            },
            idOrName: function(a) {
                return this.groups[a.name] || (this.checkable(a) ? a.name : a.id || a.name);
            },
            validationTargetFor: function(a) {
                return this.checkable(a) && (a = this.findByName(a.name).not(this.settings.ignore)[0]), 
                a;
            },
            checkable: function(a) {
                return /radio|checkbox/i.test(a.type);
            },
            findByName: function(b) {
                return a(this.currentForm).find("[name='" + b + "']");
            },
            getLength: function(b, c) {
                switch (c.nodeName.toLowerCase()) {
                  case "select":
                    return a("option:selected", c).length;

                  case "input":
                    if (this.checkable(c)) return this.findByName(c.name).filter(":checked").length;
                }
                return b.length;
            },
            depend: function(a, b) {
                return !this.dependTypes[typeof a] || this.dependTypes[typeof a](a, b);
            },
            dependTypes: {
                boolean: function(a, b) {
                    return a;
                },
                string: function(b, c) {
                    return !!a(b, c.form).length;
                },
                function: function(a, b) {
                    return a(b);
                }
            },
            optional: function(b) {
                var c = this.elementValue(b);
                return !a.validator.methods.required.call(this, c, b) && "dependency-mismatch";
            },
            startRequest: function(a) {
                this.pending[a.name] || (this.pendingRequest++, this.pending[a.name] = !0);
            },
            stopRequest: function(b, c) {
                this.pendingRequest--, this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[b.name], 
                c && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (a(this.currentForm).submit(), 
                this.formSubmitted = !1) : !c && 0 === this.pendingRequest && this.formSubmitted && (a(this.currentForm).triggerHandler("invalid-form", [ this ]), 
                this.formSubmitted = !1);
            },
            previousValue: function(b) {
                return a.data(b, "previousValue") || a.data(b, "previousValue", {
                    old: null,
                    valid: !0,
                    message: this.defaultMessage(b, "remote")
                });
            }
        },
        classRuleSettings: {
            required: {
                required: !0
            },
            email: {
                email: !0
            },
            url: {
                url: !0
            },
            date: {
                date: !0
            },
            dateISO: {
                dateISO: !0
            },
            number: {
                number: !0
            },
            digits: {
                digits: !0
            },
            creditcard: {
                creditcard: !0
            }
        },
        addClassRules: function(b, c) {
            b.constructor === String ? this.classRuleSettings[b] = c : a.extend(this.classRuleSettings, b);
        },
        classRules: function(b) {
            var c = {}, d = a(b).attr("class");
            return d && a.each(d.split(" "), function() {
                this in a.validator.classRuleSettings && a.extend(c, a.validator.classRuleSettings[this]);
            }), c;
        },
        attributeRules: function(b) {
            var c = {}, d = a(b), e = d[0].getAttribute("type");
            for (var f in a.validator.methods) {
                var g;
                "required" === f ? (g = d.get(0).getAttribute(f), "" === g && (g = !0), g = !!g) : g = d.attr(f), 
                /min|max/.test(f) && (null === e || /number|range|text/.test(e)) && (g = Number(g)), 
                g ? c[f] = g : e === f && "range" !== e && (c[f] = !0);
            }
            return c.maxlength && /-1|2147483647|524288/.test(c.maxlength) && delete c.maxlength, 
            c;
        },
        dataRules: function(b) {
            var c, d, e = {}, f = a(b);
            for (c in a.validator.methods) d = f.data("rule-" + c.toLowerCase()), void 0 !== d && (e[c] = d);
            return e;
        },
        metadataRules: function(b) {
            if (!a.metadata) return {};
            var c = a.data(b.form, "validator").settings.meta;
            return c ? a(b).metadata()[c] : a(b).metadata();
        },
        staticRules: function(b) {
            var c = {}, d = a.data(b.form, "validator");
            return d.settings.rules && (c = a.validator.normalizeRule(d.settings.rules[b.name]) || {}), 
            c;
        },
        normalizeRules: function(b, c) {
            return a.each(b, function(d, e) {
                if (e === !1) return void delete b[d];
                if (e.param || e.depends) {
                    var f = !0;
                    switch (typeof e.depends) {
                      case "string":
                        f = !!a(e.depends, c.form).length;
                        break;

                      case "function":
                        f = e.depends.call(c, c);
                    }
                    f ? b[d] = void 0 === e.param || e.param : delete b[d];
                }
            }), a.each(b, function(d, e) {
                b[d] = a.isFunction(e) ? e(c) : e;
            }), a.each([ "minlength", "maxlength" ], function() {
                b[this] && (b[this] = Number(b[this]));
            }), a.each([ "rangelength", "range" ], function() {
                var c;
                b[this] && (a.isArray(b[this]) ? b[this] = [ Number(b[this][0]), Number(b[this][1]) ] : "string" == typeof b[this] && (c = b[this].split(/[\s,]+/), 
                b[this] = [ Number(c[0]), Number(c[1]) ]));
            }), a.validator.autoCreateRanges && (b.min && b.max && (b.range = [ b.min, b.max ], 
            delete b.min, delete b.max), b.minlength && b.maxlength && (b.rangelength = [ b.minlength, b.maxlength ], 
            delete b.minlength, delete b.maxlength)), b;
        },
        normalizeRule: function(b) {
            if ("string" == typeof b) {
                var c = {};
                a.each(b.split(/\s/), function() {
                    c[this] = !0;
                }), b = c;
            }
            return b;
        },
        addMethod: function(b, c, d) {
            a.validator.methods[b] = c, a.validator.messages[b] = void 0 !== d ? d : a.validator.messages[b], 
            c.length < 3 && a.validator.addClassRules(b, a.validator.normalizeRule(b));
        },
        methods: {
            required: function(b, c, d) {
                if (!this.depend(d, c)) return "dependency-mismatch";
                if ("select" === c.nodeName.toLowerCase()) {
                    var e = a(c).val();
                    return e && e.length > 0;
                }
                return this.checkable(c) ? this.getLength(b, c) > 0 : a.trim(b).length > 0;
            },
            email: function(a, b) {
                return this.optional(b) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(a);
            },
            url: function(a, b) {
                return this.optional(b) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a);
            },
            date: function(a, b) {
                return this.optional(b) || !/Invalid|NaN/.test(new Date(a).toString());
            },
            dateISO: function(a, b) {
                return this.optional(b) || /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(a);
            },
            number: function(a, b) {
                return this.optional(b) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a);
            },
            digits: function(a, b) {
                return this.optional(b) || /^\d+$/.test(a);
            },
            creditcard: function(a, b) {
                if (this.optional(b)) return "dependency-mismatch";
                if (/[^0-9 \-]+/.test(a)) return !1;
                var c = 0, d = 0, e = !1;
                a = a.replace(/\D/g, "");
                for (var f = a.length - 1; f >= 0; f--) {
                    var g = a.charAt(f);
                    d = parseInt(g, 10), e && (d *= 2) > 9 && (d -= 9), c += d, e = !e;
                }
                return c % 10 === 0;
            },
            minlength: function(b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(a.trim(b), c);
                return this.optional(c) || e >= d;
            },
            maxlength: function(b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(a.trim(b), c);
                return this.optional(c) || e <= d;
            },
            rangelength: function(b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(a.trim(b), c);
                return this.optional(c) || e >= d[0] && e <= d[1];
            },
            min: function(a, b, c) {
                return this.optional(b) || a >= c;
            },
            max: function(a, b, c) {
                return this.optional(b) || a <= c;
            },
            range: function(a, b, c) {
                return this.optional(b) || a >= c[0] && a <= c[1];
            },
            equalTo: function(b, c, d) {
                var e = a(d);
                return this.settings.onfocusout && e.unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
                    a(c).valid();
                }), b === e.val();
            },
            remote: function(b, c, d) {
                if (this.optional(c)) return "dependency-mismatch";
                var e = this.previousValue(c);
                if (this.settings.messages[c.name] || (this.settings.messages[c.name] = {}), e.originalMessage = this.settings.messages[c.name].remote, 
                this.settings.messages[c.name].remote = e.message, d = "string" == typeof d && {
                    url: d
                } || d, e.old === b) return e.valid;
                e.old = b;
                var f = this;
                this.startRequest(c);
                var g = {};
                return g[c.name] = b, a.ajax(a.extend(!0, {
                    url: d,
                    mode: "abort",
                    port: "validate" + c.name,
                    dataType: "json",
                    data: g,
                    success: function(d) {
                        f.settings.messages[c.name].remote = e.originalMessage;
                        var g = d === !0 || "true" === d;
                        if (g) {
                            var h = f.formSubmitted;
                            f.prepareElement(c), f.formSubmitted = h, f.successList.push(c), delete f.invalid[c.name], 
                            f.showErrors();
                        } else {
                            var i = {}, j = d || f.defaultMessage(c, "remote");
                            i[c.name] = e.message = a.isFunction(j) ? j(b) : j, f.invalid[c.name] = !0, f.showErrors(i);
                        }
                        e.valid = g, f.stopRequest(c, g);
                    }
                }, d)), "pending";
            }
        }
    }), a.format = a.validator.format;
}(jQuery), function(a) {
    var b = {};
    if (a.ajaxPrefilter) a.ajaxPrefilter(function(a, c, d) {
        var e = a.port;
        "abort" === a.mode && (b[e] && b[e].abort(), b[e] = d);
    }); else {
        var c = a.ajax;
        a.ajax = function(d) {
            var e = ("mode" in d ? d : a.ajaxSettings).mode, f = ("port" in d ? d : a.ajaxSettings).port;
            return "abort" === e ? (b[f] && b[f].abort(), b[f] = c.apply(this, arguments), b[f]) : c.apply(this, arguments);
        };
    }
}(jQuery), function(a) {
    a.extend(a.fn, {
        validateDelegate: function(b, c, d) {
            return this.bind(c, function(c) {
                var e = a(c.target);
                if (e.is(b)) return d.apply(e, arguments);
            });
        }
    });
}(jQuery), function(a) {
    function b(a, b, c) {
        a.rules[b] = c, a.message && (a.messages[b] = a.message);
    }
    function c(a) {
        return a.replace(/^\s+|\s+$/g, "").split(/\s*,\s*/g);
    }
    function d(a) {
        return a.replace(/([!"#$%&'()*+,./:;<=>?@\[\\\]^`{|}~])/g, "\\$1");
    }
    function e(a) {
        return a.substr(0, a.lastIndexOf(".") + 1);
    }
    function f(a, b) {
        return 0 === a.indexOf("*.") && (a = a.replace("*.", b)), a;
    }
    function g(b, c) {
        var e = a(this).find("[data-valmsg-for='" + d(c[0].name) + "']"), f = e.attr("data-valmsg-replace"), g = f ? a.parseJSON(f) !== !1 : null;
        e.removeClass("field-validation-valid").addClass("field-validation-error"), b.data("unobtrusiveContainer", e), 
        g ? (e.empty(), b.removeClass("input-validation-error").appendTo(e)) : b.hide();
    }
    function h(b, c) {
        var d = a(this).find("[data-valmsg-summary=true]"), e = d.find("ul");
        e && e.length && c.errorList.length && (e.empty(), d.addClass("validation-summary-errors").removeClass("validation-summary-valid"), 
        a.each(c.errorList, function() {
            a("<li />").html(this.message).appendTo(e);
        }));
    }
    function i(b) {
        var c = b.data("unobtrusiveContainer"), d = c.attr("data-valmsg-replace"), e = d ? a.parseJSON(d) : null;
        c && (c.addClass("field-validation-valid").removeClass("field-validation-error"), 
        b.removeData("unobtrusiveContainer"), e && c.empty());
    }
    function j(b) {
        var c = a(this);
        c.data("validator").resetForm(), c.find(".validation-summary-errors").addClass("validation-summary-valid").removeClass("validation-summary-errors"), 
        c.find(".field-validation-error").addClass("field-validation-valid").removeClass("field-validation-error").removeData("unobtrusiveContainer").find(">*").removeData("unobtrusiveContainer");
    }
    function k(b) {
        var c = a(b), d = c.data(n), e = a.proxy(j, b);
        return d || (d = {
            options: {
                errorClass: "input-validation-error",
                errorElement: "span",
                errorPlacement: a.proxy(g, b),
                invalidHandler: a.proxy(h, b),
                messages: {},
                rules: {},
                success: a.proxy(i, b)
            },
            attachValidation: function() {
                c.unbind("reset." + n, e).bind("reset." + n, e).validate(this.options);
            },
            validate: function() {
                return c.validate(), c.valid();
            }
        }, c.data(n, d)), d;
    }
    var l, m = a.validator, n = "unobtrusiveValidation";
    m.unobtrusive = {
        adapters: [],
        parseElement: function(b, c) {
            var d, e, f, g = a(b), h = g.parents("form")[0];
            h && (d = k(h), d.options.rules[b.name] = e = {}, d.options.messages[b.name] = f = {}, 
            a.each(this.adapters, function() {
                var c = "data-val-" + this.name, d = g.attr(c), i = {};
                void 0 !== d && (c += "-", a.each(this.params, function() {
                    i[this] = g.attr(c + this);
                }), this.adapt({
                    element: b,
                    form: h,
                    message: d,
                    params: i,
                    rules: e,
                    messages: f
                }));
            }), a.extend(e, {
                __dummy__: !0
            }), c || d.attachValidation());
        },
        parse: function(b) {
            var c = a(b).parents("form").andSelf().add(a(b).find("form")).filter("form");
            a(b).find(":input").filter("[data-val=true]").each(function() {
                m.unobtrusive.parseElement(this, !0);
            }), c.each(function() {
                var a = k(this);
                a && a.attachValidation();
            });
        }
    }, l = m.unobtrusive.adapters, l.add = function(a, b, c) {
        return c || (c = b, b = []), this.push({
            name: a,
            params: b,
            adapt: c
        }), this;
    }, l.addBool = function(a, c) {
        return this.add(a, function(d) {
            b(d, c || a, !0);
        });
    }, l.addMinMax = function(a, c, d, e, f, g) {
        return this.add(a, [ f || "min", g || "max" ], function(a) {
            var f = a.params.min, g = a.params.max;
            f && g ? b(a, e, [ f, g ]) : f ? b(a, c, f) : g && b(a, d, g);
        });
    }, l.addSingleVal = function(a, c, d) {
        return this.add(a, [ c || "val" ], function(e) {
            b(e, d || a, e.params[c]);
        });
    }, m.addMethod("__dummy__", function(a, b, c) {
        return !0;
    }), m.addMethod("regex", function(a, b, c) {
        var d;
        return !!this.optional(b) || (d = new RegExp(c).exec(a), d && 0 === d.index && d[0].length === a.length);
    }), m.addMethod("nonalphamin", function(a, b, c) {
        var d;
        return c && (d = a.match(/\W/g), d = d && d.length >= c), d;
    }), m.methods.extension ? (l.addSingleVal("accept", "mimtype"), l.addSingleVal("extension", "extension")) : l.addSingleVal("extension", "extension", "accept"), 
    l.addSingleVal("regex", "pattern"), l.addBool("creditcard").addBool("date").addBool("digits").addBool("email").addBool("number").addBool("url"), 
    l.addMinMax("length", "minlength", "maxlength", "rangelength").addMinMax("range", "min", "max", "range"), 
    l.add("equalto", [ "other" ], function(c) {
        var g = e(c.element.name), h = c.params.other, i = f(h, g), j = a(c.form).find(":input").filter("[name='" + d(i) + "']")[0];
        b(c, "equalTo", j);
    }), l.add("required", function(a) {
        "INPUT" === a.element.tagName.toUpperCase() && "CHECKBOX" === a.element.type.toUpperCase() || b(a, "required", !0);
    }), l.add("remote", [ "url", "type", "additionalfields" ], function(g) {
        var h = {
            url: g.params.url,
            type: g.params.type || "GET",
            data: {}
        }, i = e(g.element.name);
        a.each(c(g.params.additionalfields || g.element.name), function(b, c) {
            var e = f(c, i);
            h.data[e] = function() {
                return a(g.form).find(":input").filter("[name='" + d(e) + "']").val();
            };
        }), b(g, "remote", h);
    }), l.add("password", [ "min", "nonalphamin", "regex" ], function(a) {
        a.params.min && b(a, "minlength", a.params.min), a.params.nonalphamin && b(a, "nonalphamin", a.params.nonalphamin), 
        a.params.regex && b(a, "regex", a.params.regex);
    }), a(function() {
        m.unobtrusive.parse(document);
    });
}(jQuery);
//# sourceMappingURL=jquery.min.js.map
/*! 康美网络医院 最后修改于： 2016-10-20 */