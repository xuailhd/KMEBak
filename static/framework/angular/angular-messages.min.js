!function(a, b) {
    "use strict";
    function c() {
        function a(a, b) {
            if (a) return d(a) ? a.indexOf(b) >= 0 : a.hasOwnProperty(b);
        }
        return [ "$animate", function(b) {
            return {
                restrict: "AE",
                transclude: "element",
                priority: 1,
                terminal: !0,
                require: "^^ngMessages",
                link: function(c, e, f, g, h) {
                    var i, j = e[0], k = f.ngMessage || f.when, l = f.ngMessageExp || f.whenExp, m = function(a) {
                        i = a ? d(a) ? a : a.split(/[\s,]+/) : null, g.reRender();
                    };
                    l ? (m(c.$eval(l)), c.$watchCollection(l, m)) : m(k);
                    var n, o;
                    g.register(j, o = {
                        test: function(b) {
                            return a(i, b);
                        },
                        attach: function() {
                            n || h(c, function(a) {
                                b.enter(a, null, e), n = a;
                                var c = n.$$attachId = g.getAttachId();
                                n.on("$destroy", function() {
                                    n && n.$$attachId === c && (g.deregister(j), o.detach());
                                });
                            });
                        },
                        detach: function() {
                            if (n) {
                                var a = n;
                                n = null, b.leave(a);
                            }
                        }
                    });
                }
            };
        } ];
    }
    var d = b.isArray, e = b.forEach, f = b.isString, g = b.element;
    b.module("ngMessages", []).directive("ngMessages", [ "$animate", function(a) {
        function b(a, b) {
            return f(b) && 0 === b.length || c(a.$eval(b));
        }
        function c(a) {
            return f(a) ? a.length : !!a;
        }
        var d = "ng-active", g = "ng-inactive";
        return {
            require: "ngMessages",
            restrict: "AE",
            controller: [ "$element", "$scope", "$attrs", function(f, h, i) {
                function j(a, b) {
                    for (var c = b, d = []; c && c !== a; ) {
                        var e = c.$$ngMessageNode;
                        if (e && e.length) return r[e];
                        c.childNodes.length && d.indexOf(c) == -1 ? (d.push(c), c = c.childNodes[c.childNodes.length - 1]) : c.previousSibling ? c = c.previousSibling : (c = c.parentNode, 
                        d.push(c));
                    }
                }
                function k(a, b, c) {
                    var d = r[c];
                    if (m.head) {
                        var e = j(a, b);
                        e ? (d.next = e.next, e.next = d) : (d.next = m.head, m.head = d);
                    } else m.head = d;
                }
                function l(a, b, c) {
                    var d = r[c], e = j(a, b);
                    e ? e.next = d.next : m.head = d.next;
                }
                var m = this, n = 0, o = 0;
                this.getAttachId = function() {
                    return o++;
                };
                var p, q, r = this.messages = {};
                this.render = function(j) {
                    j = j || {}, p = !1, q = j;
                    for (var k = b(h, i.ngMessagesMultiple) || b(h, i.multiple), l = [], n = {}, o = m.head, r = !1, s = 0; null != o; ) {
                        s++;
                        var t = o.message, u = !1;
                        r || e(j, function(a, b) {
                            if (!u && c(a) && t.test(b)) {
                                if (n[b]) return;
                                n[b] = !0, u = !0, t.attach();
                            }
                        }), u ? r = !k : l.push(t), o = o.next;
                    }
                    e(l, function(a) {
                        a.detach();
                    }), l.length !== s ? a.setClass(f, d, g) : a.setClass(f, g, d);
                }, h.$watchCollection(i.ngMessages || i.for, m.render), f.on("$destroy", function() {
                    e(r, function(a) {
                        a.message.detach();
                    });
                }), this.reRender = function() {
                    p || (p = !0, h.$evalAsync(function() {
                        p && q && m.render(q);
                    }));
                }, this.register = function(a, b) {
                    var c = n.toString();
                    r[c] = {
                        message: b
                    }, k(f[0], a, c), a.$$ngMessageNode = c, n++, m.reRender();
                }, this.deregister = function(a) {
                    var b = a.$$ngMessageNode;
                    delete a.$$ngMessageNode, l(f[0], a, b), delete r[b], m.reRender();
                };
            } ]
        };
    } ]).directive("ngMessagesInclude", [ "$templateRequest", "$document", "$compile", function(a, b, c) {
        return {
            restrict: "AE",
            require: "^^ngMessages",
            link: function(d, e, f) {
                var h = f.ngMessagesInclude || f.src;
                a(h).then(function(a) {
                    c(a)(d, function(a) {
                        e.after(a);
                        var d = c.$$createComment ? c.$$createComment("ngMessagesInclude", h) : b[0].createComment(" ngMessagesInclude: " + h + " "), f = g(d);
                        e.after(f), e.remove();
                    });
                });
            }
        };
    } ]).directive("ngMessage", c()).directive("ngMessageExp", c());
}(window, window.angular);
//# sourceMappingURL=angular-messages.min.js.map
/*! 康美网络医院 最后修改于： 2016-10-20 */