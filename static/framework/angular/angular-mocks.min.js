!function(a, b) {
    "use strict";
    function c(a) {
        var b;
        if (b = a.match(i)) {
            var c = new Date(0), e = 0, f = 0;
            return b[9] && (e = d(b[9] + b[10]), f = d(b[9] + b[11])), c.setUTCFullYear(d(b[1]), d(b[2]) - 1, d(b[3])), 
            c.setUTCHours(d(b[4] || 0) - e, d(b[5] || 0) - f, d(b[6] || 0), d(b[7] || 0)), c;
        }
        return a;
    }
    function d(a) {
        return parseInt(a, 10);
    }
    function e(a, b, c) {
        var d = "";
        for (a < 0 && (d = "-", a = -a), a = "" + a; a.length < b; ) a = "0" + a;
        return c && (a = a.substr(a.length - b)), d + a;
    }
    function f(a, c, d, e) {
        function f(a, c, d, e) {
            return b.isFunction(a) ? a : function() {
                return b.isNumber(a) ? [ a, c, d, e ] : [ 200, a, c, d ];
            };
        }
        function i(a, f, g, i, j, k, q, r, s, t) {
            function u(a) {
                return b.isString(a) || b.isFunction(a) || a instanceof RegExp ? a : b.toJson(a);
            }
            function v(b) {
                function d() {
                    var c = b.response(a, f, g, j, b.params(f));
                    w.$$respHeaders = c[2], i(p(c[0]), p(c[1]), w.getAllResponseHeaders(), p(c[3] || ""));
                }
                function h() {
                    for (var a = 0, b = n.length; a < b; a++) if (n[a] === d) {
                        n.splice(a, 1), i(-1, void 0, "");
                        break;
                    }
                }
                return !e && k && (k.then ? k.then(h) : c(h, k)), d;
            }
            var w = new h(), x = m[0], y = !1;
            if (w.$$events = s, w.upload.$$events = t, x && x.match(a, f)) {
                if (!x.matchData(g)) throw new Error("Expected " + x + " with different data\nEXPECTED: " + u(x.data) + "\nGOT:      " + g);
                if (!x.matchHeaders(j)) throw new Error("Expected " + x + " with different headers\nEXPECTED: " + u(x.headers) + "\nGOT:      " + u(j));
                if (m.shift(), x.response) return void n.push(v(x));
                y = !0;
            }
            for (var z, A = -1; z = l[++A]; ) if (z.match(a, f, g, j || {})) {
                if (z.response) (e ? e.defer : o)(v(z)); else {
                    if (!z.passThrough) throw new Error("No response defined !");
                    d(a, f, g, i, j, k, q, r);
                }
                return;
            }
            throw y ? new Error("No response defined !") : new Error("Unexpected request: " + a + " " + f + "\n" + (x ? "Expected " + x : "No more request expected"));
        }
        function j(a) {
            var c = {
                regexp: a
            }, d = c.keys = [];
            return a && b.isString(a) ? (a = a.replace(/([().])/g, "\\$1").replace(/(\/)?:(\w+)([\?\*])?/g, function(a, b, c, e) {
                var f = "?" === e ? e : null, g = "*" === e ? e : null;
                return d.push({
                    name: c,
                    optional: !!f
                }), b = b || "", "" + (f ? "" : b) + "(?:" + (f ? b : "") + (g && "(.+?)" || "([^/]+)") + (f || "") + ")" + (f || "");
            }).replace(/([\/$\*])/g, "\\$1"), c.regexp = new RegExp("^" + a, "i"), c) : c;
        }
        function k(a) {
            b.forEach([ "GET", "DELETE", "JSONP", "HEAD" ], function(b) {
                i[a + b] = function(c, d, e) {
                    return i[a](b, c, void 0, d, e);
                };
            }), b.forEach([ "PUT", "POST", "PATCH" ], function(b) {
                i[a + b] = function(c, d, e, f) {
                    return i[a](b, c, d, e, f);
                };
            });
        }
        var l = [], m = [], n = [], o = b.bind(n, n.push), p = b.copy;
        return i.when = function(a, b, c, d, h) {
            var i = new g(a, b, c, d, h), j = {
                respond: function(a, b, c, d) {
                    return i.passThrough = void 0, i.response = f(a, b, c, d), j;
                }
            };
            return e && (j.passThrough = function() {
                return i.response = void 0, i.passThrough = !0, j;
            }), l.push(i), j;
        }, k("when"), i.whenRoute = function(a, b) {
            var c = j(b);
            return i.when(a, c.regexp, void 0, void 0, c.keys);
        }, i.expect = function(a, b, c, d, e) {
            var h = new g(a, b, c, d, e), i = {
                respond: function(a, b, c, d) {
                    return h.response = f(a, b, c, d), i;
                }
            };
            return m.push(h), i;
        }, k("expect"), i.expectRoute = function(a, b) {
            var c = j(b);
            return i.expect(a, c.regexp, void 0, void 0, c.keys);
        }, i.flush = function(c, d) {
            if (d !== !1 && a.$digest(), !n.length) throw new Error("No pending request to flush !");
            if (b.isDefined(c) && null !== c) for (;c--; ) {
                if (!n.length) throw new Error("No more pending request to flush !");
                n.shift()();
            } else for (;n.length; ) n.shift()();
            i.verifyNoOutstandingExpectation(d);
        }, i.verifyNoOutstandingExpectation = function(b) {
            if (b !== !1 && a.$digest(), m.length) throw new Error("Unsatisfied requests: " + m.join(", "));
        }, i.verifyNoOutstandingRequest = function() {
            if (n.length) throw new Error("Unflushed requests: " + n.length);
        }, i.resetExpectations = function() {
            m.length = 0, n.length = 0;
        }, i;
    }
    function g(a, c, d, e, f) {
        this.data = d, this.headers = e, this.match = function(c, d, e, f) {
            return a == c && (!!this.matchUrl(d) && (!(b.isDefined(e) && !this.matchData(e)) && !(b.isDefined(f) && !this.matchHeaders(f))));
        }, this.matchUrl = function(a) {
            return !c || (b.isFunction(c.test) ? c.test(a) : b.isFunction(c) ? c(a) : c == a);
        }, this.matchHeaders = function(a) {
            return !!b.isUndefined(e) || (b.isFunction(e) ? e(a) : b.equals(e, a));
        }, this.matchData = function(a) {
            return !!b.isUndefined(d) || (d && b.isFunction(d.test) ? d.test(a) : d && b.isFunction(d) ? d(a) : d && !b.isString(d) ? b.equals(b.fromJson(b.toJson(d)), b.fromJson(a)) : d == a);
        }, this.toString = function() {
            return a + " " + c;
        }, this.params = function(a) {
            function d() {
                var d = {};
                if (!c || !b.isFunction(c.test) || !f || 0 === f.length) return d;
                var e = c.exec(a);
                if (!e) return d;
                for (var g = 1, h = e.length; g < h; ++g) {
                    var i = f[g - 1], j = e[g];
                    i && j && (d[i.name || i] = j);
                }
                return d;
            }
            function e() {
                var c, d, e = {}, f = a.indexOf("?") > -1 ? a.substring(a.indexOf("?") + 1) : "";
                return b.forEach(f.split("&"), function(a) {
                    if (a && (c = a.replace(/\+/g, "%20").split("="), d = g(c[0]), b.isDefined(d))) {
                        var f = !b.isDefined(c[1]) || g(c[1]);
                        hasOwnProperty.call(e, d) ? b.isArray(e[d]) ? e[d].push(f) : e[d] = [ e[d], f ] : e[d] = f;
                    }
                }), e;
            }
            function g(a) {
                try {
                    return decodeURIComponent(a);
                } catch (b) {}
            }
            return b.extend(e(), d());
        };
    }
    function h() {
        h.$$lastInstance = this, this.open = function(a, b, c) {
            this.$$method = a, this.$$url = b, this.$$async = c, this.$$reqHeaders = {}, this.$$respHeaders = {};
        }, this.send = function(a) {
            this.$$data = a;
        }, this.setRequestHeader = function(a, b) {
            this.$$reqHeaders[a] = b;
        }, this.getResponseHeader = function(a) {
            var c = this.$$respHeaders[a];
            return c ? c : (a = b.lowercase(a), (c = this.$$respHeaders[a]) ? c : (c = void 0, 
            b.forEach(this.$$respHeaders, function(d, e) {
                c || b.lowercase(e) != a || (c = d);
            }), c));
        }, this.getAllResponseHeaders = function() {
            var a = [];
            return b.forEach(this.$$respHeaders, function(b, c) {
                a.push(c + ": " + b);
            }), a.join("\n");
        }, this.abort = b.noop, this.$$events = {}, this.addEventListener = function(a, c) {
            b.isUndefined(this.$$events[a]) && (this.$$events[a] = []), this.$$events[a].push(c);
        }, this.upload = {
            $$events: {},
            addEventListener: this.addEventListener
        };
    }
    b.mock = {}, b.mock.$BrowserProvider = function() {
        this.$get = function() {
            return new b.mock.$Browser();
        };
    }, b.mock.$Browser = function() {
        var a = this;
        this.isMock = !0, a.$$url = "http://server/", a.$$lastUrl = a.$$url, a.pollFns = [], 
        a.$$completeOutstandingRequest = b.noop, a.$$incOutstandingRequestCount = b.noop, 
        a.onUrlChange = function(b) {
            return a.pollFns.push(function() {
                a.$$lastUrl === a.$$url && a.$$state === a.$$lastState || (a.$$lastUrl = a.$$url, 
                a.$$lastState = a.$$state, b(a.$$url, a.$$state));
            }), b;
        }, a.$$applicationDestroyed = b.noop, a.$$checkUrlChange = b.noop, a.deferredFns = [], 
        a.deferredNextId = 0, a.defer = function(b, c) {
            return c = c || 0, a.deferredFns.push({
                time: a.defer.now + c,
                fn: b,
                id: a.deferredNextId
            }), a.deferredFns.sort(function(a, b) {
                return a.time - b.time;
            }), a.deferredNextId++;
        }, a.defer.now = 0, a.defer.cancel = function(c) {
            var d;
            return b.forEach(a.deferredFns, function(a, b) {
                a.id === c && (d = b);
            }), !!b.isDefined(d) && (a.deferredFns.splice(d, 1), !0);
        }, a.defer.flush = function(c) {
            if (b.isDefined(c)) a.defer.now += c; else {
                if (!a.deferredFns.length) throw new Error("No deferred tasks to be flushed");
                a.defer.now = a.deferredFns[a.deferredFns.length - 1].time;
            }
            for (;a.deferredFns.length && a.deferredFns[0].time <= a.defer.now; ) a.deferredFns.shift().fn();
        }, a.$$baseHref = "/", a.baseHref = function() {
            return this.$$baseHref;
        };
    }, b.mock.$Browser.prototype = {
        poll: function() {
            b.forEach(this.pollFns, function(a) {
                a();
            });
        },
        url: function(a, c, d) {
            return b.isUndefined(d) && (d = null), a ? (this.$$url = a, this.$$state = b.copy(d), 
            this) : this.$$url;
        },
        state: function() {
            return this.$$state;
        },
        notifyWhenNoOutstandingRequests: function(a) {
            a();
        }
    }, b.mock.$ExceptionHandlerProvider = function() {
        var a;
        this.mode = function(b) {
            switch (b) {
              case "log":
              case "rethrow":
                var c = [];
                a = function(a) {
                    if (1 == arguments.length ? c.push(a) : c.push([].slice.call(arguments, 0)), "rethrow" === b) throw a;
                }, a.errors = c;
                break;

              default:
                throw new Error("Unknown mode '" + b + "', only 'log'/'rethrow' modes are allowed!");
            }
        }, this.$get = function() {
            return a;
        }, this.mode("rethrow");
    }, b.mock.$LogProvider = function() {
        function a(a, b, c) {
            return a.concat(Array.prototype.slice.call(b, c));
        }
        var c = !0;
        this.debugEnabled = function(a) {
            return b.isDefined(a) ? (c = a, this) : c;
        }, this.$get = function() {
            var d = {
                log: function() {
                    d.log.logs.push(a([], arguments, 0));
                },
                warn: function() {
                    d.warn.logs.push(a([], arguments, 0));
                },
                info: function() {
                    d.info.logs.push(a([], arguments, 0));
                },
                error: function() {
                    d.error.logs.push(a([], arguments, 0));
                },
                debug: function() {
                    c && d.debug.logs.push(a([], arguments, 0));
                }
            };
            return d.reset = function() {
                d.log.logs = [], d.info.logs = [], d.warn.logs = [], d.error.logs = [], d.debug.logs = [];
            }, d.assertEmpty = function() {
                var a = [];
                if (b.forEach([ "error", "warn", "info", "log", "debug" ], function(c) {
                    b.forEach(d[c].logs, function(d) {
                        b.forEach(d, function(b) {
                            a.push("MOCK $log (" + c + "): " + String(b) + "\n" + (b.stack || ""));
                        });
                    });
                }), a.length) throw a.unshift("Expected $log to be empty! Either a message was logged unexpectedly, or an expected log message was not checked and removed:"), 
                a.push(""), new Error(a.join("\n---------\n"));
            }, d.reset(), d;
        };
    }, b.mock.$IntervalProvider = function() {
        this.$get = [ "$browser", "$rootScope", "$q", "$$q", function(a, c, d, e) {
            var f = [], g = 0, h = 0, i = function(i, j, k, l) {
                function m() {
                    if (r.notify(p++), k > 0 && p >= k) {
                        var d;
                        r.resolve(p), b.forEach(f, function(a, b) {
                            a.id === s.$$intervalId && (d = b);
                        }), b.isDefined(d) && f.splice(d, 1);
                    }
                    q ? a.defer.flush() : c.$apply();
                }
                var n = arguments.length > 4, o = n ? Array.prototype.slice.call(arguments, 4) : [], p = 0, q = b.isDefined(l) && !l, r = (q ? e : d).defer(), s = r.promise;
                return k = b.isDefined(k) ? k : 0, s.then(null, null, n ? function() {
                    i.apply(null, o);
                } : i), s.$$intervalId = g, f.push({
                    nextTime: h + j,
                    delay: j,
                    fn: m,
                    id: g,
                    deferred: r
                }), f.sort(function(a, b) {
                    return a.nextTime - b.nextTime;
                }), g++, s;
            };
            return i.cancel = function(a) {
                if (!a) return !1;
                var c;
                return b.forEach(f, function(b, d) {
                    b.id === a.$$intervalId && (c = d);
                }), !!b.isDefined(c) && (f[c].deferred.reject("canceled"), f.splice(c, 1), !0);
            }, i.flush = function(a) {
                for (h += a; f.length && f[0].nextTime <= h; ) {
                    var b = f[0];
                    b.fn(), b.nextTime += b.delay, f.sort(function(a, b) {
                        return a.nextTime - b.nextTime;
                    });
                }
                return a;
            }, i;
        } ];
    };
    var i = /^(-?\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?:\:?(\d\d)(?:\:?(\d\d)(?:\.(\d{3}))?)?)?(Z|([+-])(\d\d):?(\d\d)))?$/;
    b.mock.TzDate = function(a, d) {
        var f = new Date(0);
        if (b.isString(d)) {
            var g = d;
            if (f.origDate = c(d), d = f.origDate.getTime(), isNaN(d)) throw {
                name: "Illegal Argument",
                message: "Arg '" + g + "' passed into TzDate constructor is not a valid date string"
            };
        } else f.origDate = new Date(d);
        var h = new Date(d).getTimezoneOffset();
        f.offsetDiff = 60 * h * 1e3 - 1e3 * a * 60 * 60, f.date = new Date(d + f.offsetDiff), 
        f.getTime = function() {
            return f.date.getTime() - f.offsetDiff;
        }, f.toLocaleDateString = function() {
            return f.date.toLocaleDateString();
        }, f.getFullYear = function() {
            return f.date.getFullYear();
        }, f.getMonth = function() {
            return f.date.getMonth();
        }, f.getDate = function() {
            return f.date.getDate();
        }, f.getHours = function() {
            return f.date.getHours();
        }, f.getMinutes = function() {
            return f.date.getMinutes();
        }, f.getSeconds = function() {
            return f.date.getSeconds();
        }, f.getMilliseconds = function() {
            return f.date.getMilliseconds();
        }, f.getTimezoneOffset = function() {
            return 60 * a;
        }, f.getUTCFullYear = function() {
            return f.origDate.getUTCFullYear();
        }, f.getUTCMonth = function() {
            return f.origDate.getUTCMonth();
        }, f.getUTCDate = function() {
            return f.origDate.getUTCDate();
        }, f.getUTCHours = function() {
            return f.origDate.getUTCHours();
        }, f.getUTCMinutes = function() {
            return f.origDate.getUTCMinutes();
        }, f.getUTCSeconds = function() {
            return f.origDate.getUTCSeconds();
        }, f.getUTCMilliseconds = function() {
            return f.origDate.getUTCMilliseconds();
        }, f.getDay = function() {
            return f.date.getDay();
        }, f.toISOString && (f.toISOString = function() {
            return e(f.origDate.getUTCFullYear(), 4) + "-" + e(f.origDate.getUTCMonth() + 1, 2) + "-" + e(f.origDate.getUTCDate(), 2) + "T" + e(f.origDate.getUTCHours(), 2) + ":" + e(f.origDate.getUTCMinutes(), 2) + ":" + e(f.origDate.getUTCSeconds(), 2) + "." + e(f.origDate.getUTCMilliseconds(), 3) + "Z";
        });
        var i = [ "getUTCDay", "getYear", "setDate", "setFullYear", "setHours", "setMilliseconds", "setMinutes", "setMonth", "setSeconds", "setTime", "setUTCDate", "setUTCFullYear", "setUTCHours", "setUTCMilliseconds", "setUTCMinutes", "setUTCMonth", "setUTCSeconds", "setYear", "toDateString", "toGMTString", "toJSON", "toLocaleFormat", "toLocaleString", "toLocaleTimeString", "toSource", "toString", "toTimeString", "toUTCString", "valueOf" ];
        return b.forEach(i, function(a) {
            f[a] = function() {
                throw new Error("Method '" + a + "' is not implemented in the TzDate mock");
            };
        }), f;
    }, b.mock.TzDate.prototype = Date.prototype, b.mock.animate = b.module("ngAnimateMock", [ "ng" ]).config([ "$provide", function(a) {
        a.factory("$$forceReflow", function() {
            function a() {
                a.totalReflows++;
            }
            return a.totalReflows = 0, a;
        }), a.factory("$$animateAsyncRun", function() {
            var a = [], b = function() {
                return function(b) {
                    a.push(b);
                };
            };
            return b.flush = function() {
                if (0 === a.length) return !1;
                for (var b = 0; b < a.length; b++) a[b]();
                return a = [], !0;
            }, b;
        }), a.decorator("$$animateJs", [ "$delegate", function(a) {
            var b = [], c = function() {
                var c = a.apply(a, arguments);
                return c && b.push(c), c;
            };
            return c.$closeAndFlush = function() {
                b.forEach(function(a) {
                    a.end();
                }), b = [];
            }, c;
        } ]), a.decorator("$animateCss", [ "$delegate", function(a) {
            var b = [], c = function(c, d) {
                var e = a(c, d);
                return b.push(e), e;
            };
            return c.$closeAndFlush = function() {
                b.forEach(function(a) {
                    a.end();
                }), b = [];
            }, c;
        } ]), a.decorator("$animate", [ "$delegate", "$timeout", "$browser", "$$rAF", "$animateCss", "$$animateJs", "$$forceReflow", "$$animateAsyncRun", "$rootScope", function(a, c, d, e, f, g, h, i, j) {
            var k = {
                queue: [],
                cancel: a.cancel,
                on: a.on,
                off: a.off,
                pin: a.pin,
                get reflows() {
                    return h.totalReflows;
                },
                enabled: a.enabled,
                closeAndFlush: function() {
                    this.flush(!0), f.$closeAndFlush(), g.$closeAndFlush(), this.flush();
                },
                flush: function(a) {
                    j.$digest();
                    var b, c = !1;
                    do b = !1, e.queue.length && (e.flush(), b = c = !0), i.flush() && (b = c = !0); while (b);
                    if (!c && !a) throw new Error("No pending animations ready to be closed or flushed");
                    j.$digest();
                }
            };
            return b.forEach([ "animate", "enter", "leave", "move", "addClass", "removeClass", "setClass" ], function(b) {
                k[b] = function() {
                    return k.queue.push({
                        event: b,
                        element: arguments[0],
                        options: arguments[arguments.length - 1],
                        args: arguments
                    }), a[b].apply(a, arguments);
                };
            }), k;
        } ]);
    } ]), b.mock.dump = function(a) {
        function c(a) {
            var e;
            return b.isElement(a) ? (a = b.element(a), e = b.element("<div></div>"), b.forEach(a, function(a) {
                e.append(b.element(a).clone());
            }), e = e.html()) : b.isArray(a) ? (e = [], b.forEach(a, function(a) {
                e.push(c(a));
            }), e = "[ " + e.join(", ") + " ]") : e = b.isObject(a) ? b.isFunction(a.$eval) && b.isFunction(a.$apply) ? d(a) : a instanceof Error ? a.stack || "" + a.name + ": " + a.message : b.toJson(a, !0) : String(a), 
            e;
        }
        function d(a, c) {
            c = c || "  ";
            var e = [ c + "Scope(" + a.$id + "): {" ];
            for (var f in a) Object.prototype.hasOwnProperty.call(a, f) && !f.match(/^(\$|this)/) && e.push("  " + f + ": " + b.toJson(a[f]));
            for (var g = a.$$childHead; g; ) e.push(d(g, c + "  ")), g = g.$$nextSibling;
            return e.push("}"), e.join("\n" + c);
        }
        return c(a);
    }, b.mock.$HttpBackendProvider = function() {
        this.$get = [ "$rootScope", "$timeout", f ];
    }, b.mock.$TimeoutDecorator = [ "$delegate", "$browser", function(a, c) {
        function d(a) {
            var c = [];
            return b.forEach(a, function(a) {
                c.push("{id: " + a.id + ", time: " + a.time + "}");
            }), c.join(", ");
        }
        return a.flush = function(a) {
            c.defer.flush(a);
        }, a.verifyNoPendingTasks = function() {
            if (c.deferredFns.length) throw new Error("Deferred tasks to flush (" + c.deferredFns.length + "): " + d(c.deferredFns));
        }, a;
    } ], b.mock.$RAFDecorator = [ "$delegate", function(a) {
        var b = function(a) {
            var c = b.queue.length;
            return b.queue.push(a), function() {
                b.queue.splice(c, 1);
            };
        };
        return b.queue = [], b.supported = a.supported, b.flush = function() {
            if (0 === b.queue.length) throw new Error("No rAF callbacks present");
            for (var a = b.queue.length, c = 0; c < a; c++) b.queue[c]();
            b.queue = b.queue.slice(c);
        }, b;
    } ];
    var j;
    b.mock.$RootElementProvider = function() {
        this.$get = [ "$injector", function(a) {
            return j = b.element("<div ng-app></div>").data("$injector", a);
        } ];
    }, b.mock.$ControllerDecorator = [ "$delegate", function(a) {
        return function(c, d, e, f) {
            if (e && "object" == typeof e) {
                var g = a(c, d, !0, f);
                return b.extend(g.instance, e), g();
            }
            return a(c, d, e, f);
        };
    } ], b.mock.$ComponentControllerProvider = [ "$compileProvider", function(a) {
        this.$get = [ "$controller", "$injector", "$rootScope", function(a, b, c) {
            return function(d, e, f, g) {
                var h = b.get(d + "Directive"), i = h.filter(function(a) {
                    return a.controller && a.controllerAs && "E" === a.restrict;
                });
                if (0 === i.length) throw new Error("No component found");
                if (i.length > 1) throw new Error("Too many components found");
                var j = i[0];
                return e = e || {}, e.$scope = e.$scope || c.$new(!0), a(j.controller, e, f, g || j.controllerAs);
            };
        } ];
    } ], b.module("ngMock", [ "ng" ]).provider({
        $browser: b.mock.$BrowserProvider,
        $exceptionHandler: b.mock.$ExceptionHandlerProvider,
        $log: b.mock.$LogProvider,
        $interval: b.mock.$IntervalProvider,
        $httpBackend: b.mock.$HttpBackendProvider,
        $rootElement: b.mock.$RootElementProvider,
        $componentController: b.mock.$ComponentControllerProvider
    }).config([ "$provide", function(a) {
        a.decorator("$timeout", b.mock.$TimeoutDecorator), a.decorator("$$rAF", b.mock.$RAFDecorator), 
        a.decorator("$rootScope", b.mock.$RootScopeDecorator), a.decorator("$controller", b.mock.$ControllerDecorator);
    } ]), b.module("ngMockE2E", [ "ng" ]).config([ "$provide", function(a) {
        a.decorator("$httpBackend", b.mock.e2e.$httpBackendDecorator);
    } ]), b.mock.e2e = {}, b.mock.e2e.$httpBackendDecorator = [ "$rootScope", "$timeout", "$delegate", "$browser", f ], 
    b.mock.$RootScopeDecorator = [ "$delegate", function(a) {
        function b() {
            for (var a, b = 0, c = [ this.$$childHead ]; c.length; ) for (a = c.shift(); a; ) b += 1, 
            c.push(a.$$childHead), a = a.$$nextSibling;
            return b;
        }
        function c() {
            for (var a, b = this.$$watchers ? this.$$watchers.length : 0, c = [ this.$$childHead ]; c.length; ) for (a = c.shift(); a; ) b += a.$$watchers ? a.$$watchers.length : 0, 
            c.push(a.$$childHead), a = a.$$nextSibling;
            return b;
        }
        var d = Object.getPrototypeOf(a);
        return d.$countChildScopes = b, d.$countWatchers = c, a;
    } ], !function(c) {
        function d() {
            this.shared = !1, this.sharedError = null, this.cleanupAfterEach = function() {
                return !this.shared || this.sharedError;
            };
        }
        if (c) {
            var e = null, f = new d(), g = [], i = function() {
                return !!e;
            };
            b.mock.$$annotate = b.injector.$$annotate, b.injector.$$annotate = function(a) {
                return "function" != typeof a || a.$inject || g.push(a), b.mock.$$annotate.apply(this, arguments);
            };
            var k = a.module = b.mock.module = function() {
                function a() {
                    if (e.$injector) throw new Error("Injector already created, can not register a module!");
                    var a, d = e.$modules || (e.$modules = []);
                    b.forEach(c, function(c) {
                        a = b.isObject(c) && !b.isArray(c) ? [ "$provide", function(a) {
                            b.forEach(c, function(b, c) {
                                a.value(c, b);
                            });
                        } ] : c, e.$providerInjector ? e.$providerInjector.invoke(a) : d.push(a);
                    });
                }
                var c = Array.prototype.slice.call(arguments, 0);
                return i() ? a() : a;
            };
            k.$$beforeAllHook = a.before || a.beforeAll, k.$$afterAllHook = a.after || a.afterAll, 
            k.$$currentSpec = function(a) {
                return 0 === arguments.length ? a : void (e = a);
            }, k.sharedInjector = function() {
                if (!k.$$beforeAllHook || !k.$$afterAllHook) throw Error("sharedInjector() cannot be used unless your test runner defines beforeAll/afterAll");
                var a = !1;
                k.$$beforeAllHook(function() {
                    if (f.shared) throw f.sharedError = Error("sharedInjector() cannot be called inside a context that has already called sharedInjector()"), 
                    f.sharedError;
                    a = !0, e = this, f.shared = !0;
                }), k.$$afterAllHook(function() {
                    a ? (f = new d(), k.$$cleanup()) : f.sharedError = null;
                });
            }, k.$$beforeEach = function() {
                if (f.shared && e && e != this) {
                    var a = e;
                    e = this, b.forEach([ "$injector", "$modules", "$providerInjector", "$injectorStrict" ], function(b) {
                        e[b] = a[b], a[b] = null;
                    });
                } else e = this, j = null, g = [];
            }, k.$$afterEach = function() {
                f.cleanupAfterEach() && k.$$cleanup();
            }, k.$$cleanup = function() {
                var a = e.$injector;
                if (g.forEach(function(a) {
                    delete a.$inject;
                }), b.forEach(e.$modules, function(a) {
                    a && a.$$hashKey && (a.$$hashKey = void 0);
                }), e.$injector = null, e.$modules = null, e.$providerInjector = null, e = null, 
                a) {
                    var c = a.get("$rootElement"), d = c && c[0], f = j ? [ j[0] ] : [];
                    !d || j && d === j[0] || f.push(d), b.element.cleanData(f);
                    var i = a.get("$rootScope");
                    i && i.$destroy && i.$destroy();
                }
                b.forEach(b.element.fragments, function(a, c) {
                    delete b.element.fragments[c];
                }), h.$$lastInstance = null, b.forEach(b.callbacks, function(a, c) {
                    delete b.callbacks[c];
                }), b.callbacks.counter = 0;
            }, (a.beforeEach || a.setup)(k.$$beforeEach), (a.afterEach || a.teardown)(k.$$afterEach);
            var l = function(a, b) {
                this.message = a.message, this.name = a.name, a.line && (this.line = a.line), a.sourceId && (this.sourceId = a.sourceId), 
                a.stack && b && (this.stack = a.stack + "\n" + b.stack), a.stackArray && (this.stackArray = a.stackArray);
            };
            l.prototype.toString = Error.prototype.toString, a.inject = b.mock.inject = function() {
                function a() {
                    var a = e.$modules || [], f = !!e.$injectorStrict;
                    a.unshift([ "$injector", function(a) {
                        e.$providerInjector = a;
                    } ]), a.unshift("ngMock"), a.unshift("ng");
                    var g = e.$injector;
                    g || (f && b.forEach(a, function(a) {
                        "function" == typeof a && b.injector.$$annotate(a);
                    }), g = e.$injector = b.injector(a, f), e.$injectorStrict = f);
                    for (var h = 0, i = c.length; h < i; h++) {
                        e.$injectorStrict && g.annotate(c[h]);
                        try {
                            g.invoke(c[h] || b.noop, this);
                        } catch (j) {
                            if (j.stack && d) throw new l(j, d);
                            throw j;
                        } finally {
                            d = null;
                        }
                    }
                }
                var c = Array.prototype.slice.call(arguments, 0), d = new Error("Declaration Location");
                if (!d.stack) try {
                    throw d;
                } catch (f) {}
                return i() ? a.call(e) : a;
            }, b.mock.inject.strictDi = function(a) {
                function b() {
                    if (a !== e.$injectorStrict) {
                        if (e.$injector) throw new Error("Injector already created, can not modify strict annotations");
                        e.$injectorStrict = a;
                    }
                }
                return a = !arguments.length || !!a, i() ? b() : b;
            };
        }
    }(a.jasmine || a.mocha);
}(window, window.angular);
//# sourceMappingURL=angular-mocks.min.js.map
/*! 康美网络医院 最后修改于： 2016-10-20 */