!function(a) {
    "use strict";
    var b = function(b, c) {
        if (this.$element = a(b), this.options = a.extend(!0, {}, a.fn.typeahead.defaults, c), 
        this.$menu = a(this.options.menu).appendTo("body"), this.shown = !1, this.eventSupported = this.options.eventSupported || this.eventSupported, 
        this.grepper = this.options.grepper || this.grepper, this.highlighter = this.options.highlighter || this.highlighter, 
        this.lookup = this.options.lookup || this.lookup, this.matcher = this.options.matcher || this.matcher, 
        this.render = this.options.render || this.render, this.select = this.options.select || this.select, 
        this.sorter = this.options.sorter || this.sorter, this.source = this.options.source || this.source, 
        !this.source.length) {
            var d = this.options.ajax;
            "string" == typeof d ? this.ajax = a.extend({}, a.fn.typeahead.defaults.ajax, {
                url: d
            }) : this.ajax = a.extend({}, a.fn.typeahead.defaults.ajax, d), this.ajax.url || (this.ajax = null);
        }
        this.listen();
    };
    b.prototype = {
        constructor: b,
        eventSupported: function(a) {
            var b = a in this.$element;
            return b || (this.$element.setAttribute(a, "return;"), b = "function" == typeof this.$element[a]), 
            b;
        },
        ajaxer: function() {
            var b = this, c = b.$element.val();
            return c === b.query ? b : (b.query = c, b.ajax.timerId && (clearTimeout(b.ajax.timerId), 
            b.ajax.timerId = null), !c || c.length < b.ajax.triggerLength ? (b.ajax.xhr && (b.ajax.xhr.abort(), 
            b.ajax.xhr = null, b.ajaxToggleLoadClass(!1)), b.shown ? b.hide() : b) : (b.ajax.timerId = setTimeout(function() {
                a.proxy(b.ajaxExecute(c), b);
            }, b.ajax.timeout), b));
        },
        ajaxExecute: function(b) {
            this.ajaxToggleLoadClass(!0), this.ajax.xhr && this.ajax.xhr.abort();
            var c = this.ajax.preDispatch ? this.ajax.preDispatch(b) : {
                query: b
            }, d = "post" === this.ajax.method ? a.post : a.get;
            this.ajax.xhr = d(this.ajax.url, c, a.proxy(this.ajaxLookup, this)), this.ajax.timerId = null;
        },
        ajaxLookup: function(a) {
            var b;
            if (this.ajaxToggleLoadClass(!1), this.ajax.xhr) return this.ajax.preProcess && (a = this.ajax.preProcess(a)), 
            this.ajax.data = a, b = this.grepper(this.ajax.data), b && b.length ? (this.ajax.xhr = null, 
            this.render(b.slice(0, this.options.items)).show()) : this.shown ? this.hide() : this;
        },
        ajaxToggleLoadClass: function(a) {
            this.ajax.loadingClass && this.$element.toggleClass(this.ajax.loadingClass, a);
        },
        lookup: function(a) {
            var b, c = this;
            return c.ajax ? void c.ajaxer() : (c.query = c.$element.val(), c.query ? (b = c.grepper(c.source), 
            b && b.length ? c.render(b.slice(0, c.options.items)).show() : c.shown ? c.hide() : c) : c.shown ? c.hide() : c);
        },
        grepper: function(b) {
            var c, d = this;
            return b && b.length && !b[0].hasOwnProperty(d.options.display) ? null : (c = a.grep(b, function(a) {
                return d.matcher(a[d.options.display], a);
            }), this.sorter(c));
        },
        matcher: function(a) {
            return ~a.toLowerCase().indexOf(this.query.toLowerCase());
        },
        sorter: function(a) {
            for (var b, c = this, d = [], e = [], f = []; b = a.shift(); ) b[c.options.display].toLowerCase().indexOf(this.query.toLowerCase()) ? ~b[c.options.display].indexOf(this.query) ? e.push(b) : f.push(b) : d.push(b);
            return d.concat(e, f);
        },
        show: function() {
            var b = a.extend({}, this.$element.offset(), {
                height: this.$element[0].offsetHeight
            });
            return this.$menu.css({
                top: b.top + b.height,
                left: b.left
            }), this.$menu.show(), this.shown = !0, this;
        },
        hide: function() {
            return this.$menu.hide(), this.shown = !1, this;
        },
        highlighter: function(a) {
            var b = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            return a.replace(new RegExp("(" + b + ")", "ig"), function(a, b) {
                return "<strong>" + b + "</strong>";
            });
        },
        render: function(b) {
            var c = this;
            return b = a(b).map(function(b, d) {
                return b = a(c.options.item).attr("data-value", d[c.options.val]), b.find("a").html(c.highlighter(d[c.options.display], d)), 
                b[0];
            }), b.first().addClass("active"), this.$menu.html(b), this;
        },
        select: function() {
            var a = this.$menu.find(".active");
            return this.$element.val(a.text()).change(), this.options.itemSelected(a, a.attr("data-value"), a.text()), 
            this.hide();
        },
        next: function(b) {
            var c = this.$menu.find(".active").removeClass("active"), d = c.next();
            d.length || (d = a(this.$menu.find("li")[0])), d.addClass("active");
        },
        prev: function(a) {
            var b = this.$menu.find(".active").removeClass("active"), c = b.prev();
            c.length || (c = this.$menu.find("li").last()), c.addClass("active");
        },
        listen: function() {
            this.$element.on("blur", a.proxy(this.blur, this)).on("keyup", a.proxy(this.keyup, this)), 
            this.eventSupported("keydown") ? this.$element.on("keydown", a.proxy(this.keypress, this)) : this.$element.on("keypress", a.proxy(this.keypress, this)), 
            this.$menu.on("click", a.proxy(this.click, this)).on("mouseenter", "li", a.proxy(this.mouseenter, this));
        },
        keyup: function(a) {
            switch (a.stopPropagation(), a.preventDefault(), a.keyCode) {
              case 40:
              case 38:
                break;

              case 9:
              case 13:
                if (!this.shown) return;
                this.select();
                break;

              case 27:
                this.hide();
                break;

              default:
                this.lookup();
            }
        },
        keypress: function(a) {
            if (a.stopPropagation(), this.shown) switch (a.keyCode) {
              case 9:
              case 13:
              case 27:
                a.preventDefault();
                break;

              case 38:
                a.preventDefault(), this.prev();
                break;

              case 40:
                a.preventDefault(), this.next();
            }
        },
        blur: function(a) {
            var b = this;
            a.stopPropagation(), a.preventDefault(), setTimeout(function() {
                b.$menu.is(":focus") || b.hide();
            }, 150);
        },
        click: function(a) {
            a.stopPropagation(), a.preventDefault(), this.select();
        },
        mouseenter: function(b) {
            this.$menu.find(".active").removeClass("active"), a(b.currentTarget).addClass("active");
        }
    }, a.fn.typeahead = function(c) {
        return this.each(function() {
            var d = a(this), e = d.data("typeahead"), f = "object" == typeof c && c;
            e || d.data("typeahead", e = new b(this, f)), "string" == typeof c && e[c]();
        });
    }, a.fn.typeahead.defaults = {
        source: [],
        items: 8,
        menu: '<ul class="typeahead dropdown-menu"></ul>',
        item: '<li><a href="#"></a></li>',
        display: "name",
        val: "id",
        itemSelected: function() {},
        ajax: {
            url: null,
            timeout: 300,
            method: "post",
            triggerLength: 3,
            loadingClass: null,
            displayField: null,
            preDispatch: null,
            preProcess: null
        }
    }, a.fn.typeahead.Constructor = b, a(function() {
        a("body").on("focus.typeahead.data-api", '[data-provide="typeahead"]', function(b) {
            var c = a(this);
            c.data("typeahead") || (b.preventDefault(), c.typeahead(c.data()));
        });
    });
}(window.jQuery);
//# sourceMappingURL=bootstrap-typeahead.min.js.map
/*! 康美网络医院 最后修改于： 2016-10-20 */